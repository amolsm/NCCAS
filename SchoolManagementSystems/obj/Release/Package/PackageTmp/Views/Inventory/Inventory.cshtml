@model Entity.Categoryviewmodel
@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();

        $("#status").prop('checked', true);
        $("#lblmsg").text('');
        $('#divProductid input').attr("readonly", true);
        if ($("#Inventoryid").val() == "0" || $("#Inventoryid").val() == "") {
            $("#divProductid").hide();
        }

        $("#Quantity").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#Price").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


        $("#result").on("click", ".btn_edit", function (evt) {
            var iid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillInventoryDetails")',
                dataType: 'JSON',
                data: { inventoryid: iid },
                success: function (data) {
                    $("#divProductid").show();
                    $("#Inventoryid").val(data.Inventoryid);
                    $('#catid').val(data.Categoryid);
                    $("#subcatid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("BindSubCategory")',
                        dataType: 'json',
                        data: { categoryid: $("#catid").val() },
                        success: function (datas) {
                            if (datas != "") {
                                var item = '<option value="">Select Sub Category</option>';
                                $.each(datas, function (i, d) {
                                    if (data.SubCategoryid == d.Value)
                                        item += '<option selected="selected" value="' + d.Value + '">' + d.Text + '</option>';
                                    else
                                        item += '<option value="' + d.Value + '">' + d.Text + '</option>';
                                });
                                $("#subcatid").append(item);
                            }
                            else {
                                var item = '<option value="">select Sub Category</option>';
                                $("#subcatid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });

                    $("#Productid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("BindProduct")',
                        dataType: 'json',
                        data: { categoryid: data.Categoryid, subcategoryid: data.SubCategoryid },
                        success: function (datas) {
                            if (datas != "") {
                                var item = '<option value="">Select Product</option>';
                                $.each(datas, function (i, d) {

                                    if (data.Productid == d.Value)
                                        item += '<option selected="selected" value="' + d.Value + '">' + d.Text + '</option>';
                                    else
                                        item += '<option value="' + d.Value + '">' + d.Text + '</option>';
                                });
                                $("#Productid").append(item);
                            }
                            else {
                                var item = '<option value="">select Product</option>';
                                $("#Productid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });

                    $("#Price").val(data.Price);
                    $("#Quantity").val(data.Quantity);

                }
            });
        });

        function clear() {
            $("#divProductid").hide();
            $('#divProductid input').val('0');
            $("#catid").val('');
            $("#subcatid").val('');
            $("#Productid").val('');
            $("#Price").val('0');
            $("#Quantity").val('0.00');
        }

        $("#catid").change(function () {
            $("#Productid").empty();
            $("#subcatid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("BindSubCategory")',
                dataType: 'json',
                data: { categoryid: $("#catid").val() },
                success: function (data) {
                    if (data != "") {
                        var item = '<option value="">Select Sub Category</option>';
                        $.each(data, function (i, d) {
                            item += '<option value="' + d.Value + '">' + d.Text + '</option>';
                        });
                        $("#subcatid").append(item);
                    }
                    else {
                        var item = '<option value="">select Sub Category</option>';
                        $("#subcatid").append(item);
                    }
                },
                error: function (ex) {
                    var item = '<option value="">select Sub Category</option>';
                    $("#subcatid").append(item);
                    //alert('Failed to retrieve states.' + ex);
                }
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("BindProduct")',
                dataType: 'json',
                data: { categoryid: $("#catid").val(), subcategoryid: 0 },
                success: function (data) {
                    if (data != "") {
                        var item = '<option value="">Select Product</option>';
                        $.each(data, function (i, d) {
                            item += '<option value="' + d.Value + '">' + d.Text + '</option>';
                        });
                        $("#Productid").append(item);
                    }
                    else {
                        var item = '<option value="">select Product</option>';
                        $("#Productid").append(item);
                    }
                },
                error: function (ex) {
                    var item = '<option value="">select Product</option>';
                    $("#Productid").append(item);
                    //alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('#subcatid').change(function () {
            $("#Productid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("BindProduct")',
                dataType: 'json',
                data: { categoryid: $("#catid").val(), subcategoryid: $("#subcatid").val() },
                success: function (data) {
                    if (data != "") {
                        var item = '<option value="">Select Product</option>';
                        $.each(data, function (i, d) {
                            item += '<option value="' + d.Value + '">' + d.Text + '</option>';
                        });
                        $("#Productid").append(item);
                    }
                    else {
                        var item = '<option value="">select Product</option>';
                        $("#Productid").append(item);
                    }
                },
                error: function (ex) {
                    var item = '<option value="">select Product</option>';
                    $("#Productid").append(item);
                    //alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('#Productid').change(function () {
            var Product = $('#Productid').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_Inventory")',
                dataType: 'JSON',
                data: { Productid: $('#Productid').val() },
                success: function (data) {
                    if (data != null) {
                        $("#lblmsg").text("Inventory Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "25px" });
                        $('#Productid').val('');
                        return false;
                    }
                }
            });
        });



        $("#reset").click(function () {
            clear();
        });

        $("#result").on("click", ".btn_delete", function (evt) {
            var catid = this.id;
            var flag = confirm('Are you sure you want to delete this Inventory?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLInventory")',
                    data: { evt: "Delete", id: catid, price: 0, Qty: 0, Prodid: 0 },
                    success: function (result) {
                        $("#lblmsg").text("Category deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "25px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#catid").val() == "" || $("#catid").val() == "0") {
                cnt++;
                $("#catid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#catid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Productid").val() == '') {
                cnt++;
                $("#Productid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Productid").css({
                    "border": "",
                    "background": ""
                });
            }

            var length = $('#subcatid > option').length;
            if (length > 1 && ($("#subcatid").val() == "" || $("#subcatid").val() == "0")) {
                cnt++;
                $("#subcatid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#subcatid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Price").val() == '0.00') {
                cnt++;
                $("#Price").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Price").css({
                    "border": "",
                    "background": ""
                });
            }

            if (cnt != 0)
                e.preventDefault();
        }

        $("#insert").click(function () {
            validations();
            var intid = $("#Inventoryid").val();
            var tprice = $("#Price").val();
            var tqty = $("#Quantity").val();
            var prodid = $("#Productid").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DMLInventory")',
                data: { evt: "submit", id: intid, price: tprice, Qty: tqty, Prodid: prodid },
                success: function (result) {
                    $("#lblmsg").text("Product updated successfully!..");
                    $("#lblmsg").css({ "color": "lime" });
                    $("#lblmsg").css({ "font-size": "25px" });
                    $("#result").html(result);
                    clear();
                    ReloadPaging();
                }
            });
        });
        ReloadPaging();
    });


</script>
@Html.HiddenFor(m => m.Inventoryid, new { id = "hdInventoryid" })
@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">
             
		<div class="row-fluid">
                  @Html.Partial("_InventorySubMenu")
	<div id="content" class="span10">
        	<div class="row-fluid">
             
                    <ul class="breadcrumb">
                      <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                       @Html.ActionLink("Inventory Management", "Category", "Inventory", "")<i class="icon-angle-right"></i></li>
                        <li class="active">Inventory Master</li>
                         <div style="float: right;">
                            @using (Html.BeginForm())
                            {

                                @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
                                <input type="submit" value="Find" />
                            }
                        </div>
                    </ul>
                      <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class="form-horizontal" }))
                                        {
                                            @Html.ValidationSummary(true)
                                            <div id="lblmsg" class="control-group">
                                            </div>
                                            <div id="divProductid" class="control-group">
                                                @Html.LabelFor(model => model.Inventoryid, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.EditorFor(model => model.Inventoryid, new { @class = "col-md-5 form-control form_in", disabled = "disabled" })
                                                @Html.ValidationMessageFor(model => model.Inventoryid)
                                                     </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.catid, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.DropDownListFor(model => model.catid, new SelectList(Model.Categorylist, "catid", "catname", "Select Category"), "Select Category", new { @class = "col-md-5 form-control form_in" })
                                                @Html.ValidationMessageFor(model => model.catname)
                                                     </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.subcatid, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.DropDownListFor(model => model.subcatid, new SelectList(Model._subCategorylist, "SubCategoryid", "SubCategoryname", "Select Sub Category"), "Select Sub Category", new { @class = "col-md-5 form-control form_in" })
                                                @Html.ValidationMessageFor(model => model.subcatid)
                                                     </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Productid, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.DropDownListFor(model => model.Productid, new SelectList(Model.productlist, "Productid", "Product", "Select Product"), "Select Product", new { @class = "col-md-5 form-control form_in" })
                                                @Html.ValidationMessageFor(model => model.Productid)
                                                     </div>
                                            </div>
                                            <div id="divProduct" class="control-group">
                                                @Html.LabelFor(model => model.Quantity, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.EditorFor(model => model.Quantity, new { @class = "col-md-5 form-control form_in" })
                                                @Html.ValidationMessageFor(model => model.Quantity)
                                                     </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Price, new { @class = "control-label"  })
                                                 <div class="controls"> 
                                                @Html.EditorFor(model => model.Price, new { @class = "col-md-5 form-control form_in" })
                                                @Html.ValidationMessageFor(model => model.Price)
                                                     </div>
                                            </div>
                                             <div class="form-actions">
                                                <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                                <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                            </div>
                                        }</fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->

                  <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                                @Html.Partial("_Inventorylist")
                                          </div>
                  </div>
                                             
                                                

                                         </div>
        </div>
             
    </div>
</div>
   
            </div>