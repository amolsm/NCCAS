@model Entity.Subjectviewmodel

@{
    ViewBag.Title = "Subject";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();
        $("#status").prop('checked', true);
        $("#M_sub td").css({ "background-color": "orange" });
        $("#lblmsg").text('');
        $('#subjectid input').attr("readonly", true);
        if ($("#subjectid input").val() == "0") {
            $("#subjectid").hide();
        }

        $("#result").on("click", ".edit", function (evt) {
            var Subjectid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillSubjectDetails")',
                dataType: 'JSON',
                data: { Subjectid: Subjectid },
                success: function (data) {
                    clearmsg();
                    $("#Classid").val(data.Classid)
                    $("#subjectid").show();
                    $("#subjectid input").val(data.Subjectid);
                    $("#SubjectNm").val(data.SubjectNm);
                    $("#Dept_Id").val(data.DeptId);
                    $("#Classid").val(data.Courseid);
                    $("#Marks").val(data.Marks);
                    $("#Pass_Marks").val(data.Pass_Marks);
                    $("#status").prop('checked', data.Status);
                    $("#academicyear").val(data.yearid);
                }
            });
        });

        function clear() {
            $("#Classid").val('');
            $("#subjectid").hide();
            $('#subjectid input').val('0');
            $("#SubjectNm").val('');
            $("#Marks").val('');
            $("#Pass_Marks").val('');
            $("#status").prop('checked', false);
            $("#academicyear").val('');
        }
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }


        $('#SubjectNm').blur(function () {
            $("#lblmsg").text("");
            var SubjectNm = $('#SubjectNm').val();
            var Classid = $("#Classid").val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_Subject")',
                dataType: 'JSON',
                data: { SubjectNm: SubjectNm, Classid: Classid },
                success: function (data) {
                    if (data.SubjectNm != null) {
                        $("#msg").show();
                        $("#lblmsg").text("Subject Name Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#SubjectNm').val('');
                        return false;
                    }
                }
            });
        });


        function ReloadState() {
            $("#Classid").empty();
            var item = '<option value="">select Course</option>';
            $("#Classid").append(item);
        }

        function ReloadCountry() {
            if ($("#Dept_Id").val() == "") {
                ReloadState();
            }
            else {
                $("#Classid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#Dept_Id").val() },
                    success: function (course) {
                        if (course != "") {

                            var item = '<option value="">select Course</option>';
                            $.each(course, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#Classid").append(item);
                        }
                        else {
                            var item = '<option value="">select Course</option>';
                            $("#Classid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#Dept_Id").change(function () {
            ReloadCountry();
        })

        $("#Classid").change(function () {
           
            ReloadClass();
        })

        function ReloadYear() {
            $("#academicyear").empty();
            var item = '<option value="">select Year</option>';
            $("#academicyear").append(item);
        }
        function ReloadClass() {
            if ($("#Classid").val() == "") {
                ReloadYear();
                debugger;
            }
            else {
                $("#academicyear").empty();
                debugger;
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetYearClass")',
                    dataType: 'json',
                    data: {
                        depid: $("#Dept_Id").val(),
                        cid: $("#Classid").val()

                    },
                    success: function (year) {
                        if (year != "") {

                            var item = '<option value="">select Year</option>';
                            $.each(year, function (i, year) {
                                item += '<option value="' + year.Value + '">' + year.Text + '</option>';
                            });
                            $("#academicyear").append(item);
                        }
                        else {
                            var item = '<option value="">select Year</option>';
                            $("#academicyear").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }


        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLSubject")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("Subject updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });

        $("#result").on("click", ".delete", function (evt) {
            var Subjectid = this.id;
            var flag = confirm('Are you sure you want to delete this Subject?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLSubject")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Subjectid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Subject deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#Classid").val() == '') {
                cnt++;
                $("#Classid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Classid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#SubjectNm").val() == '') {
                cnt++;
                $("#SubjectNm").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#SubjectNm").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Marks").val() == '') {
                cnt++;
                $("#Marks").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Marks").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Pass_Marks").val() == '') {
                cnt++;
                $("#Pass_Marks").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Pass_Marks").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#academicyear").val() == '') {
                cnt++;
                $("#academicyear").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#academicyear").css({
                    "border": "",
                    "background": ""
                });
            }

            if (cnt != 0)
                e.preventDefault();
        }
        ReloadPaging();
    });
</script>

@Html.HiddenFor(m => m.Subjectid)@Html.Partial("_PermissionHiddenFlds")

<div class="container-fluid-full">
             
		<div class="row-fluid">
             @Html.Partial("_MasterSubMenu")
	<div id="content" class="span10">
        	<div class="row-fluid">
     
            <ul class="breadcrumb">

          <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                @Html.ActionLink("Masters", "Subject", "Masters", "")<i class="icon-angle-right"></i></li>
                <li class="active">Subject Master</li>
           @*     <div style="float:right; ">
                    @using (Html.BeginForm())
                    {

                        @Html.TextBox("Search_Data", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Find" />
                    }
                </div>*@
            </ul>
                 <div class="panel-body"> 
<div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
	<strong><label id="lblmsg"></label></strong> 
	</div>
  <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
	<strong><label id="lblmsgs"></label></strong> 
</div>
</div>

            <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                {
                                    @Html.ValidationSummary(true)
                                   
                                    <div id="subjectid" class="control-group">
                                        @Html.LabelFor(model => model.Subjectid, new { @class="control-label", @for="focusedInput"})
                                          <div class="controls">
                                        @Html.EditorFor(model => model.Subjectid, new {  @class="input-xlarge focused" , @type="text" })
                                        @Html.ValidationMessageFor(model => model.Subjectid)
                                              </div>
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Dept_Id, new { @class = "control-label", @for = "focusedInput" })
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.Dept_Id, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })
                                            @Html.ValidationMessageFor(model => model.Dept_Id)
                                        </div>
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Classid, new {  @class="control-label", @for="focusedInput"})
                                          <div class="controls">
                                        @Html.DropDownListFor(model => model.Classid, new SelectList(Model.Classlist, "Classid", "Classnm", "Select Course"), "Select Course", new { @for = "select" })
                                        @Html.ValidationMessageFor(model => model.Classid)
                                              </div>
                                    </div>

                                    <div class="control-group">
                                        @Html.LabelFor(model => model.academicyear, new { @class = "control-label", @for = "select" })
                                        <div class="controls">
                                            @Html.DropDownListFor(m => m.academicyear, new SelectList(Model.yearlist, "yearid", "YearName", "Select Year"), "Select Year", new { @for = "select" })
                                            @*@Html.EditorFor(model => model.academicyear, new { @class = "col-md-5 form-control form_in" })*@
                                            @Html.ValidationMessageFor(model => model.academicyear)
                                        </div>
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.SubjectNm, new {  @class="control-label", @for="focusedInput" })
                                          <div class="controls">
                                        @Html.EditorFor(model => model.SubjectNm, new {  @class="input-xlarge focused" ,@id="focusedInput", @type="text" })
                                        @Html.ValidationMessageFor(model => model.SubjectNm)
                                              </div>
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Marks, new {  @class="control-label", @for="focusedInput" })
                                          <div class="controls">
                                        @Html.EditorFor(model => model.Marks, new {  @class="input-xlarge focused" ,@id="focusedInput", @type="number" })
                                        @Html.ValidationMessageFor(model => model.Marks)
                                              </div>
                                    </div>
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.Pass_Marks, new {  @class="control-label", @for="focusedInput" })
                                          <div class="controls">
                                        @Html.EditorFor(model => model.Pass_Marks, new {  @class="input-xlarge focused" ,@id="focusedInput", @type="number"})
                                        @Html.ValidationMessageFor(model => model.Pass_Marks)
                                              </div>
                                    </div>
                                
                                    <div class="control-group">
                                        @Html.LabelFor(model => model.status, new {  @class="control-label" })
                                          <div class="controls">
                                        @Html.CheckBoxFor(model => model.status, new { @type="checkbox"})
                                        @Html.ValidationMessageFor(model => model.status)
                                              </div>
                                    </div>
                                  <div class="form-actions">
                                        <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                        <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                    </div>
                                }
                        </fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                              <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                        @Html.Partial("_SubjectList")
                                    </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>
