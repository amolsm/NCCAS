@model Entity.CourseYearviewmodel
@{
    ViewBag.Title = "CourseYear";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}


<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();

        $("#status").prop('checked', true);
        $("#M_sta td").css({ "background-color": "orange" });
        $("#lblmsg").text('');
        $('#id input').attr("readonly", true);
        if ($("#id input").val() == "0") {
            $("#id").hide();
        }

        $("#result").on("click", ".edit", function (evt) {

            var ID = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillCourseYearDetails")',
                dataType: 'JSON',
                data: { courseyearid: ID },
                success: function (data) {
                    clearmsg();
                    $("#id").val(data.id)
                    $("#id").show();
                    $("#id input").val(data.id);
                    $("#DeptId").val(data.dept_id);
                    $("#CourseId").val(data.courseid);
                    $("#academicyear").val(data.academicyear);
                    $("#status").prop('checked', data.status);
                }
            });
        });


        function ReloadState() {
            $("#DeptId").empty();
            var item = '<option value="">select Department</option>';
            $("#DeptId").append(item);
        }

        function ReloadCountry() {
            
            if ($("#CourseId").val() == "") {
                ReloadState();
            }
            else {
                $("#DeptId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#CourseId").val() },
                    success: function (course) {
                        if (course != "") {
                            
                            var item = '<option value="">select Department</option>';
                            $.each(course, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#DeptId").append(item);
                        }
                        else {
                            var item = '<option value="">select Department</option>';
                            $("#DeptId").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#academicyear").change(function () {
            var accadmicyear = $('#academicyear').val();
            var deptid = $('#DeptId').val();
            var courseid = $('#CourseId').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_CourseYear")',
                dataType: 'JSON',
                data: { deptid: deptid, courseid: courseid, accadmicyear: accadmicyear },
                success: function (data) {
                    if (data != null) {
                        $("#msg").show();
                        $("#lblmsg").text("Cobination of Selected Course and Department and Year  Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#academicyear').val('');
                       
                    }
                    else {
                        debugger;
                        clearmsg();
                    }
                }
            });
        });
     

        
        function clear() {
           
            $("#id").hide();
            $('#id input').val('0');
            $("#CourseId").val('');
            $("#DeptId").val('');
            $("#academicyear").val('');
            //$("#status").prop('checked', false);
        }

        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

     

        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLCourseYear")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {

                        $("#msgs").show();
                        $("#lblmsgs").text("Course Year updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });

        $("#result").on("click", ".delete", function (evt) {
            var Divisionid = this.id;
            var flag = confirm('Are you sure you want to delete this State?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLCourseYear")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + id + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Record deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#DeptId").val() == '') {
                cnt++;
                $("#DeptId").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#DeptId").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#CourseId").val() == '') {
                cnt++;
                $("#CourseId").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#CourseId").css({
                    "border": "",
                    "background": ""
                });
            }

            if (cnt != 0)
                e.preventDefault();
        }
        ReloadPaging();
    });
</script>

@Html.HiddenFor(m => m.Id)

@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_MasterSubMenu")
        <div id="content" class="span10">
            <div class="row-fluid">

                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Masters", "CourseYear", "Masters", "")<i class="icon-angle-right"></i>
                    <li class="active">Course Year Master</li>
                 
                </ul>
                <div class="panel-body">
                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        <strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>

                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <form id="frm" class="form-horizontal">


                                <fieldset>

                                    @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                    {
                                        @Html.ValidationSummary(true)

                                        <div id="id" class="control-group">
                                            @Html.LabelFor(model => model.Id, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.Id, new { @class = "input-xlarge focused", @type = "text" })
                                                @Html.ValidationMessageFor(model => model.Id)
                                            </div>
                                        </div>

                                        <div class="control-group">
                                            @Html.LabelFor(model => model.CourseId, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.courselist, "Courseid", "CourseName", "Select Course"), "Select Course", new { @for = "select" })
                                             
                                                @Html.ValidationMessageFor(model => model.CourseId)
                                            </div>
                                        </div>

                                        <div class="control-group">
                                            @Html.LabelFor(model => model.DeptId, new { @class = "control-label", @for = "select" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.DeptId, new SelectList(Model.deptlist, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })
                                                @Html.ValidationMessageFor(model => model.DeptId)
                                            </div>
                                        </div>
                                    

                                        
                                     

                                        <div class="control-group">
                                            @Html.LabelFor(model => model.academicyear, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.academicyear, new SelectList(Model.yearlist, "yearid", "YearName", "Select Year"), "Select Year", new { @for = "select" })
                                                @Html.ValidationMessageFor(model => model.academicyear)
                                            </div>
                                        </div>

                                        <div class="control-group">
                                            @Html.LabelFor(model => model.status, new { @class = "control-label" })
                                            <div class="controls">

                                                @Html.CheckBoxFor(model => model.status, new { @checked = "true" })
                                                @Html.ValidationMessageFor(model => model.status)
                                            </div>
                                        </div>
                                        <div class="form-actions">
                                            <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                            <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                        </div>
                                    }
                                </fieldset>
                            </form>

                        </div>
                    </div><!--/span-->

                </div><!--/row-->
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>  <div class="box-content">
                            @Html.Partial("_CourseYearList")

                        </div>


                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

