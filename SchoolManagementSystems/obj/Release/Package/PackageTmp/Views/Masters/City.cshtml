@model Entity.cityviewmodel
@{
    ViewBag.Title = "City";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();
        $("#status").prop('checked', true);
        $("#M_cty td").css({ "background-color": "orange" });
        $("#lblmsg").text('');
        //        ReloadState();
        $('#cityid input').attr("readonly", true);
        if ($("#cityid input").val() == "0") {
            $("#cityid").hide();
        }

        function ReloadState() {
            $("#Stateid").empty();
            var item = '<option value="">select State</option>';
            $("#Stateid").append(item);
        }

        function ReloadCountry() {
            if ($("#Countryid").val() == "") {
                ReloadState();
            }
            else {
                $("#Stateid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStates")',
                    dataType: 'json',
                    data: { id: $("#Countryid").val() },
                    success: function (states) {
                        if (states != "") {
                            var item = '<option value="">select State</option>';
                            $.each(states, function (i, state) {
                                item += '<option value="' + state.Value + '">' + state.Text + '</option>';
                            });
                            $("#Stateid").append(item);
                        }
                        else {
                            var item = '<option value="">select State</option>';
                            $("#Stateid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        }

        $("#Countryid").change(function () {
            ReloadCountry();
        })

        $("#result").on("click", ".edit", function (evt) {
            var Cityid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillCityDetails")',
                dataType: 'JSON',
                data: { Cityid: Cityid },
                success: function (data) {
                    $("#Countryid").val(data.Countryid);
                    $("#Stateid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetStates")',
                        dataType: 'json',
                        data: { id: $("#Countryid").val() },
                        success: function (states) {
                            if (states != "") {
                                var item = '<option value="">select State</option>';
                                $.each(states, function (i, state) {
                                    item += '<option value="' + state.Value + '">' + state.Text + '</option>';
                                });
                                $("#Stateid").append(item);
                                $("#Stateid").val(data.Stateid);
                            }
                            else {
                                var item = '<option value="">select State</option>';
                                $("#Stateid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    clearmsg();
                    $("#cityid").show();
                    $("#cityid input").val(data.Cityid);
                    $("#CityName").val(data.CityName);
                    $("#status").prop('checked', data.Status);
                }
            });
        });

        function clear() {
            $("#Countryid").val('');
            ReloadState();
            $("#cityid").hide();
            $('#cityid input').val('0');
            $("#CityName").val('');
            //            $("#status").prop('checked', false);
        }

        $('#CityName').blur(function () {
            $("#lblmsg").text("");
            var CityName = $('#CityName').val();
            var Countryid = $("#Countryid").val();
            var Stateid = $("#Stateid").val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_City")',
                dataType: 'JSON',
                data: { CityName: CityName, Countryid: Countryid, Stateid: Stateid },
                success: function (data) {
                    if (data.CityName != null) {
                        $("#msg").show();
                        $("#lblmsg").text("City Name Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#CityName').val('');
                        return false;
                    }
                }
            });
        });

        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLCity")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("City updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

        $("#result").on("click", ".delete", function (evt) {
            var Cityid = this.id;
            var flag = confirm('Are you sure you want to delete this City?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLCity")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Cityid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("City deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#Countryid").val() == '') {
                cnt++;
                $("#Countryid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Countryid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Stateid").val() == '') {
                cnt++;
                $("#Stateid").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Stateid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#CityName").val() == '') {
                cnt++;
                $("#CityName").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#CityName").css({
                    "border": "",
                    "background": ""
                });
            }

            if (cnt != 0)
                e.preventDefault();
        }

        ReloadPaging();
    });
</script>

@Html.HiddenFor(m => m.Cityid)@Html.Partial("_PermissionHiddenFlds")

<div class="container-fluid-full">
             
		<div class="row-fluid">
             @Html.Partial("_MasterSubMenu")
	<div id="content" class="span10">
        	<div class="row-fluid">
        
     
            <ul class="breadcrumb">
             <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
               @Html.ActionLink("Masters", "City", "Masters", "")<i class="icon-angle-right"></i>
                <li class="active">City Master</li>
         @*       <div style="float:right; ">
                    @using (Html.BeginForm())
                    {

                        @Html.TextBox("Search_Data", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Find" />
                    }
                </div>*@
            </ul>
                <div class="panel-body"> 
<div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
	<strong><label id="lblmsg"></label></strong> 
	</div>
  <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
	<strong><label id="lblmsgs"></label></strong> 
</div>
</div>

          <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                {
                                    @Html.ValidationSummary(true)
                                  
                                    <div id="cityid" class="control-group">
                                        @Html.LabelFor(model => model.Cityid, new {  @class="control-label", @for="focusedInput"  })
                                        <div class="controls">
                                        @Html.EditorFor(model => model.Cityid, new { @class="input-xlarge focused" ,@id="focusedInput", @type="text"  })
                                        @Html.ValidationMessageFor(model => model.Cityid)
                                            </div>
                                    </div>
                                    <div  class="control-group">
                                        @Html.LabelFor(model => model.Countryid, new {  @class="control-label"  })
                                        <div class="controls">
                                        @Html.DropDownListFor(model => model.Countryid, new SelectList(Model.countrylist, "Countryid", "CountryName", "Select Country"), "Select Country", new { @class = "col-md-5 form-control form_in" })
                                        @Html.ValidationMessageFor(model => model.Countryid)
                                            </div>
                                    </div>
                                    <div  class="control-group">
                                        @Html.LabelFor(model => model.Stateid, new {  @class="control-label"  })
                                        <div class="controls">
                                        @Html.DropDownListFor(model => model.Stateid, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state", new { @class = "col-md-5 form-control form_in" })
                                        @Html.ValidationMessageFor(model => model.Stateid)
                                            </div>
                                    </div>
                                    <div  class="control-group">
                                        @Html.LabelFor(model => model.CityName, new {@class="control-label", @for="focusedInput"})
                                        <div class="controls">
                                        @Html.EditorFor(model => model.CityName, new {@class="input-xlarge focused" ,@id="focusedInput", @type="text" })
                                        @Html.ValidationMessageFor(model => model.CityName)
                                            </div>
                                    </div>
                                    <div  class="control-group">
                                        @Html.LabelFor(model => model.status, new {@class="control-label" })
                                        <div class="controls">
                                        @Html.CheckBoxFor(model => model.status, new { @type="checkbox", @id="inlineCheckbox1"  })
                                        @Html.ValidationMessageFor(model => model.status)
                                            </div>
                                    </div>
                                   <div class="form-actions">
                                        <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                        <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                    </div>
                                }
                          </fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                              <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                
                                        @Html.Partial("_CityList")
                                    </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>