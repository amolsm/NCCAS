@model Entity.BookAllocation
    @{
    ViewBag.Title = "BookIssue";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
     

      rel="Stylesheet" type="text/css" /> 

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>



<style type="text/css">
    body {
        font-family: Arial;
        font-size: 10pt;
    }
     fieldset {
        border: 1px solid #777;
    }

    legend {
        float: left;
        margin-right: 0.5em;
        padding-top: 0.2em;
        text-align: left;
        font-size: 18px;
        background-color: gainsboro;
    }
      .control-group.addor .control-label:before {
        content: "OR       ";
        color: red;
    }
</style>

<script type="text/javascript">

        $(function () {
            $("#StudentName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Library/AutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfStudentid").val(i.item.val);
                    $("#StudentId").val(i.item.val);
                },
                minLength: 1
            });

            //
            $("#booktitle").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Library/BookAutoComplete/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#hfcallno").val(i.item.val);

                },
                minLength: 1
            });
        });
        $(document).ready(function () {


            $('#btnSubmit').click(function () {

                var stdname = $('#StudentName').val();
                if ($('#StudentId').val() == '')
                { studentid = "0"; } else { var studentid = $('#StudentId').val(); }
                if ($('#hfStudentid').val() == '')
                { var stdid = "0" }
                else { var stdid = $('#hfStudentid').val() }
                $("#tblProducts tbody tr").remove();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBookIssueDetails")',
                    dataType: 'JSON',
                    data: { StudentName: stdname, Studentid: stdid, Stdid: studentid },
                    success: function (data) {
                        if (data != "") {
                            var items = '';

                            $.each(data, function (i, item) {
                                debugger;

                                var rows = "<tr>"
                                + "<td class='prtoducttd'>" + item.StudentId + "</td>"
                                + "<td class='prtoducttd'>" + item.Studnm + "</td>"
                                + "<td class='prtoducttd'>" + item.CallNo + "</td>"
                                + "<td class='prtoducttd'>" + item.AccessorNo + "</td>"
                                + "<td class='prtoducttd'>" + item.booktitle + "</td>"
                                + "<td class='prtoducttd'>" + (new Date(parseInt(item.Issuedatetime.substr(6)))).toDateString() + "</td>"
                                + "<td class='prtoducttd'>" + item.NoOfDaysTill + "</td>"
                             
                                + "</tr>";
                                $('#tblProducts tbody').append(rows);


                            });
                        } else {
                            var rows = "<tr>"
                                + "<td class='prtoducttd' colspan='7'>" +"No Records Found"+ "</td>"

                                + "</tr>";
                            $('#tblProducts tbody').append(rows);
                        }
                    },
                    error: function (ex) {
                        var r = jQuery.parseJSON(response.responseText);
                        alert("Message: " + r.Message);
                        alert("StackTrace: " + r.StackTrace);
                        alert("ExceptionType: " + r.ExceptionType);
                    }
                });
                $('#myModal').modal('show');
                return false;


            })

            function clearmsg() {
                $("#msgs").hide();
                $("#msg1").hide();
            }
           

            $('#btnBookDetails').click(function () {
                debugger;
                clearmsg();
                var bookname = $('#booktitle').val();
                var callno = $('#CallNo').val();
                var hcallid = $('#hfcallno').val()
             
                $("#tblBooks tbody tr").remove();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBookDetails")',
                    dataType: 'JSON',
                    data: { BookName: bookname, callno: callno },
                    success: function (data) {
                        if (data != "") {
                            var items = '';

                            $.each(data, function (i, item) {

                                var id = "<tr id=" + item.Id + ">";
                                if (item.Status == "Not Available")
                                { var checkbox = "<td class='prtoducttd'>" + "<input type=checkbox disabled class='addcls' id=Allot_" + item.Id + " value='" + item.Id + "'>" + "</td>" }
                                else { var checkbox = "<td class='prtoducttd'>" + "<input type=checkbox class='addcls'  id=Allot_" + item.Id +" value='" + item.Id + "'>"+ "</td>" }

                                var row = "<td class='prtoducttd' id='call"+ item.Id + "'>" + item.CallNo + "</td>"
                                 + "<td class='prtoducttd'>" + item.AccessorNo + "</td>"
                                 + "<td class='prtoducttd'>" + item.TitleName + "</td>"
                                 + "<td class='prtoducttd'>" + item.Authorname + "</td>"
                                 + "<td class='prtoducttd'>" + item.Publisher + "</td>"
                                 + "<td class='prtoducttd' id='s "+ item.Status + "'>" + item.Status + "</td>"

                                 + "</tr>";
                                var rows = id + checkbox + row;
                                $('#tblBooks tbody').append(rows);


                            });
                        } else {
                            $("#tblBooks tbody tr").remove();
                            var rows = "<tr>"
                                + "<td class='prtoducttd' colspan='7'>" + "No Records Found" + "</td>"

                                + "</tr>";
                            $('#tblBooks tbody').append(rows);
                        }
                    },
                    error: function (ex) {
                        var r = jQuery.parseJSON(response.responseText);
                        alert("Message: " + r.Message);
                        alert("StackTrace: " + r.StackTrace);
                        alert("ExceptionType: " + r.ExceptionType);
                    }
                });
                $('#tblBook').show();
                return false;


            });

            $("#btnSaveBookAllotment").click(function () {
                clearmsg();
                var bookallotments = [];
                if ($("#NoDays").val()=='') {
                    var nodays = 0;
                } else { var nodays = $("#NoDays").val(); }
                if ($("#StudentId").val() == '') {
                    var studentids = 0;
                } else { var studentids = $("#StudentId").val(); }
               var booktitle = ($("#booktitle").val());
               if (nodays != 0 && studentids != 0)
               {
                $('input:checkbox.addcls').each(function (evt) {
                    
                    var ndays = ($("#NoDays").val());
                    var studentid = ($("#StudentId").val());
                    
                    var bookids = ($(this).val());
                    if ($(this).prop('checked')) {
                        var rturnflag = 0;
                        var hcallid = $('#hfcallno').val()
                       
                        bookallotments.push(studentid + "," + bookids + "," + ndays + "," + rturnflag + "," + hcallid);

                    }
                    else {
                        //var ndays= '';
                        //var studentid = '';
                        //var bookids = '';
                       
                    }

                });
               
                if (bookallotments != "") {
                    var options = {};
                    options.type = "POST",
                    options.url = '@Url.Action("StudentBookAllotment")',
                    options.data = JSON.stringify(bookallotments);
                    options.contentType = "application/json";
                    options.success = function (bookallotments) {
                        $("#msgs").show();
                        $("#lblmsgs").text("Book Allotment  successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        var Table = document.getElementById("tblBooksBody");
                        Table.innerHTML = "<tr>"
                                + "<td class='prtoducttd' colspan='7'>" + "" + "</td>"

                                + "</tr>";
                      
                        ReloadPaging();
                    };
                    options.error = function (bookallotments) {
                        $("#msg1").show();
                        $("#lblmsg").text("Error while sending massage !..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#tblBooks").html(result);
                    };
                    $.ajax(options);
                }
            }
            else {
                $("#msg1").show();
                $("#lblmsg").text("Please Fill Proper Details for Book Allotment");
                $("#lblmsg").css({ "color": "orange" });
                $("#lblmsg").css({ "font-size": "15px" });
                $("#tblBooks").html(result);
               
            }



            });

            function Validations(e) {
                var cnt = 0;
                if ($("#StudentId").val() == '') {
                    cnt++;
                    $("#StudentId").css({
                        "border": "1px solid red"
                    });
                    alert("StudentId  is Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#StudentId").css({
                        "border": "",
                        "background": ""
                    });
                }
                if ($("#CallNo").val() == '') {
                    cnt++;
                    $("#CallNo").css({
                        "border": "1px solid red"
                    });
                    alert("CallNo Id  is Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#CallNo").css({
                        "border": "",
                        "background": ""
                    });
                }


                if (cnt != 0) {
                    e.preventDefault();
                }
            }

            ReloadPaging();

        });
</script>

<style type="text/css">
    .modal {
    position: fixed;
    top: 10%;
    left: 50%;
    z-index: 1050;
    width: 60%;
    margin-left: -30%;
    background-color: #fff;
    border: 1px solid #999;
    border: 1px solid rgba(0,0,0,0.3);
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px;
    outline: 0;
    -webkit-box-shadow: 0 3px 7px rgba(0,0,0,0.3);
    -moz-box-shadow: 0 3px 7px rgba(0,0,0,0.3);
    box-shadow: 0 3px 7px rgba(0,0,0,0.3);
    -webkit-background-clip: padding-box;
    -moz-background-clip: padding-box;
    background-clip: padding-box;
}
    .tblProducts {
        font-family: verdana,arial,sans-serif;
        font-size: 11px;
        color: #333333;
        border-width: 1px;
        border-color: #666666;
        border-collapse: collapse;
    }

    .productth {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #dedede;
    }

    .prtoducttd {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #ffffff;
    }
      .control-group.required .control-label:after {
        content: "*";
        color: red;

    }
</style>
    
    <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">List Of Books Not Return By Student</h4>
                </div>
                <div class="modal-body">
                    <p>
                        <b>List of Books</b><br>
                        <table id="tblProducts" class="tblProducts">
                            <thead>
                                <tr>
                                    <th align="left" class="productth">Student Id</th>
                                    <th align="left" class="productth">Student Name</th>
                                    <th align="left" class="productth">CallNo</th>
                                    <th align="left" class="productth">AccessorNo</th>
                                    <th align="left" class="productth">Book Name</th>
                                    <th align="left" class="productth">Issue Date</th>
                                    <th align="left" class="productth">No Of Days</th>
                                  
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
 
<div class="container-fluid-full">
   
    <div class="row-fluid">
        @Html.Partial("_LibrarymanagementList")
        <div id="content" class="span10">
            <div class="row-fluid">
                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Library Management", "Index", "Library", "")<i class="icon-angle-right"></i>
                    </li>
                    <li class="active">Book Issue Form</li>
                </ul>
                <div id="msgs" hidden="hidden" visible="false" class="alert alert-success">
                    <strong><label id="lblmsgs"></label></strong>
                </div>
                <div id="msg1" hidden="hidden" visible="false" class="alert alert-warning">
                    <strong><label id="lblmsg"></label></strong>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Allocate Books</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">


                            <div id="frm" class="form-horizontal">
                                <div class="control-group span5 required ">

                                    @Html.LabelFor(model => model.StudentId, new { @class = "control-label", @for = "focusedInput" })

                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.StudentId, new { placeholder = "Enter Student Id", @type = "number", @min = "0", @class = "input" })
                                      

                                    </div>
                                   
                                </div>
                              
                                <div class="control-group span5 addor ">
                                    
                                    @Html.LabelFor(model => model.StudentName, new { @class = "control-label", @for = "focusedInput" })

                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.StudentName, new { placeholder = "Enter Student Name", @class = "input" })
                                        <input type="hidden" id="hfStudentid" name="Studentids" />
                                        <br /><br />
                                      
                                    </div>
                                </div>

                                    @*<input type="text" id="txtBookName" name="BookName" />*@
                                 <div class="control-group span5  pull-right">

                                    <input type="submit" id="btnSubmit" value="Check Previous Record" class="btn-primary" />
                                    &nbsp;&nbsp;&nbsp;<input type="button" value="Add New" class="btn-primary" onClick="window.location.reload()">
                                    
                                </div>
                              
                                <div id="bookshow" class="span10">
                                    <fieldset class="test">
                                 
                                        <legend>Book Search</legend>
                                        <br />
                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.CallNo, new { @class = "control-label", @for = "focusedInput" })

                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.CallNo, new { placeholder = "Enter Call Number", @class = "input" })
                                            </div>
                                        </div>
                                    <div class="control-group span5 addor">
                                        @Html.LabelFor(model => model.booktitle, new { @class = "control-label", @for = "focusedInput" })

                                        <div class="controls">
                                            @Html.TextBoxFor(model => model.booktitle, new { placeholder = "Enter Book Name", @class = "input" })
                                            <input type="hidden" id="hfcallno" name="hfcallno" />
                                            <br /><br />
                                        </div>
                                    </div>

                                        <div class="control-group span5 required">
                                            @Html.LabelFor(model => model.NoDays, new { @class = "control-label", @for = "focusedInput" })

                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.NoDays, new { placeholder = "Enter Number Of Days", @type = "number", @min = "1",@class = "input" })
                                              
                                            </div>
                                        </div>
                                     
                                            <div class="control-group span5  pull-right">

                                                <input type="submit" id="btnBookDetails" value="Search Book" class="btn-primary" />
                                                &nbsp;&nbsp;&nbsp;&nbsp; <input type="submit" id="btnSaveBookAllotment" value="Allotment Book" class="btn-primary" />

                                            </div>
                                            <br />
                                            <div id="tblBook" hidden>
                                                <table id="tblBooks" class="table tb-parshav tablesorter">
                                                    <thead>
                                                        <tr>
                                                            <th align="left" class="productth">Select</th>
                                                            <th align="left" class="productth">CallNo</th>
                                                            <th align="left" class="productth">AccessorNo</th>
                                                            <th align="left" class="productth">Book Name</th>
                                                            <th align="left" class="productth">Author Name</th>
                                                            <th align="left" class="productth">Publisher Name</th>
                                                            <th align="left" class="productth">Status</th>

                                                        </tr>
                                                    </thead>
                                                    <tbody id="tblBooksBody"></tbody>
                                                </table>
                                            </div>
                                            <br />



</fieldset>
                                 
                                    </div>
                               

                                </div>

                            </div>
                       

                        </div>
                    </div>
                </div>
            </div>
</div>
</div>
