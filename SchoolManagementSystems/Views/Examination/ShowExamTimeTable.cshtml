@model Entity.Examinationviewmodel
@{
    ViewBag.Title = "ShowExamTimeTable";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script type="text/javascript">

    $(document).ready(function () {
        FillPermission();

        function ReloadState() {
            $("#DeptId").empty();
            var item = '<option value="">select Department</option>';
            $("#DeptId").append(item);
        }

        function ReloadCountry() {
            if ($("#CourseId").val() == "") {
                ReloadState();
            }
            else {

                $("#DeptId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#CourseId").val() },
                    success: function (course) {
                        if (course != "") {

                            var item = '<option value="">select Department</option>';
                            $.each(course, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#DeptId").append(item);
                        }
                        else {
                            var item = '<option value="">select Department</option>';
                            $("#DeptId").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#CourseId").change(function () {

            ReloadCountry();
        })


        function ReloadYear() {
            $("#yearid").empty();
            var item = '<option value="">select Year</option>';
            $("#yearid").append(item);
        }

        function ReloadCourseYear() {
            if ($("#DeptId").val() == "") {
                ReloadYear();
            }
            else {

                $("#yearid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourseYear")',
                    dataType: 'json',
                    data: {
                        courseid: $("#CourseId").val(),
                        deptid: $("#DeptId").val()
                    },
                    success: function (yeardata) {
                        if (yeardata != "") {

                            var item = '<option value="">select Year</option>';
                            $.each(yeardata, function (i, yeardata) {
                                item += '<option value="' + yeardata.Value + '">' + yeardata.Text + '</option>';
                            });
                            $("#yearid").append(item);
                        }
                        else {
                            var item = '<option value="">select Year</option>';
                            $("#yearid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }
        $("#DeptId").change(function () {

            ReloadCourseYear();
        })

        @*function GetParameterValues(param) {
            var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < url.length; i++) {
                var urlparam = url[i].split('=');
                if (urlparam[0] == param) {
                    return urlparam[1];
                }
            }
        }

        var Examyear = GetParameterValues('ExamYear');
        var ExamTypeid = GetParameterValues('ExaminationTypeid');
        var Classid = GetParameterValues('Classid');
        if (Examyear != null && ExamTypeid != null && Classid != null) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DisplayExamTimeTable")',
                dataType: 'json',
                data: { Classid: Classid, ExamTypeid: ExamTypeid, ExamYear: Examyear },
                success: function (ExaminationDetail) {
                    if (ExaminationDetail != "") {
                        var item = '<tr><th>Exam Name</th><th>Exam Date</th><th>Exam Start Time</th><th>Exam End Time</th><th>Exam Type</th><th>Exam Subject</th><th>Exam Class</th><th>Exam Year</th></tr>';
                        $.each(ExaminationDetail, function (i, Exam) {
                            item += '<tr>'
                            item += '<td>' + Exam.ExamName + '</td>';
                            item += '<td>' + Exam.ExamDate + '</td>';
                            item += '<td>' + Exam.ExamStartDate + '</td>';
                            item += '<td>' + Exam.ExamEndDate + '</td>';
                            item += '<td>' + Exam.ExamType + '</td>';
                            item += '<td>' + Exam.ExamSubject + '</td>';
                            item += '<td>' + Exam.ExamClass + '</td>';
                            item += '<td>' + Exam.ExamYear + '</td>';
                        });
                        $("#tblExamTimeTable").append(item);
                    }
                    else {
                        var item = '<option value="0">No Records</option>';
                        $("#tblExamTimeTable").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });

            $("#Classid").prop("disabled", true);
            $("#ExaminationTypeid").prop("disabled", true);
            $("#ExamYear").prop("disabled", true);
            $("#display").hide();
            $("#publish").hide();

        }*@

        $("#display").click(function (e) {
            if (Validations(e) == false)
                return false;
            $("#tblExamTimeTable").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DisplayExamTimeTable")',
                dataType: 'json',
                data: { ExamTypeid: $("#ExaminationTypeid").val(), courseid: $("#CourseId").val(), departmentid: $("#DeptId").val(), yearid: $("#yearid").val() },
                success: function (ExaminationDetail) {
                    if (ExaminationDetail != "") {
                        var item = '<tr><th>Exam Id</th><th>Exam Name</th><th>Is Publish</th><th>Status</th><th>View</th><th>Edit</th><th>Publish</th></tr>';
                        $.each(ExaminationDetail, function (i, Exam) {
                            item += '<tr>'
                            item += '<td>' + Exam.ExamId + '</td>';
                            item += '<td>' + Exam.ExamName + '</td>';
                            item += '<input type="hidden"  id=Examnm' + Exam.ExamId + ' value=' + Exam.ExamName + ' />';
                            if (Exam.IsPublish == 1)
                            { item += '<td>Yes</td>'; }
                            else { item += '<td>No</td>'; }
                            if (Exam.IsActive == true)
                            { item += '<td>Active</td>'; }
                            else { item += '<td>InActive</td>'; }
                            item += '<td><input type="submit" Class="_view btn-info" id=' + Exam.ExamId + ' value="View" /></td>';
                            if (Exam.IsPublish == 1)
                            { item += '<td><input type="submit" Class="edit btn-link"  id=' + Exam.ExamId + ' value="Edit" /></td>'; }
                            else { item += '<td><input type="submit" Class="edit btn-link" id=' + Exam.ExamId + ' value="Edit" /></td>'; }

                           
                            if (Exam.IsPublish == 1)
                            { item += '<td><input type="submit" Class="publish btn-primary" disabled="disabled" id=' + Exam.ExamId + ' value="Publish" /></td>'; }
                            else { item += '<td><input type="submit" Class="publish btn-primary" id=' + Exam.ExamId + ' value="Publish" /></td>'; }
                           

                        });
                        $("#tblExamTimeTable").append(item);
                    }
                    else {
                        var item = '<option value="0">No Records</option>';
                        $("#tblExamTimeTable").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });


            $("#tblExamTimeTable").on("click", "input.edit", function () {
                var Examid = this.id;
                location.href = '/Examination/ExamTimeTable?Examid=' + Examid;
            });

            $("#tblExamTimeTable").on("click", "input.publish", function () {
                debugger;
                var Examid = this.id;
                var act = 'Publish';
                var flag = confirm('Are you sure you want to publish this Exam Time table?');
                if (flag==true) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("PublishExam")',
                        dataType: 'json',
                        data: { Examid: Examid },
                        success: function (resultcount) {
                            $("#msgs").show();
                            $("#lblmsgs").text("Exam Time table  published successfully!..");
                            $("#lblmsgs").css({ "color": "green" });
                            $("#lblmsgs").css({ "font-size": "15px" });
                            $("#result").html(result);
                            clear();

                            ReloadPaging();
                        }
                    });
                }
            });

            return false;
        })

        $("#tblExamTimeTable").on("click", "input._view", function () {
            debugger;
            var Examid = this.id;
            debugger;
            var ExamName = ($('#Examnm' + Examid).val());
            var CourseName = ($("#CourseId option:selected").text());
            var DeptName = ($("#DeptId option:selected").text());
            var YearNm = ($("#yearid option:selected").text());
            var labeltext = CourseName +" Department Of "+ DeptName+" " + ExamName +" "+ YearNm+" Examination Time Table"
            $('#lblheaddata').text(labeltext);
            $("#tblsubjectlist tbody tr").remove();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetExamSubjectList")',
                dataType: 'JSON',
                data: { Examid: Examid },
                success: function (data) {
                    if (data != "") {
                        var items = '';

                        $.each(data, function (i, item) {

                             var id = "<tr id=" + item.ExSubId + ">";
                             var row = "<td  class='prtoducttd'style='width:10%'>" + item.subjectcode + "</td>"
                             + "<td class='prtoducttd' style='width:50%'>" + item.SubjectNm + "</td>"
                             + "<td class='prtoducttd' style='width:20%'>" + item.ExamDate + "</td>"
                             + "<td class='prtoducttd'style='width:10%'>" + item.ExamStartTime + "</td>"
                             + "<td class='prtoducttd' style='width:10%'>" + item.ExamEndTime + "</td>"
                             + "</tr>";
                            var rows = id + row;
                            $('#tblsubjectlist tbody').append(rows);


                        });
                    } else {
                        $("#tblsubjectlist tbody tr").remove();
                        var rows = "<tr>"
                            + "<td class='prtoducttd' colspan='5'>" + "No Records Found" + "</td>"

                            + "</tr>";
                        $('#tblsubjectlist tbody').append(rows);
                    }
                },
                error: function (ex) {
                    var r = jQuery.parseJSON(response.responseText);
                    alert("Message: " + r.Message);
                    alert("StackTrace: " + r.StackTrace);
                    alert("ExceptionType: " + r.ExceptionType);
                }
            });
            $('#myModal').modal('show');
            $('#tblsubjectlist').show();
            return false;


        });


        $("#publish").click(function (e) {
            if (Validations(e) == false)
                return false;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("PublishExam")',
                data: $('#frm').serialize() + "&evt=submit",
                success: function (result) {
                    $("#msgs").show();
                    $("#lblmsgs").text("Exam Time table  updated successfully!..");
                    $("#lblmsgs").css({ "color": "green" });
                    $("#lblmsgs").css({ "font-size": "15px" });
                    $("#result").html(result);
                    clear();

                    ReloadPaging();
                }
                });
        });

        function Validations(e) {
            var cnt = 0;

            if ($("#ExaminationTypeid").val() == '' || $("#ExaminationTypeid").val() == '0') {
                cnt++;
                $("#ExaminationTypeid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#ExaminationTypeid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#CourseId").val() == '' || $("#CourseId").val() == '0') {
                cnt++;
                $("#CourseId").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#CourseId").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#DeptId").val() == '' || $("#DeptId").val() == '0') {
                cnt++;
                $("#DeptId").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#DeptId").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#yearid").val() == '' || $("#yearid").val() == '0') {
                cnt++;
                $("#yearid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#yearid").css({
                    "border": "",
                    "background": ""
                });
            }



            if (cnt != 0) {
                return false;
            }
        }





    });
    function PrintPanel(id) {
        var id;
        var panel = document.getElementById(id);
        var printWindow = window.open('', '', 'height=600px,width=800px');
        printWindow.document.write("<html> <head> <style type='text/css'>.style1{border-collapse:collapse;font-size: 12px; font-family: sans-serif;} .dispnone {display:none;}.tblsubjectlist {font-family: verdana,arial,sans-serif;font-size: 11px;color: #333333;border-width: 1px;border-color: #666666;border-collapse: collapse;}.productth {border-width: 1px;padding: 8px;border-style: solid;border-color: #666666;background-color: #dedede;}.prtoducttd {border-width: 1px;padding: 8px;border-style: solid;border-color: #666666;background-color: #ffffff;}</head></style> ");
        printWindow.document.write('</head><body >');
        printWindow.document.write(panel.innerHTML);
        printWindow.document.write('</body></html>');
        printWindow.document.close();
        setTimeout(function () {
            printWindow.print();
        }, 500);
        return false;
    }
</script>
<style type="text/css">
.modal-header {
    position: relative;
}
    .modal {
    width: 60%;
    margin-left: -30%;
    }
.mynewclassclose {
   cursor: pointer;
    position: absolute;
    right: -13px;
    text-align: center;
    top: -13px;
    width: 35px;
    opacity: 1;
}
.mynewclassclose:hover {
    opacity: 2;
}
.tblsubjectlist {
        font-family: verdana,arial,sans-serif;
        font-size: 11px;
        color: #333333;
        border-width: 1px;
        border-color: #666666;
        border-collapse: collapse;
    }

    .productth {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #dedede;
    }

    .prtoducttd {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #ffffff;
    }

</style>
@Html.Partial("_PermissionHiddenFlds")
<div class="modal fade" id="myModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
               
                <button type="button" class="close mynewclassclose" data-dismiss="modal" aria-hidden="true" aria-label="Close"><img src="/images/closebtn.png" alt=""></button>
                <h4 class="modal-title">Time Table</h4>
            </div>
            <div id ="printtable"class="modal-body">
                <p> 
                    <table id="tblsubjectlist" class="tblsubjectlist">
                        <thead>
                            <tr><th align="center" colspan="5" class="productth">
                                    <label style="font-weight: bold;" id="lbllogo">Nanjil Catholic College Of Arts & Science</label><br />
                                  <label style="font-weight: bold;" id="lblheaddata"></label><br/></th></tr>
                            <tr>
                                <th align="left" class="productth">Sub.Code</th>
                                <th align="left" class="productth">Subject</th>
                                <th align="left" class="productth">Date</th>
                                <th align="left" class="productth">StartTime</th>
                                <th align="left" class="productth">EndTime</th>
                             
                            </tr>
                        </thead>
                        <tbody></tbody>
                        
                    </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary"  onclick="PrintPanel('printtable');">Print</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<div class="container-fluid-full">
             
		<div class="row-fluid">
              @Html.Partial("_ExaminationMenuList")
	<div id="content" class="span10">
        	<div class="row-fluid">
              
                    <ul class="breadcrumb">
                         <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                       @Html.ActionLink("Examination Management", "Index", "Attendance", "")<i class="icon-angle-right"></i></li>
                        <li class="active">Exam Time Table</li>
                    </ul>
                 <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                 
                                        @using (Html.BeginForm("PublishExam", "Examination", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm", @class = "form-horizontal" }))
                                        {
                                           <div class="control-group">
                                                @TempData["ErrorMessage"]
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.ExaminationTypeid, new { @class = "control-label", @for = "select" })
                                                <div class="controls">
                                                    @Html.DropDownListFor(model => model.ExaminationTypeid, new SelectList(Model.ExaminationTypeList, "ExaminationTypeId", "ExaminationType", "Select Examination Type"), "Select Examination Type", new { @for = "select" })
                                                    @Html.ValidationMessageFor(model => model.ExaminationTypeid)
                                                </div>
                                            </div>
                                              


                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.CourseId, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.CourseId, new SelectList(Model._Courselist, "Courseid", "CourseName", "Select Course"), "Select Course", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.CourseId)
                                                    </div>
                                                </div>

                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.DeptId, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.DeptId, new SelectList(Model._Deptlist, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.DeptId)
                                                    </div>
                                                </div>

                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.yearid, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.yearid, new SelectList(Model._yearlist, "yearid", "YearName", "Select Year"), "Select Year", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.yearid)
                                                    </div>
                                                </div>
                                           <div class="form-actions">
                                                <input type="submit" action="display" class="btn btn-primary" id="display" value="Display" />
                                                <input type="submit" action="publish" class="btn btn-primary hidden"  id="publish" value="Publish" />
                                            </div>
                                        }  </fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                            <div id="result" class="table-responsive" style="color: #23527c;">
                                <table class="table tb-parshav" id="tblExamTimeTable">
                                    <tr>
                                        <td></td>
                                    </tr>
                                   
                                </table>
                               
                            </div>
                            <!-- table end -->
                        </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>