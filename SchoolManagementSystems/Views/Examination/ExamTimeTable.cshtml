@model Entity.Examinationviewmodel
@{
    ViewBag.Title = "ExamTimeTable";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<style type="text/css">
    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }

    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }
</style>
<script type="text/javascript">

    $(document).ready(function () {
        FillPermission();
      
        $("#insert").click(function (e) {
            Validations(e);
        });

        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

      
        $('#datepicker').datepicker('setDate', new Date());

        $('#ui-datepicker-div').hide();

        $('#StaffAbsent').change(function () {
            if ($(this).is(":checked")) {
                $('#staffreason').css('display', 'block');
            }
            else {
                $('#staffreason').css('display', 'none');
            }
        });


        function Validations(e) {
            var cnt = 0;
            if ($("#ExaminationTypeid").val() == '' || $("#ExaminationTypeid").val() == '0') {
                cnt++;
                $("#ExaminationTypeid").css({
                    "border": "2px solid red"
                });
                alert("Examination Type is Mandatory!");
                e.preventDefault();
                $("#ExaminationTypeid").focus();
                return false;
            }
            else {
                $("#ExaminationTypeid").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#ExaminationName").val() == '') {
                cnt++;
                $("#ExaminationName").css({
                    "border": "2px solid red"
                });
                alert("Examination Name Mandatory!");
                e.preventDefault();
                $("#ExaminationName").focus();
                return false;
            }
            else {
                $("#ExaminationName").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#CourseId").val() == '' || $("#CourseId").val() == '0') {
                cnt++;
                $("#CourseId").css({
                    "border": "2px solid red"
                });
                alert("Course is Mandatory!");
                e.preventDefault();
                $("#CourseId").focus();
                return false;
            }
            else {
                $("#CourseId").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#DeptId").val() == '' || $("#DeptId").val() == '0') {
                cnt++;
                $("#DeptId").css({
                    "border": "2px solid red"
                });
                alert("Department is Mandatory!");
                e.preventDefault();
                $("#DeptId").focus();
                return false;
            }
            else {
                $("#DeptId").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#yearid").val() == '' || $("#yearid").val() == '0') {
                cnt++;
                $("#yearid").css({
                    "border": "2px solid red"
                });
                alert("Year is Mandatory!");
                e.preventDefault();
                $("#yearid").focus();
                return false;
            }
            else {
                $("#yearid").css({
                    "border": "",
                    "background": ""
                });
            }
            var ctrlcnt = $('#ctrlcnt').val();
            if (ctrlcnt > 0) {
                for (var i = 0; i < ctrlcnt; i++) {
                    var subjectids = ($("#hsubjectid_" + i).val());

                    if ($("#date_" + subjectids).val() == '') {
                        cnt++;
                        $("#date_" + subjectids).css({
                            "border": "2px solid red"
                        });
                        alert("Date  is Mandatory!");
                        e.preventDefault();
                        $("#date_" + subjectids).focus();
                        return false;
                    } else {
                        $("#date_" + subjectids).css({
                            "border": "",
                            "background": ""
                        });
                    }
                    if ($("#starttime_" + subjectids).val() == '') {
                        cnt++;
                        $("#starttime_" + subjectids).css({
                            "border": "2px solid red"
                        });
                        alert("Start time  is Mandatory!");
                        e.preventDefault();
                        $("#starttime_" + subjectids).focus();
                        return false;
                    } else {
                        $("#starttime_" + subjectids).css({
                            "border": "",
                            "background": ""
                        });
                    }
                    if ($("#endtime_" + subjectids).val() == '') {
                        cnt++;
                        $("#endtime_" + subjectids).css({
                            "border": "2px solid red"
                        });
                        alert("End time  is Mandatory!");
                        e.preventDefault();
                        $("#endtime_" + subjectids).focus();
                        return false;
                    } else {
                        $("#endtime_" + subjectids).css({
                            "border": "",
                            "background": ""
                        });
                    }

                }
            }




            if (cnt != 0)
            { e.preventDefault(); } else
            {
                var ctrlcnt = $('#ctrlcnt').val();
                if (ctrlcnt > 0) {
                    var subjectdata = [];
                    for (var i = 0; i < ctrlcnt; i++) {
                        var subjectids = ($("#hsubjectid_" + i).val());
                        var examdate = ($("#date_" + subjectids).val());
                        var starttime = ($("#starttime_" + subjectids).val());
                        var endtime = ($("#endtime_" + subjectids).val());
                        subjectdata.push(subjectids + "|" + examdate + "|" + starttime + "|" + endtime);
                    }
                    document.forms[0].method = "Post";
                    document.forms[0].action = "SubmitExam?subjectdata=" + subjectdata;
                    document.forms[0].submit();
                } else { e.preventDefault(); }
               
            }
        }
               
        
    
      
       function ReloadState() {
           $("#DeptId").empty();
            var item = '<option value="">select Department</option>';
            $("#DeptId").append(item);
        }

  function ReloadCountry() {
      if ($("#CourseId").val() == "") {
                ReloadState();
            }
            else {

          $("#DeptId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#CourseId").val() },
                    success: function (course) {
                        if (course != "") {

                            var item = '<option value="">select Department</option>';
                            $.each(course, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#DeptId").append(item);
                        }
                        else {
                            var item = '<option value="">select Department</option>';
                            $("#DeptId").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#CourseId").change(function () {

            ReloadCountry();
        })


        function ReloadYear() {
            $("#yearid").empty();
            var item = '<option value="">select Year</option>';
            $("#yearid").append(item);
        }

        function ReloadCourseYear() {
            if ($("#DeptId").val() == "") {
                ReloadYear();
            }
            else {

                $("#yearid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourseYear")',
                    dataType: 'json',
                    data: {
                        courseid: $("#CourseId").val(),
                        deptid: $("#DeptId").val()
                    },
                    success: function (yeardata) {
                        if (yeardata != "") {

                            var item = '<option value="">select Year</option>';
                            $.each(yeardata, function (i, yeardata) {
                                item += '<option value="' + yeardata.Value + '">' + yeardata.Text + '</option>';
                            });
                            $("#yearid").append(item);
                        }
                        else {
                            var item = '<option value="">select Year</option>';
                            $("#yearid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }
        $("#DeptId").change(function () {

            ReloadCourseYear();
        })
        $('#yearid').change(function () {
           var CourseId = $('#CourseId').val();
           var deptid = $('#DeptId').val();
           var yearid = $('#yearid').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubjectForExamtimetable")',
                dataType: 'json',
                data: { CourseId: CourseId, deptid: deptid, yearid: yearid },
                success: function (data) {

                    var result = $('#result');
                    var head = $('#header');
                    var table; var header;
                    var subjectids;
                    result.html('');
                    //$("#students").val(data.length);
                    header = "<table  class='table tb-parshav tablesorter'><thead><tr><th  width='10%;'>SubjectId</th><th  width='30%;'>Subject Name</th><th  width='20%;'>Exam Date</th><th  width='20%;'>Start Time</th><th  width='20%;'>End Time</th></thead><table>";
                    head.html(header);
                    table = "<table class='table tb-parshav tablesorter' id='tbl'><tbody>";
                    $("#ctrlcnt").val(data.length);
                    for (var i = 0; i < data.length; i++) {
                       subjectids = data[i].Subjectid;
                        table += "<tr id=" + subjectids + "><td width='10%;' id='subid_" + i + "'>" + data[i].Subjectid.toString()
                            + "</td><input class='addcls' type='hidden' id='hsubjectid_" + i + "' value=" + data[i].Subjectid.toString() + "><td width='30%;'>"
                            + data[i].SubjectName.toString()
                            + "</td><td width='20%;'><input class='addcls' type='date' id='date_" + data[i].Subjectid.toString() + "'>"
                            + "</td><td width='20%;'><input class='addcls' type='time' id='starttime_" + data[i].Subjectid.toString() + "'>"
                            + "</td><td width='20%;'><input class='addcls' type='time' id='endtime_" + data[i].Subjectid.toString() + "'>"


                        table += "</td></tr>";

                    }
                    table += "</tbody><table>";
                    result.html(table);



                }

            });
        });

    });
</script>@Html.Partial("_PermissionHiddenFlds")
@Html.Hidden("ctrlcnt")
<div class="container-fluid-full">
             
		<div class="row-fluid">
              @Html.Partial("_ExaminationMenuList")
	<div id="content" class="span10">
        	<div class="row-fluid">
                
           
             
              
                        <ul class="breadcrumb">
                             <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                           @Html.ActionLink("Examination Management", "Index", "Attendance", "")<i class="icon-angle-right"></i></li>
                            <li class="active">Exam Time Table</li>
                        </ul>

                 <div class="panel-body"> 
                     @{string status = "";
                         try { status = (TempData["ErrorMessage"]).ToString(); } catch { TempData["ErrorMessage"] = ""; }



                         if (status == "Success")
                         {



                             <text><div id="msg" class="alert alert-success" visible="true">
                                     <strong><label id="lblmsg">Records Added Successfully</label></strong>
                                 </div>

                             </text>
                         }
                         else if (status == "Exists")
                         {<text> <div id="msgs" class="alert alert-warning" visible="true">
                             <strong><label id="lblmsgs">Records Already Exists</label></strong>
                         </div>                </text> }
                         else if (status == "Update")
                         {<text> <div id="msgs" class="alert alert-success" visible="true">
                            <strong><label id="lblmsgs">Records Updated Successfully</label></strong>
                        </div>                </text> }
    else
    { <text></text>


                         } }
</div>
</div>

                         <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<div id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                            @using (Html.BeginForm("SubmitExam", "Examination", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm",  @class="form-horizontal" }))
                                            {
                                                @Html.ValidationSummary(true)
                                               
                                                <div style="display: none;" class="control-group">
                                                    @Html.LabelFor(model => model.Examid, new { @class="control-label" })
                                                       <div class="controls">
                                                    @Html.TextBoxFor(model => model.Examid, new { id = "Examid", @class = "input" })
                                                    @Html.ValidationMessageFor(model => model.Examid)
                                                           </div>
                                                </div>
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.ExaminationTypeid, new { @class = "control-label", @for = "select" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.ExaminationTypeid, new SelectList(Model.ExaminationTypeList, "ExaminationTypeId", "ExaminationType", "Select Examination Type"), "Select Examination Type", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.ExaminationTypeid)
                                                    </div>
                                                </div>
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.ExaminationName, new { @class="control-label"  })
                                                       <div class="controls">
                                                    @Html.TextBoxFor(model => model.ExaminationName, new { id = "ExaminationName", @class = "input" })
                                                    @Html.ValidationMessageFor(model => model.ExaminationName)
                                                           </div>
                                                </div>
                                             
                                              
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.CourseId, new {@class="control-label"  })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.CourseId, new SelectList(Model._Courselist, "Courseid", "CourseName", "Select Course"), "Select Course", new { @for="select" })
                                                    @Html.ValidationMessageFor(model => model.CourseId)
                                                           </div>
                                                </div>

                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.DeptId, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.DeptId, new SelectList(Model._Deptlist, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.DeptId)
                                                    </div>
                                                </div>

                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.yearid, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.yearid, new SelectList(Model._yearlist, "yearid", "YearName", "Select Year"), "Select Year", new { @for = "select" })
                                                        @Html.ValidationMessageFor(model => model.yearid)
                                                    </div>
                                                </div>

                                                
                                            
                                                <div class="control-group">
                                                    &nbsp;
                                                </div>
                                                <div class="box-content">
                                                    <div id="header" class="table-responsive">
                                                    </div>
                                                    <div id="result" class="table-responsive">
                                                    </div>
                                                    <div class="form-actions span12" style="margin-bottom:20px; margin-left:0px; padding-left:40%">
                                                        <input type="submit" class="btn btn-primary" id="insert" value="Submit" />
                                                    </div>

                                                </div>
                                            }  </fieldset>
                                </div>
					
					</div>
				</div><!--/span-->
                           
                </div><!--/row-->
                </div>
        </div>
            </div>
    </div>
