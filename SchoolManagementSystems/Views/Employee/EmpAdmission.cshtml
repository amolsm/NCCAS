@model Entity.employeeviewmodel

@{
    ViewBag.Title = "EmpAdmission";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}



<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
    });
   

    $(document).ready(function () {
     
        FillPermission();
        $("#insert").click(function (e) {
            Validations(e);
        });
       
      
        FillType();
        $("#eidtype").change(function () {
           
            if ($("#eidtype option:selected").text() == 'Others')
            { $("#doctype").show(); }
            else { $("#doctype").hide(); }
           

        });
        $("#DocumentIDNo").keypress(function (e) {
         
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    $("#errmsg").html("Digits Only").show().fadeOut("slow");
                    if ($("#eidtype option:selected").text() == 'Aadhar') {
                        return false;
                    } else { return true; }
                }
          
            
           
        });
        //---basis course select department//
        function ReloadDept1() {
            $("#q_department1").empty();
            var item = '<option value="">Select Department</option>';
            $("#q_department1").append(item);
        }

        function ReloadCourse1() {
            if ($("#equalification1").val() == "") {
                ReloadDept1();
            }
            else {

                $("#q_department1").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#equalification1").val() },
                    success: function (data) {
                        if ($(data.courselist).length != 0) {
                            
                            var item = '<option value="">Select Department</option>';
                            $.each(data.courselist, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#q_department1").append(item);
                        }
                        else {
                            var item = '<option value="">Select Department</option>';
                            $("#q_department1").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#equalification1").change(function () {

            ReloadCourse1();
        });
        //---2 course
        function ReloadDept2() {
            $("#q_department2").empty();
            var item = '<option value="">Select Department</option>';
            $("#q_department2").append(item);
        }

        function ReloadCourse2() {
            if ($("#equalification2").val() == "") {
                ReloadDept2();
            }
            else {

                $("#q_department2").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#equalification2").val() },
                    success: function (data) {
                        if ($(data.courselist).length != 0) {

                            var item = '<option value="">Select Department</option>';
                            $.each(data.courselist, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#q_department2").append(item);
                        }
                        else {
                            var item = '<option value="">Select Department</option>';
                            $("#q_department2").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#equalification2").change(function () {

            ReloadCourse2();
        });

        //
        //3 rd
        function ReloadDept3() {
            $("#q_department3").empty();
            var item = '<option value="">Select Department</option>';
            $("#q_department3").append(item);
        }

        function ReloadCourse3() {
            if ($("#equalification3").val() == "") {
                ReloadDept3();
            }
            else {

                $("#q_department3").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#equalification3").val() },
                    success: function (data) {
                        if ($(data.courselist).length != 0) {

                            var item = '<option value="">Select Department</option>';
                            $.each(data.courselist, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#q_department3").append(item);
                        }
                        else {
                            var item = '<option value="">Select Department</option>';
                            $("#q_department3").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#equalification3").change(function () {

            ReloadCourse3();
        });

        //
        //4 qualification
        function ReloadDept4() {
            $("#q_department4").empty();
            var item = '<option value="">Select Department</option>';
            $("#q_department4").append(item);
        }

        function ReloadCourse4() {
            if ($("#equalification4").val() == "") {
                ReloadDept4();
            }
            else {

                $("#q_department4").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#equalification4").val() },
                    success: function (data) {
                        if ($(data.courselist).length != 0) {

                            var item = '<option value="">Select Department</option>';
                            $.each(data.courselist, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#q_department4").append(item);
                        }
                        else {
                            var item = '<option value="">Select Department</option>';
                            $("#q_department4").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#equalification4").change(function () {

            ReloadCourse4();
        });

        //
        $('#cbxShowHide').change(function () {
            if (this.checked) {
                $('#autoUpdate').show();
                $('#autoUpdate').fadeIn('slow');
                $('#colexp3').show();
            }
            else {
                $('#autoUpdate').hide();
                $('#autoUpdate').fadeOut('slow');
                $('#colexp3').hide();
            }
        });

        $('#cbxFillCurrentAdd').change(function () {
            if (this.checked) {
                $('#pacountry').val($('#ccountry').val());
                $('#pastate').val($('#cstate').val());
                $('#pacity').val($('#ccity').val());
                $('#pastreet').val($('#cstreet').val());
                $('#papin').val($('#cpin').val());
            }
            else {
                $('#pacountry').val('');
                $('#pastate').val('');
                $('#pacity').val('');
                $('#pastreet').val('');
                $('#papin').val('');
            }
        });
        $('#cbxShowHide1').change(function () {
            if (this.checked) {
                $('#autoUpdate1').show();
                $('#autoUpdate1').fadeIn('slow');
                $('#colexp4').show();
            }
            else {
                $('#autoUpdate1').hide();
                $('#autoUpdate1').fadeOut('slow');
                $('#colexp4').hide();
            }
        });
        $('#cbxShowHide2').change(function () {
            if (this.checked) {
                $('#autoUpdate2').show();
                $('#autoUpdate2').fadeIn('slow');
                $('#colexp5').show()
            }
            else {
                $('#autoUpdate2').hide();
                $('#autoUpdate2').fadeOut('slow');
                $('#colexp5').hide();
            }
        });
        $('#cbxShowHide3').change(function () {
            if (this.checked) {
                $('#autoUpdate3').show();
                $('#autoUpdate3').fadeIn('slow');
                $('#colexp6').show()
            }
            else {
                $('#autoUpdate3').hide();
                $('#autoUpdate3').fadeOut('slow');
                $('#colexp6').hide();
            }
        });
        $('#cbxShowHide4').change(function () {
            if (this.checked) {
                $('#autoUpdate4').show();
                $('#autoUpdate4').fadeIn('slow');
                $('#colexp7').show()
            }
            else {
                $('#autoUpdate4').hide();
                $('#autoUpdate4').fadeOut('slow');
                $('#colexp7').hide();
            }
        });
        $('#cbxShowHide5').change(function () {
            if (this.checked) {
                $('#autoUpdate5').show();
                $('#autoUpdate5').fadeIn('slow');
                $('#colexp8').show();
            }
            else {
                $('#autoUpdate5').hide();
                $('#autoUpdate5').fadeOut('slow');
                $('#colexp8').hide();
            }
        });
        $('#cbxShowHide6').change(function () {
            if (this.checked) {
                $('#autoUpdate6').show();
                $('#autoUpdate6').fadeIn('slow');
                $('#colexp9').show();
            }
            else {
                $('#autoUpdate6').hide();
                $('#autoUpdate6').fadeOut('slow');
                $('#colexp9').hide();
            }
        });
        $('#cbxShowHide7').change(function () {
            if (this.checked) {
                $('#autoUpdate7').show();
                $('#autoUpdate7').fadeIn('slow');
                $('#colexp10').show();
            }
            else {
                $('#autoUpdate7').hide();
                $('#autoUpdate7').fadeOut('slow');
                $('#colexp10').hide()
            }
        });
        $('#cbxShowHide8').change(function () {
            if (this.checked) {
                $('#autoUpdate8').show();
                $('#autoUpdate8').fadeIn('slow');
               
            }
            else {
                $('#autoUpdate8').hide();
                $('#autoUpdate8').fadeOut('slow');
              
            }
        });


        $('#Previous1').click(function () {
            $('.navbar-nav > .active').next('li').find('a').trigger('click');
        });
        $('#Previous').click(function () {
            $('.navbar-nav > .active').last('li').find('a').trigger('click');

        });
        $('#btnnext').click(function () {
            $('.navbar-nav > .active').next('li').find('a').trigger('click');
        });
        $('#btnnext1').click(function () {
            $('.navbar-nav > .back').next('li').find('a').trigger('click');
        });

        $('#cbxShowHideCompany1').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany1').show();
                $('#autoUpdateCompany1').fadeIn('slow');
                $('#comexp3').show();
            }
            else {
                $('#autoUpdateCompany1').hide();
                $('#autoUpdateCompany1').fadeOut('slow');
                $('#comexp3').hide();
            }
        });
        $('#cbxShowHideCompany2').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany2').show();
                $('#autoUpdateCompany2').fadeIn('slow');
                $('#comexp4').show();
            }
            else {
                $('#autoUpdateCompany2').hide();
                $('#autoUpdateCompany2').fadeOut('slow');
                $('#comexp4').hide();
            }
        });
        $('#cbxShowHideCompany3').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany3').show();
                $('#autoUpdateCompany3').fadeIn('slow');
                $('#comexp5').show();
            }
            else {
                $('#autoUpdateCompany3').hide();
                $('#autoUpdateCompany3').fadeOut('slow');
                $('#comexp5').hide();
            }
        });
        $('#cbxShowHideCompany4').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany4').show();
                $('#autoUpdateCompany4').fadeIn('slow');
                $('#comexp6').show();
            }
            else {
                $('#autoUpdateCompany4').hide();
                $('#autoUpdateCompany4').fadeOut('slow');
                $('#comexp6').hide();
            }
        });
        $('#cbxShowHideCompany5').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany5').show();
                $('#autoUpdateCompany5').fadeIn('slow');
                $('#comexp7').show();
            }
            else {
                $('#autoUpdateCompany5').hide();
                $('#autoUpdateCompany5').fadeOut('slow');
                $('#comexp7').hide();
            }
        });
        $('#cbxShowHideCompany6').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany6').show();
                $('#autoUpdateCompany6').fadeIn('slow');
                $('#comexp8').show();
            }
            else {
                $('#autoUpdateCompany6').hide();
                $('#autoUpdateCompany6').fadeOut('slow');
                $('#comexp8').hide();
            }
        });
        $('#cbxShowHideCompany7').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany7').show();
                $('#autoUpdateCompany7').fadeIn('slow');
                $('#comexp9').show();
            }
            else {
                $('#autoUpdateCompany7').hide();
                $('#autoUpdateCompany7').fadeOut('slow');
                $('#comexp9').hide();
            }
        });
        $('#cbxShowHideCompany8').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany8').show();
                $('#autoUpdateCompany8').fadeIn('slow');
                $('#comexp10').show();
            }
            else {
                $('#autoUpdateCompany8').hide();
                $('#autoUpdateCompany8').fadeOut('slow');
                $('#comexp10').hide();
            }
        });
        $('#cbxShowHideCompany9').change(function () {
            if (this.checked) {
                $('#autoUpdateCompany9').show();
                $('#autoUpdateCompany9').fadeIn('slow');
            }
            else {
                $('#autoUpdateCompany9').hide();
                $('#autoUpdateCompany9').fadeOut('slow');
            }
        });

        $("#empreligion").change(function () {
            if ($("#empreligion").val() != 2)
            { $("#parish").hide(); $("#diocese").hide(); $("#cast").hide(); }
            else { $("#parish").show(); $("#diocese").show(); $("#cast").show(); }
            if ($("#empreligion").val() == "") {
                $("#empcast").empty();
                var item = '<option value="0">Select Sub Category</option>';
                $("#empcast").append(item);
            }
            else {
                $("#empcast").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCastes")',
                    dataType: 'json',
                    data: { id: $("#empreligion").val() },
                    success: function (castes) {
                        if (castes != "") {
                            var item = '<option value="0">Select Sub Category</option>';
                            $.each(castes, function (i, caste) {
                                item += '<option value="' + caste.Value + '">' + caste.Text + '</option>';
                            });
                            $("#empcast").append(item);
                        }
                        else {
                            var item = '<option value="0">Select Sub Category</option>';
                            $("#empcast").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve castes.' + ex);
                    }
                });
            }
            return false;
        })
        $("#empcast").change(function () {
            if ($("#empreligion").val() == 2 && $("#empcast").val() == 2)
            { $("#parish").show(); $("#diocese").show() }
            else { $("#parish").hide(); $("#diocese").hide() }

        });
        $("#equalification1").change(function () {

            if ($("#equalification1 option:selected").text() == "SET" || $("#equalification1 option:selected").text() == "NET")
            {$('#Eprecentage1 input').attr("readonly", true);}
            else { $('#Eprecentage1 input').attr("readonly", false); }
        })
        $("#equalification2").change(function () {
            if ($("#equalification2 option:selected").text() == "SET" || $("#equalification2 option:selected").text() == "NET")
            { $('#Eprecentage2 input').attr("readonly", true); }
            else { $('#Eprecentage2 input').attr("readonly", false); }
        })
        $("#equalification3").change(function () {
            if ($("#equalification3 option:selected").text() == "SET" || $("#equalification3 option:selected").text() == "NET")
            { $('#Eprecentage3 input').attr("readonly", true); }
            else { $('#Eprecentage3 input').attr("readonly", false); }
        })
        $("#equalification4").change(function () {
            if ($("#equalification4 option:selected").text() == "SET" || $("#equalification4 option:selected").text() == "NET")
            { $('#Eprecentage4 input').attr("readonly", true); }
            else { $('#Eprecentage4 input').attr("readonly", false); }
        })
        function FillType() {
            var item = '<option value="">select Type</option>';
            item += '<option value="4">Teaching Staff</option>';
            item += '<option value="5">Non Teaching Staff</option>';
            item += '<option value="6">Librarian</option>';
            $("#Typeid").append(item);
        }

        $("#lblmsg").text('');
        $('#empid input').attr("readonly", true);
        if ($("#empid input").val() == "0") {
            $("#empid").hide();
        }
        else {
            var empid = $("#empid input").val();
            act = '@Url.Action("FillEmpDetails","Employee")';
           
            $.ajax({
                type: 'GET',
                url: act,
                dataType: 'JSON',
                data: { empid: empid },
                success: function (data) {
                    //$("#empid").show();
                    debugger;
                    $("#empid input").val(data.Empid);
                    $("#FirstName").val(data.FirstName);
                    $("#MiddleName").val(data.MiddleName);
                    $("#LastName").val(data.LastName);
                   
                    $('#datepicker').datepicker('setDate', data.DOB);
                 
                  
                    $('#datepicker1').datepicker('setDate', data.DateOfJoin);
                  


                    $("#Emailid").val(data.Emailid);
                    $("#Gender").val(data.Gender);
                    $("#Quallification").val(data.Quallification);
                    $("#OQualification").val(data.OtherQualification);
                    $("#Address").val(data.Address);
                    $("#PhoneNo").val(data.PhoneNo);
                    $("#MobileNo").val(data.MobileNo);
                    $("#Code").val(data.Code);
                    $("#Typeid").val(data.Typeid);
                    $("#Zipcode").val(data.Zipcode);
                    $("#Stateid").val(data.Stateid);
                    $("#Cityid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.Stateid },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">Select city</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#Cityid").append(item);
                                $("#Cityid").val(data.Cityid);
                            }
                            else {
                                var item = '<option value="">Select city</option>';
                                $("#Cityid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve cities.' + ex);
                        }
                    });
                    $("#Gender").val(data.Gender);
                    $('#edepartment').val(data.department);
                    $("#employeeemail").val(data.empemail);
                    $("#empreligion").val(data.empreligion);
                    if ($("#empreligion").val() != 2)
                    { $("#parish").hide(); $("#diocese").hide(); $("#cast").hide(); }
                    else { $("#parish").show(); $("#diocese").show(); $("#cast").show(); }
                    if ($("#empreligion").val() == 2 && $("#empcast").val() == 2)
                    { $("#parish").show(); $("#diocese").show() }
                    else { $("#parish").hide(); $("#diocese").hide() }
                    $("#empcast").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCastes")',
                        dataType: 'json',
                        data: { id: $("#empreligion").val() },
                        success: function (castes) {
                            if (castes != "") {
                                var item = '<option value="0">Select Sub Category</option>';
                                $.each(castes, function (i, caste) {
                                    item += '<option value="' + caste.Value + '">' + caste.Text + '</option>';
                                });
                                $("#empcast").append(item);
                                $("#empcast").val(data.empcast);
                            }
                            else {
                                var item = '<option value="0">Select Sub Category</option>';
                                $("#empcast").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve castes.' + ex);
                        }
                    });
                    $("#ParishName").val(data.ParishName);
                    $("#DioceseName").val(data.DioceseName);
                    $("#empcategory").val(data.empcategory);
                 
                    $("#mtongue").val(data.empmothertongue);
                    $("#eweight").val(data.weightinkg);
                    $("#eheight").val(data.heightc);
                    $("#eidtype").val(data.eidtype);
                    $("#relationship").val(data.relation);
                    $("#dname").val(data.doctorname);
                    $("#dcontact").val(data.doctorcontact);
                    $("#daddress").val(data.doctoraddress);
                    $("#DCode").val(data.doctorcode);
                    $("#eblood").val(data.bloodgroup);
                    $("#equalification1").val(data.qualication1);
                    $("#euniversity1").val(data.university1);
                    $("#eprecentage1").val(data.precentage1);
                    $("#eYearofpassing1").val(data.yearpasing1);
                    $("#equalification2").val(data.qualication2);
                    $("#euniversity2").val(data.university2);
                    $("#eprecentage2").val(data.precentage2);
                    $("#eYearofpassing2").val(data.yearpasing2);
                    $("#equalification3").val(data.qualication3);
                    $("#euniversity3").val(data.university3);
                    $("#eprecentage3").val(data.precentage3);
                    $("#eYearofpassing3").val(data.yearpasing3);
                    $("#equalification4").val(data.qualication4);
                    $("#euniversity4").val(data.university4);
                    $("#eprecentage4").val(data.precentage4);
                    $("#eYearofpassing4").val(data.yearpasing4);
                    $("#pname").val(data.parentsname);
                    $("#poccupation").val(data.parentoccupation);
                    $("#pqualification").val(data.parentqualification);
                    $("#pemail").val(data.parentsemail);
                    $("#pofficeaddress").val(data.parentsaddress);
                    $("#pcontact").val(data.parentscontact);
                    $("#PCODE").val(data.parentscode);
                    //$("#ppic").val('');
                    $("#pastreet").val(data.pstreet);
                    $("#pacountry").val(data.pcountry);
                 
                    $("#pastate").val(data.pstate);
                    $("#pacity").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.pstate },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">Select city</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#pacity").append(item);
                                $("#pacity").val(data.pcity);
                            }
                            else {
                                var item = '<option value="">Select city</option>';
                                $("#pacity").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve cities.' + ex);
                        }
                    });

                  
                   
                    $("#papin").val(data.ppin);
                    $("#cstreet").val(data.cstreet);
                    $("#ccountry ").val(data.ccountry);
                    $("#cstate").val(data.cstate);

                

                    $("#ccity").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.cstate },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">Select city</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#ccity").append(item);
                                $("#ccity").val(data.ccity);
                            }
                            else {
                                var item = '<option value="">Select city</option>';
                                $("#ccity").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve cities.' + ex);
                        }
                    });
                    $("#cpin ").val(data.cpin);
                    $("#phome ").val(data.homecontact);
                    $("#PHCODE ").val(data.homecode);
                    $("#hmobile ").val(data.cmobile);
                    $("#MCODE ").val(data.cmobilecode);
                    $("#bankname ").val(data.bankname);
                    $("#branch ").val(data.branch);
                    $("#ifsccode ").val(data.ifsccode);
                    $("#accountno").val(data.accountno);
                    $("#acname").val(data.accountname);
                    $("#DocumentIDNo").val(data.docnumber);
                    $("#Documenttypename").val(data.doctypename);
                    $("#conttactrelation").val(data.contrelation);
                    $("#q_department1").val(data.q_department1);
                    $("#q_department2").val(data.q_department2);
                    $("#q_department3").val(data.q_department3);
                    $("#q_department4").val(data.q_department4);
                    $("#q_Set").prop('checked',data.q_Set);
                    $("#q_Net").prop('checked', data.q_Net);
                    $("#q_SetPassingYear").val(data.q_SetPassingYear);
                    $("#q_NetPassingYear").val(data.q_NetPassingYear);
                    $("#pic1").append('<img src="/Employee/getImg1/' + $("#Empid").val() + '" style="width: 190px;height: 220px;" alt="Employee Pic">');
                    $("#pic2").append('<img src="/Employee/getImg2/' + $("#Empid").val() + '" style="width: 190px;height: 220px;" alt="Employee Parent Pic">');
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetExperience")',
                        dataType: 'json',
                        data: { EmpId: data.Empid },
                        success: function (exp) {
                           
                            $("#collagename").val(exp.collagename_exp1);
                            $("#university").val(exp.affliateduniversity_exp1);
                            $("#ldesignation").val(exp.lastdesignation_exp1);
                            $("#total").val(exp.totalexperience_exp1);
                            $("#companyname").val(exp.companyname_exp1);
                            $("#clastdesignation").val(exp.clastdesignation_exp1);
                            $("#ctotal").val(exp.ctotalexperience_exp1);
                           
                            $('#datepicker2').datepicker('setDate', exp.joiningdate_exp1);
                          
                            $('#datepicker3').datepicker('setDate', exp.lastdate1_exp1);
                          
                            $('#datepicker4').datepicker('setDate', exp.cjoiningdate_exp1);
                         
                            $('#datepicker5').datepicker('setDate', exp.clastdate_exp1);
                        
                           $('#datepicker6').datepicker('setDate', exp.joiningdate_exp2);
                         
                            $('#datepicker7').datepicker('setDate', exp.lastdate1_exp2);
                         
                            $('#datepicker8').datepicker('setDate', exp.cjoiningdate_exp2);
                           
                            $('#datepicker9').datepicker('setDate', exp.clastdate_exp2);
                            //
                           
                            $('#datepicker10').datepicker('setDate', exp.joiningdate_exp3);
                           
                            $('#datepicker11').datepicker('setDate', exp.lastdate1_exp3);
                          
                            $('#datepicker12').datepicker('setDate', exp.joiningdate_exp4);
                          
                            $('#datepicker13').datepicker('setDate', exp.lastdate1_exp4);
                           
                            $('#datepicker14').datepicker('setDate', exp.joiningdate_exp5);
                         
                            $('#datepicker15').datepicker('setDate', exp.lastdate1_exp5);
                            
                            $('#datepicker16').datepicker('setDate', exp.joiningdate_exp6);
                          
                            $('#datepicker17').datepicker('setDate', exp.lastdate1_exp6);
                          
                            $('#datepicker18').datepicker('setDate', exp.joiningdate_exp7);
                          
                            $('#datepicker19').datepicker('setDate', exp.lastdate1_exp7);
                           
                            $('#datepicker20').datepicker('setDate', exp.joiningdate_exp8);
                           
                            $('#datepicker21').datepicker('setDate', exp.lastdate1_exp8);
                            
                            $('#datepicker22').datepicker('setDate', exp.joiningdate_exp9);
                          
                            $('#datepicker23').datepicker('setDate', exp.lastdate1_exp9);
                           
                            $('#datepicker24').datepicker('setDate', exp.joiningdate_exp10);
                           
                            $('#datepicker25').datepicker('setDate', exp.lastdate1_exp10);
                          
                            $('#datepicker26').datepicker('setDate', exp.cjoiningdate_exp3);
                           
                            $('#datepicker27').datepicker('setDate', exp.clastdate_exp3);
                           
                            $('#datepicker28').datepicker('setDate', exp.cjoiningdate_exp4);
                            
                            $('#datepicker29').datepicker('setDate', exp.clastdate_exp4);
                           
                            $('#datepicker30').datepicker('setDate', exp.cjoiningdate_exp5);
                         
                            $('#datepicker31').datepicker('setDate', exp.clastdate_exp5);
                         
                            $('#datepicker32').datepicker('setDate', exp.cjoiningdate_exp6);
                           
                            $('#datepicker33').datepicker('setDate', exp.clastdate_exp6);
                          
                            $('#datepicker34').datepicker('setDate', exp.cjoiningdate_exp7);
                       
                            $('#datepicker35').datepicker('setDate', exp.clastdate_exp7);
                           
                            $('#datepicker36').datepicker('setDate', exp.cjoiningdate_exp8);
                           
                            $('#datepicker37').datepicker('setDate', exp.clastdate_exp8);
                           
                            $('#datepicker38').datepicker('setDate', exp.cjoiningdate_exp9);
                           
                            $('#datepicker39').datepicker('setDate', exp.clastdate_exp9);
                            
                            $('#datepicker40').datepicker('setDate', exp.cjoiningdate_exp10);
                           
                            $('#datepicker41').datepicker('setDate', exp.clastdate_exp10);
                    
                            $("#collagename1").val(exp.collagename_exp2);
                            $("#university1").val(exp.affliateduniversity_exp2);
                            $("#ldesignation1").val(exp.lastdesignation_exp2);
                            $("#total1").val(exp.totalexperience_exp2);
                            $("#companyname1").val(exp.companyname_exp2);
                            $("#clastdesignation1").val(exp.clastdesignation_exp2);
                            $("#ctotal1").val(exp.ctotalexperience_exp2);
                            $("#collagename2").val(exp.collagename_exp3);
                            $("#university2").val(exp.affliateduniversity_exp3);
                            $("#ldesignation2").val(exp.lastdesignation_exp3);
                            $("#total2").val(exp.totalexperience_exp3);
                            $("#companyname2").val(exp.companyname_exp3);
                            $("#clastdesignation2").val(exp.clastdesignation_exp3);
                            $("#ctotal2").val(exp.ctotalexperience_exp3);
                            $("#collagename3").val(exp.collagename_exp4);
                            $("#university3").val(exp.affliateduniversity_exp4);
                            $("#ldesignation3").val(exp.lastdesignation_exp4);
                            $("#total3").val(exp.totalexperience_exp4);
                            $("#companyname3").val(exp.companyname_exp4);
                            $("#clastdesignation3").val(exp.clastdesignation_exp4);
                            $("#ctotal3").val(exp.ctotalexperience_exp4);
                            $("#collagename4").val(exp.collagename_exp5);
                            $("#university4").val(exp.affliateduniversity_exp5);
                            $("#ldesignation4").val(exp.lastdesignation_exp5);
                            $("#total4").val(exp.totalexperience_exp5);
                            $("#companyname4").val(exp.companyname_exp5);
                            $("#clastdesignation4").val(exp.clastdesignation_exp5);
                            $("#ctotal4").val(exp.ctotalexperience_exp5);
                            $("#collagename5").val(exp.collagename_exp6);
                            $("#university5").val(exp.affliateduniversity_exp6);
                            $("#ldesignation5").val(exp.lastdesignation_exp6);
                            $("#total5").val(exp.totalexperience_exp6);
                            $("#companyname5").val(exp.companyname_exp6);
                            $("#clastdesignation5").val(exp.clastdesignation_exp6);
                            $("#ctotal5").val(exp.ctotalexperience_exp6);
                            $("#collagename6").val(exp.collagename_exp7);
                            $("#university6").val(exp.affliateduniversity_exp7);
                            $("#ldesignation6").val(exp.lastdesignation_exp7);
                            $("#total6").val(exp.totalexperience_exp7);
                            $("#companyname6").val(exp.companyname_exp7);
                            $("#clastdesignation6").val(exp.clastdesignation_exp7);
                            $("#ctotal6").val(exp.ctotalexperience_exp7);

                            $("#collagename7").val(exp.collagename_exp8);
                            $("#university7").val(exp.affliateduniversity_exp8);
                            $("#ldesignation7").val(exp.lastdesignation_exp8);
                            $("#total7").val(exp.totalexperience_exp8);
                            $("#companyname7").val(exp.companyname_exp8);
                            $("#clastdesignation7").val(exp.clastdesignation_exp8);
                            $("#ctotal7").val(exp.ctotalexperience_exp8);

                            $("#collagename8").val(exp.collagename_exp9);
                            $("#university8").val(exp.affliateduniversity_exp9);
                            $("#ldesignation8").val(exp.lastdesignation_exp9);
                            $("#total8").val(exp.totalexperience_exp9);
                            $("#companyname8").val(exp.companyname_exp9);
                            $("#clastdesignation8").val(exp.clastdesignation_exp9);
                            $("#ctotal8").val(exp.ctotalexperience_exp9);


                            $("#collagename9").val(exp.collagename_exp10);
                            $("#university9").val(exp.affliateduniversity_exp10);
                            $("#ldesignation9").val(exp.lastdesignation_exp10);
                            $("#total9").val(exp.totalexperience_exp10);
                            $("#companyname9").val(exp.companyname_exp10);
                            $("#clastdesignation9").val(exp.clastdesignation_exp10);
                            $("#ctotal9").val(exp.ctotalexperience_exp10);
                          
                        },
                        error: function (ex) {
                            alert('Failed to retrieve experience.' + ex);
                        }
                    });


                }
            });
        }


        $('#datepicker1').attr("readonly", true);

        $('#datepicker1').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').datepicker('setDate', new Date());
        $('#datepicker2').attr("readonly", true);

        $('#datepicker2').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker2').datepicker('setDate', new Date());

        $('#datepicker3').attr("readonly", true);

        $('#datepicker3').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker3').datepicker('setDate', new Date());
        $('#datepicker4').attr("readonly", true);

        $('#datepicker4').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker4').datepicker('setDate', new Date());
        $('#datepicker5').attr("readonly", true);

        $('#datepicker5').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker5').datepicker('setDate', new Date());

        $('#datepicker6').attr("readonly", true);

        $('#datepicker6').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker6').datepicker('setDate', new Date());

        $('#datepicker7').attr("readonly", true);

        $('#datepicker7').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker7').datepicker('setDate', new Date());

        $('#datepicker8').attr("readonly", true);

        $('#datepicker8').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker8').datepicker('setDate', new Date());

        $('#datepicker9').attr("readonly", true);

        $('#datepicker9').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker9').datepicker('setDate', new Date());

        $('#datepicker1').datepicker('setDate', new Date());
      
        $('#datepicker10').attr("readonly", true);

        $('#datepicker10').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker10').datepicker('setDate', new Date());
        $('#datepicker11').attr("readonly", true);

        $('#datepicker11').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker11').datepicker('setDate', new Date());

        $('#datepicker12').attr("readonly", true);

        $('#datepicker12').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker12').datepicker('setDate', new Date());
        $('#datepicker13').attr("readonly", true);

        $('#datepicker13').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker13').datepicker('setDate', new Date());
        $('#datepicker14').attr("readonly", true);

        $('#datepicker14').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker14').datepicker('setDate', new Date());
        $('#datepicker15').attr("readonly", true);

        $('#datepicker15').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker15').datepicker('setDate', new Date());
        $('#datepicker16').attr("readonly", true);

        $('#datepicker16').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker16').datepicker('setDate', new Date());
        $('#datepicker17').attr("readonly", true);

        $('#datepicker17').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker17').datepicker('setDate', new Date());
        $('#datepicker18').attr("readonly", true);

        $('#datepicker18').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker18').datepicker('setDate', new Date());
        $('#datepicker19').attr("readonly", true);

        $('#datepicker19').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker19').datepicker('setDate', new Date());
        $('#datepicker20').attr("readonly", true);

        $('#datepicker20').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker20').datepicker('setDate', new Date());
        $('#datepicker21').attr("readonly", true);

        $('#datepicker21').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker21').datepicker('setDate', new Date());
        $('#datepicker22').attr("readonly", true);

        $('#datepicker22').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker22').datepicker('setDate', new Date());
        $('#datepicker23').attr("readonly", true);

        $('#datepicker23').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker23').datepicker('setDate', new Date());
        $('#datepicker24').attr("readonly", true);

        $('#datepicker24').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker24').datepicker('setDate', new Date());
        $('#datepicker25').attr("readonly", true);

        $('#datepicker25').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker25').datepicker('setDate', new Date());
        $('#datepicker26').attr("readonly", true);

        $('#datepicker26').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker26').datepicker('setDate', new Date());
        $('#datepicker27').attr("readonly", true);

        $('#datepicker27').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker27').datepicker('setDate', new Date());
        $('#datepicker28').attr("readonly", true);

        $('#datepicker28').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker28').datepicker('setDate', new Date());
        $('#datepicker29').attr("readonly", true);

        $('#datepicker29').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker29').datepicker('setDate', new Date());
        $('#datepicker30').attr("readonly", true);

        $('#datepicker30').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker30').datepicker('setDate', new Date());
        $('#datepicker31').attr("readonly", true);

        $('#datepicker31').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker31').datepicker('setDate', new Date());
        $('#datepicker32').attr("readonly", true);

        $('#datepicker32').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker32').datepicker('setDate', new Date());
        $('#datepicker33').attr("readonly", true);

        $('#datepicker33').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker33').datepicker('setDate', new Date());
        $('#datepicker34').attr("readonly", true);

        $('#datepicker34').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker34').datepicker('setDate', new Date());
        $('#datepicker35').attr("readonly", true);

        $('#datepicker35').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker35').datepicker('setDate', new Date());
        $('#datepicker36').attr("readonly", true);

        $('#datepicker36').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker36').datepicker('setDate', new Date());
        $('#datepicker37').attr("readonly", true);

        $('#datepicker37').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker37').datepicker('setDate', new Date());
        $('#datepicker38').attr("readonly", true);

        $('#datepicker38').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker38').datepicker('setDate', new Date());
        $('#datepicker39').attr("readonly", true);

        $('#datepicker39').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker39').datepicker('setDate', new Date());
        $('#datepicker40').attr("readonly", true);

        $('#datepicker40').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker40').datepicker('setDate', new Date());
        $('#datepicker41').attr("readonly", true);

        $('#datepicker41').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker41').datepicker('setDate', new Date());
        $('#datepicker42').attr("readonly", true);

        $('#datepicker42').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker42').datepicker('setDate', new Date());
        $("#reset").click(function () {
            clear();
            clearmsg();
        });
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

        $("#result").on("click", ".delete", function (evt) {
            var Cityid = this.id;
            var flag = confirm('Are you sure you want to delete this Employee?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLEmp")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Cityid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Employee deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function clear() {
            $("#empid").hide();
            $('#empid input').val('0');
            $("#FirstName").val('');
            $("#MiddleName").val('');
            $("#LastName").val('');
            $("#Stateid").val('');
            $("#Cityid").val('0');
            $("#Zipcode").val('');
            $("#Emailid").val('');
            $("#PhoneNo").val('');
            $("#MobileNo").val('');
            $("#Code").val('');
            $("#Address").val('');
            $("#Quallification").val('');
            $("#OQualification").val('');
            $("#Typeid").val('');
            $('#datepicker').datepicker('setDate', new Date());
            $('#datepicker1').datepicker('setDate', new Date());
            $("#Gender").val('0');
            $('#edepartment').val('0');
            $("#collagename").val('');
            $("#MiddleName").val('');
            $("#total").val('');
            $("#ctotal").val('');
            $("#university").val('');
            $("#joiningdate").val('');
            $("#lastdate").val('');
            $("#cjoiningdate").val('');
            $("#clastdate").val('');
            $("#ldesignation").val('');
            $("#companyname").val('');
            $("#clastdesignatio").val('');
            $("#employeeemail").val('');
            $("#empreligion").val('0');
            $("#empcategory").val('0');
            $("#empcast").val('0');
            $("#mtongue").val('0');
            $("#eweight").val('');
            $("#eheight").val('');
            $("#emppic").val('');
            $("#eidtype").val('0');
            $("#relationship").val('0');
            $("#dname").val('');
            $("#dcontact").val('');
            $("#daddress").val('');
            $("#DCode").val('');
            $("#eblood").val('0');
            $("#equalification1").val('0');
            $("#euniversity1").val('');
            $("#eprecentage1").val('');
            $("#eYearofpassing1").val('');
            $("#equalification2").val('0');
            $("#euniversity2").val('');
            $("#eprecentage2").val('');
            $("#eYearofpassing2").val('');
            $("#equalification3").val('0');
            $("#euniversity3").val('');
            $("#eprecentage3").val('');
            $("#eYearofpassing3").val('');
            $("#equalification4").val('0');
            $("#euniversity4").val('');
            $("#eprecentage4").val('');
            $("#eYearofpassing4").val('');
            $("#pname").val('');
            $("#poccupation").val('');
            $("#pqualification").val('');
            $("#pemail").val('');
            $("#pofficeaddress").val('');
            $("#pcontact").val('');
            $("#PCODE").val('');
            $("#ppic").val('');
            $("#pastreet").val('');
            $("#pacity").val('0');
            $("#pastate").val('0');
            $("#pacountry").val('0');
            $("#papin").val('');
            $("#cstreet").val('0');
            $("#ccity").val('0');
            $("#cstate").val('0');

            $("#ccountry ").val('0');
            $("#cpin ").val('');
            $("#phome ").val('');
            $("#PHCODE ").val('');
            $("#hmobile ").val('');
            $("#MCODE ").val('');
            $("#bankname ").val('');
            $("#branch ").val('');
            $("#ifsccode ").val('');
            $("#accountno").val('');
            $("#acname").val('');
        }

        function Validations(e) {
            var cnt = 0;
            if ($("#FirstName").val() == '') {
                cnt++;
                $("#FirstName").css({
                    "border": "1px solid red"
                });
                alert("First Name Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#FirstName").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#LastName").val() == '') {
                cnt++;
                $("#LastName").css({
                    "border": "1px solid red"
                });
                alert("Last Name Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#LastName").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#datepicker").val() == '') {
                cnt++;
                $("#datepicker").css({
                    "border": "1px solid red"
                });
                alert("DOB is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#datepicker").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#datepicker1").val() == '') {
                cnt++;
                $("#datepicker1").css({
                    "border": "1px solid red"
                });
                alert("Date of Joining is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#datepicker1").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Emailid").val() == '') {
                cnt++;
                $("#Emailid").css({
                    "border": "1px solid red"
                });
                alert("Email Id Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Emailid").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#Gender").val() == '') {
                cnt++;
                $("#Gender").css({
                    "border": "1px solid red"
                });
                alert("Gender is  Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Gender").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#datepicker1").val() == '') {
                cnt++;
                $("#datepicker1").css({
                    "border": "1px solid red"
                });
                alert("Date of Joining is  Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#datepicker1").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#DocumentIDNo").val() == '') {
                cnt++;
                $("#DocumentIDNo").css({
                    "border": "1px solid red"
                });
                alert("Document ID NO. is  Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#DocumentIDNo").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#empreligion").val() == 2 && $("#empcast").val() == 2) {
                if ($("#ParishName").val() == '') {
                    cnt++;
                    $("#ParishName").css({
                        "border": "1px solid red"
                    });

                    alert("Parish Name Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#parish").css({
                        "border": "",
                        "background": ""
                    });

                }

                if ($("#DioceseName").val() == '') {
                    cnt++;
                    $("#DioceseName").css({
                        "border": "1px solid red"
                    });

                    alert("DioceseName Name Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#DioceseName").css({
                        "border": "",
                        "background": ""
                    });

                }

            }

            if ($("#MobileNo").val() == '') {
                cnt++;
                $("#MobileNo").css({
                    "border": "1px solid red"
                });
                alert("MobileNo is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#MobileNo").css({
                    "border": "",
                    "background": ""
                });
            }

          

            if ($("#Typeid").val() == '' || $("#Typeid").val() == '0') {
                cnt++;
                $("#Typeid").css({
                    "border": "1px solid red"
                });
                alert("Employee Type is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Typeid").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#eidtype").val() == '' || $("#eidtype").val() == '0') {
                cnt++;
                $("#eidtype").css({
                    "border": "1px solid red"
                });
                alert("ID Type is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#eidtype").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#equalification1").val() == '' || $("#equalification1").val() == '0') {
                cnt++;
                $("#equalification1").css({
                    "border": "1px solid red"
                });
                alert("Employee Qualification is Mandatory!");
                e.preventDefault();
                return false;
              
            }
            else {
                $("#equalification1").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#euniversity1").val() == '' || $("#euniversity1").val() == '0') {
                cnt++;
                $("#euniversity1").css({
                    "border": "1px solid red"
                });
                alert("Employee University is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#euniversity1").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#eprecentage1").val() == '' || $("#eprecentage1").val() == '0') {
                cnt++;
                $("#eprecentage1").css({
                    "border": "1px solid red"
                });
                alert("Employee Percentage is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#eprecentage1").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#eYearofpassing1").val() == '' || $("#eYearofpassing1").val() == '0') {
                cnt++;
                $("#eYearofpassing1").css({
                    "border": "1px solid red"
                });
                alert("Employee Percentage is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#eYearofpassing1").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#mtongue").val() == '') {
                cnt++;
                $("#mtongue").css({
                    "border": "1px solid red"
                });
                alert("Mother tongue name is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#mtongue").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#dname").val() == '') {
                cnt++;
                $("#dname").css({
                    "border": "1px solid red"
                });
                alert("Emergency Contact Name is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#dname").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#dcontact").val() == '') {
                cnt++;
                $("#dcontact").css({
                    "border": "1px solid red"
                });
                alert("Emergency Contact Number is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#dcontact").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#conttactrelation").val() == '') {
                cnt++;
                $("#conttactrelation").css({
                    "border": "1px solid red"
                });
                alert("Emergency Contact Relation is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#conttactrelation").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#daddress").val() == '') {
                cnt++;
                $("#daddress").css({
                    "border": "1px solid red"
                });
                alert("Emergency Contact Address is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#daddress").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#relationship").val() == '' || $("#relationship").val() == '0') {
                cnt++;
                $("#relationship").css({
                    "border": "1px solid red"
                });
                alert("Parent Details Relationship is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#relationship").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#pname").val() == '') {
                cnt++;
                $("#pname").css({
                    "border": "1px solid red"
                });
                alert("Parent Name is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#pname").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#poccupation").val() == '') {
                cnt++;
                $("#poccupation").css({
                    "border": "1px solid red"
                });
                alert("Parent Occupation is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#poccupation").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#pcontact").val() == '') {
                cnt++;
                $("#pcontact").css({
                    "border": "1px solid red"
                });
                alert("Parent Contact No. is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#pcontact").css({
                    "border": "",
                    "background": ""
                });
            }
         
            if ($("#ccountry").val() == '' || $("#ccountry").val() == '0') {
                cnt++;
                $("#ccountry").css({
                    "border": "1px solid red"
                });
                alert("Current Country is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#ccountry").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#cstate").val() == '' || $("#cstate").val() == '0') {
                cnt++;
                $("#cstate").css({
                    "border": "1px solid red"
                });
                alert("Current State is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#cstate").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#ccity").val() == '' || $("#ccity").val() == '0') {
                cnt++;
                $("#ccity").css({
                    "border": "1px solid red"
                });
                alert("Current City is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#ccity").css({
                    "border": "",
                    "background": ""
                });
            }
            
            if ($("#cstreet").val() == '') {
                cnt++;
                $("#cstreet").css({
                    "border": "1px solid red"
                });
                alert("Current Street is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#cstreet").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#cpin").val() == '') {
                cnt++;
                $("#cpin").css({
                    "border": "1px solid red"
                });
                alert("Current Pincode is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#cpin").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#hmobile").val() == '') {
                cnt++;
                $("#hmobile").css({
                    "border": "1px solid red"
                });
                alert("Current Address Mobile No. is Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#hmobile").css({
                    "border": "",
                    "background": ""
                });
            }
            if (cnt != 0) {
                e.preventDefault();
            }
        }

        $("#pastate").change(function () {
            $("#pacity").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { id: $("#pastate").val() },
                success: function (cities) {
                    if (cities != "") {
                        var item = '<option value="0">select City</option>';
                        $.each(cities, function (i, city) {
                            item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                        });
                        $("#pacity").append(item);
                    }
                    else {
                        var item = '<option value="0">select City</option>';
                        $("#pacity").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve cities.' + ex);
                }
            });
            return false;
        })
        $("#cstate").change(function () {
            $("#ccity").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { id: $("#cstate").val() },
                success: function (cities) {
                    if (cities != "") {
                        var item = '<option value="0">select City</option>';
                        $.each(cities, function (i, city) {
                            item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                        });
                        $("#ccity").append(item);
                    }
                    else {
                        var item = '<option value="0">select City</option>';
                        $("#ccity").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve cities.' + ex);
                }
            });
            return false;
        })
        $('#Emailid').change(function () {
            $("#lblmsg").text("");
            var Emailid = $('#Emailid').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_Emp")',
                dataType: 'JSON',
                data: { Emailid: Emailid },
                success: function (data) {
                    if (data.Emailid != null) {
                        alert("Emailid Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#Emailid').val('');
                        return false;
                    }
                }
            });
        });

        $("#PhoneNo").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });


        $("#eweight").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#dname").keypress(function (e) {
            if (!(e.which >= 65 && e.which <= 120) && (e.which != 32 && e.which != 0)) {
                $("#errmsg").html("Alphabetes Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#conttactrelation").keypress(function (e) {
            if (!(e.which >= 65 && e.which <= 120) && (e.which != 32 && e.which != 0)) {
                $("#errmsg").html("Alphabetes Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#dcontact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#pcontact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#phome").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#papin").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#cpin").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#PHCODE").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#MCODE").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        
        $("#hmobile").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#accountno").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#DCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        $("#PCODE").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#eheight").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Zipcode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#MobileNo").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Code").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#q_SetPassingYear").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#q_NetPassingYear").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        
        function ValidateEmail(email) {
            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            return expr.test(email);
        };

        $('#Emailid').blur(function () {
            if (!ValidateEmail($("#Emailid").val())) {
                $("#Emailid").css({
                    "border": "1px solid red"
                });
                $('#Emailid').val('');
                alert("Email address is invalid!..");
                return false;
            }
            else {
                $("#Emailid").css({
                    "border": "",
                    "background": ""
                });
            }
        });
        
        $('#pemail').blur(function () {
            if (!ValidateEmail($("#pemail").val())) {
                $("#pemail").css({
                    "border": "1px solid red"
                });
                $('#pemail').val('');
                alert("Email address is invalid!..");
                return false;
            }
            else {
                $("#pemail").css({
                    "border": "",
                    "background": ""
                });
            }
        });
        $(function () { $("#datepicker").datepicker().val(''); });
        $(function () { $("#lastdate").datepicker(); });
        $(function () { $("#joiningdate").datepicker(); });
        $("#datepicker5").change(function () {

            var a = $("#datepicker4").datepicker("getDate").getDate();
            var b = $("#datepicker4").datepicker("getDate").getYear();
            var c = $("#datepicker4").datepicker("getDate").getMonth();
            var d = $("#datepicker5").datepicker("getDate").getDate();
            var e = $("#datepicker5").datepicker("getDate").getYear();
            var f = $("#datepicker5").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker3").change(function () {
            var a = $("#datepicker2").datepicker("getDate").getDate();
            var b = $("#datepicker2").datepicker("getDate").getYear();
            var c = $("#datepicker2").datepicker("getDate").getMonth();
            var d = $("#datepicker3").datepicker("getDate").getDate();
            var e = $("#datepicker3").datepicker("getDate").getYear();
            var f = $("#datepicker3").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal").val(year + " Years " + month + " Months " + day + " Days");


        });

        $("#datepicker7").change(function () {
            var a = $("#datepicker6").datepicker("getDate").getDate();
            var b = $("#datepicker6").datepicker("getDate").getYear();
            var c = $("#datepicker6").datepicker("getDate").getMonth();
            var d = $("#datepicker7").datepicker("getDate").getDate();
            var e = $("#datepicker7").datepicker("getDate").getYear();
            var f = $("#datepicker7").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal1").val(year + " Years " + month + " Months " + day + " Days");


        });

        $("#datepicker9").change(function () {
            var a = $("#datepicker8").datepicker("getDate").getDate();
            var b = $("#datepicker8").datepicker("getDate").getYear();
            var c = $("#datepicker8").datepicker("getDate").getMonth();
            var d = $("#datepicker9").datepicker("getDate").getDate();
            var e = $("#datepicker9").datepicker("getDate").getYear();
            var f = $("#datepicker9").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total1").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker11").change(function () {
            var a = $("#datepicker10").datepicker("getDate").getDate();
            var b = $("#datepicker10").datepicker("getDate").getYear();
            var c = $("#datepicker10").datepicker("getDate").getMonth();
            var d = $("#datepicker11").datepicker("getDate").getDate();
            var e = $("#datepicker11").datepicker("getDate").getYear();
            var f = $("#datepicker11").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal2").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker13").change(function () {
            var a = $("#datepicker12").datepicker("getDate").getDate();
            var b = $("#datepicker12").datepicker("getDate").getYear();
            var c = $("#datepicker12").datepicker("getDate").getMonth();
            var d = $("#datepicker13").datepicker("getDate").getDate();
            var e = $("#datepicker13").datepicker("getDate").getYear();
            var f = $("#datepicker13").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal3").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker15").change(function () {
            var a = $("#datepicker14").datepicker("getDate").getDate();
            var b = $("#datepicker14").datepicker("getDate").getYear();
            var c = $("#datepicker14").datepicker("getDate").getMonth();
            var d = $("#datepicker15").datepicker("getDate").getDate();
            var e = $("#datepicker15").datepicker("getDate").getYear();
            var f = $("#datepicker15").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal4").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker17").change(function () {
            var a = $("#datepicker16").datepicker("getDate").getDate();
            var b = $("#datepicker16").datepicker("getDate").getYear();
            var c = $("#datepicker16").datepicker("getDate").getMonth();
            var d = $("#datepicker17").datepicker("getDate").getDate();
            var e = $("#datepicker17").datepicker("getDate").getYear();
            var f = $("#datepicker17").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal5").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker19").change(function () {
            var a = $("#datepicker18").datepicker("getDate").getDate();
            var b = $("#datepicker18").datepicker("getDate").getYear();
            var c = $("#datepicker18").datepicker("getDate").getMonth();
            var d = $("#datepicker19").datepicker("getDate").getDate();
            var e = $("#datepicker19").datepicker("getDate").getYear();
            var f = $("#datepicker19").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal6").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker21").change(function () {
            var a = $("#datepicker20").datepicker("getDate").getDate();
            var b = $("#datepicker20").datepicker("getDate").getYear();
            var c = $("#datepicker20").datepicker("getDate").getMonth();
            var d = $("#datepicker21").datepicker("getDate").getDate();
            var e = $("#datepicker21").datepicker("getDate").getYear();
            var f = $("#datepicker21").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal7").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker23").change(function () {
            var a = $("#datepicker22").datepicker("getDate").getDate();
            var b = $("#datepicker22").datepicker("getDate").getYear();
            var c = $("#datepicker22").datepicker("getDate").getMonth();
            var d = $("#datepicker23").datepicker("getDate").getDate();
            var e = $("#datepicker23").datepicker("getDate").getYear();
            var f = $("#datepicker23").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal8").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker25").change(function () {
            var a = $("#datepicker24").datepicker("getDate").getDate();
            var b = $("#datepicker24").datepicker("getDate").getYear();
            var c = $("#datepicker24").datepicker("getDate").getMonth();
            var d = $("#datepicker25").datepicker("getDate").getDate();
            var e = $("#datepicker25").datepicker("getDate").getYear();
            var f = $("#datepicker25").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#ctotal9").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker27").change(function () {
            var a = $("#datepicker26").datepicker("getDate").getDate();
            var b = $("#datepicker26").datepicker("getDate").getYear();
            var c = $("#datepicker26").datepicker("getDate").getMonth();
            var d = $("#datepicker27").datepicker("getDate").getDate();
            var e = $("#datepicker27").datepicker("getDate").getYear();
            var f = $("#datepicker27").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total2").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker29").change(function () {
            var a = $("#datepicker28").datepicker("getDate").getDate();
            var b = $("#datepicker28").datepicker("getDate").getYear();
            var c = $("#datepicker28").datepicker("getDate").getMonth();
            var d = $("#datepicker29").datepicker("getDate").getDate();
            var e = $("#datepicker29").datepicker("getDate").getYear();
            var f = $("#datepicker29").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total3").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker31").change(function () {
            var a = $("#datepicker30").datepicker("getDate").getDate();
            var b = $("#datepicker30").datepicker("getDate").getYear();
            var c = $("#datepicker30").datepicker("getDate").getMonth();
            var d = $("#datepicker31").datepicker("getDate").getDate();
            var e = $("#datepicker31").datepicker("getDate").getYear();
            var f = $("#datepicker31").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total4").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker33").change(function () {
            var a = $("#datepicker32").datepicker("getDate").getDate();
            var b = $("#datepicker32").datepicker("getDate").getYear();
            var c = $("#datepicker32").datepicker("getDate").getMonth();
            var d = $("#datepicker33").datepicker("getDate").getDate();
            var e = $("#datepicker33").datepicker("getDate").getYear();
            var f = $("#datepicker33").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total5").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker35").change(function () {
            var a = $("#datepicker34").datepicker("getDate").getDate();
            var b = $("#datepicker34").datepicker("getDate").getYear();
            var c = $("#datepicker34").datepicker("getDate").getMonth();
            var d = $("#datepicker35").datepicker("getDate").getDate();
            var e = $("#datepicker35").datepicker("getDate").getYear();
            var f = $("#datepicker35").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total6").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker37").change(function () {
            var a = $("#datepicker36").datepicker("getDate").getDate();
            var b = $("#datepicker36").datepicker("getDate").getYear();
            var c = $("#datepicker36").datepicker("getDate").getMonth();
            var d = $("#datepicker37").datepicker("getDate").getDate();
            var e = $("#datepicker37").datepicker("getDate").getYear();
            var f = $("#datepicker37").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total7").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker39").change(function () {
            var a = $("#datepicker38").datepicker("getDate").getDate();
            var b = $("#datepicker38").datepicker("getDate").getYear();
            var c = $("#datepicker38").datepicker("getDate").getMonth();
            var d = $("#datepicker39").datepicker("getDate").getDate();
            var e = $("#datepicker39").datepicker("getDate").getYear();
            var f = $("#datepicker39").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total8").val(year + " Years " + month + " Months " + day + " Days");


        });
        $("#datepicker41").change(function () {
            var a = $("#datepicker40").datepicker("getDate").getDate();
            var b = $("#datepicker40").datepicker("getDate").getYear();
            var c = $("#datepicker40").datepicker("getDate").getMonth();
            var d = $("#datepicker41").datepicker("getDate").getDate();
            var e = $("#datepicker41").datepicker("getDate").getYear();
            var f = $("#datepicker41").datepicker("getDate").getMonth();
            var j = new Date(a);
            var h = new Date(b);
            var i = new Date(c);
            var j = new Date(d);
            var k = new Date(e);
            var l = new Date(f);
            var day = Math.round(Math.abs((a - d)));
            var year = Math.round(Math.abs((b - e)));
            var month = Math.round(Math.abs((c - f)));
            $("#total9").val(year + " Years " + month + " Months " + day + " Days");


        });
        ReloadPaging();


    });
</script>
<script type="text/javascript">
  // When the document is ready
   
    $(document).ready(function () {

            $('#datepicker').datepicker();
            $('#datepicker').val("");

            $('#datepicker1').datepicker();
            $('#datepicker1').val("");

            $('#datepicker2').datepicker();
            $('#datepicker2').val("");

            $('#datepicker3').datepicker();
            $('#datepicker3').val("");

            $('#datepicker4').datepicker();
            $('#datepicker4').val("");
            $('#datepicker5').datepicker();
            $('#datepicker5').val("");
            $('#datepicker6').datepicker();
            $('#datepicker6').val("");
            $('#datepicker7').datepicker();
            $('#datepicker7').val("");
            $('#datepicker8').datepicker();
            $('#datepicker8').val("");
            $('#datepicker9').datepicker();
            $('#datepicker9').val("");
            $('#datepicker10').datepicker();
            $('#datepicker10').val("");
            $('#datepicker11').datepicker();
            $('#datepicker11').val("");
            $('#datepicker12').datepicker();
            $('#datepicker12').val("");
            $('#datepicker13').datepicker();
            $('#datepicker13').val("");
            $('#datepicker14').datepicker();
            $('#datepicker14').val("");
            $('#datepicker15').datepicker();
            $('#datepicker15').val("");
            $('#datepicker16').datepicker();
            $('#datepicker16').val("");
            $('#datepicker17').datepicker();
            $('#datepicker17').val("");
            $('#datepicker18').datepicker();
            $('#datepicker18').val("");
            $('#datepicker19').datepicker();
            $('#datepicker19').val("");
            $('#datepicker20').datepicker();
            $('#datepicker20').val("");
            $('#datepicker21').datepicker();
            $('#datepicker21').val("");
            $('#datepicker22').datepicker();
            $('#datepicker22').val("");
            $('#datepicker23').datepicker();
            $('#datepicker23').val("");
            $('#datepicker24').datepicker();
            $('#datepicker24').val("");
            $('#datepicker25').datepicker();
            $('#datepicker25').val("");
            $('#datepicker26').datepicker();
            $('#datepicker26').val("");
            $('#datepicker27').datepicker();
            $('#datepicker27').val("");
            $('#datepicker29').datepicker();
            $('#datepicker29').val("");
            $('#datepicker30').datepicker();
            $('#datepicker30').val("");
            $('#datepicker31').datepicker();
            $('#datepicker31').val("");
            $('#datepicker32').datepicker();
            $('#datepicker32').val("");
            $('#datepicker33').datepicker();
            $('#datepicker33').val("");
            $('#datepicker34').datepicker();
            $('#datepicker34').val("");
            $('#datepicker35').datepicker();
            $('#datepicker35').val("");
            $('#datepicker36').datepicker();
            $('#datepicker36').val("");
            $('#datepicker37').datepicker();
            $('#datepicker37').val("");
            $('#datepicker38').datepicker();
            $('#datepicker38').val("");
            $('#datepicker39').datepicker();
            $('#datepicker39').val("");
            $('#datepicker40').datepicker();
            $('#datepicker40').val("");
            $('#datepicker41').datepicker();
            $('#datepicker41').val("");
            $('#datepicker42').datepicker();
            $('#datepicker42').val("");


            if ($("#eidtype").val() == 7)
            { $("#doctype").show(); }
            else { $("#doctype").hide(); }

            $('.date-own').datepicker({
           
                changeMonth: false,
                changeYear: true,
                showButtonPanel: true,
                yearRange: '1950:2050',
                dateFormat: 'yy',
                onClose: function (dateText, inst) {
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, 0, 1));
                },
                beforeShow: function () {
                   if ((selDate = $(this).val()).length > 0)
                   {
                       iYear = selDate.substring(selDate.length - 4, selDate.length);
                    
                        iMonth = jQuery.inArray(selDate.substring(0, selDate.length - 5), $(this).datepicker('option', 'monthNames'));
                      
                        $(this).datepicker('option', 'defaultDate', new Date(iYear, iMonth, 1));
                        
                        $(this).datepicker('setDate', new Date(iYear, iMonth, 1));
                        
                    }
                   
                }

              
           
            
            });
          
           
    });
   



</script>

<script>
    function scrollWin() {
        window.scrollTo(0, -500);
    }
</script>
<style type="text/css">
    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    fieldset {
        border: 1px solid #777;
    }

    /*.controls {
        border: 1px solid;
    }
    .input {
        border: 1px solid;
        border-color:red;
    }*/
    .form-horizontal .controls {
        margin-left: 45.5%;
    }

    .form-horizontal .control-group {
        margin-bottom: 5px;
        margin-left: 5%;
        margin-top: 5px;
    }

    legend {
        float: left;
        margin-right: 0.5em;
        padding-top: 0.2em;
        text-align: left;
        font-size: 18px;
        background-color: gainsboro;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }

    .form-horizontal .control-group {
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }
   .control-group.required .control-label:after {
  content:"*";
  color:red;
}
</style>


@Html.Partial("_PermissionHiddenFlds")
@Html.Hidden("FormType", TempData["FormType"])
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_employeemenulist")
        <div id="content" class="span10">
            <div class="row-fluid">




                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Employee Management", "Index", "Employee", "")<i class="icon-angle-right"></i>
                    </li>
                    <li class="active">Add New Employee</li>
                </ul>
                <div class="panel-body">
                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        <strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>

                            <h2><i class="fa fa-edit"></i><span class="break"></span>Add Employee</h2>
  <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">

                            <div id="frm" class="form-horizontal">


                                <fieldset>
                                    <div id="tabs">
                                        <ul id="tabss" class="nav navbar-nav">
                                            <li id="tab1" class="active back"><a href="#tabs-1" style="color: blue;">Employee Details</a></li>
                                            <li id="tab2" class="back"><a href="#tabs-2" style="color: blue;">Personal Details</a></li>
                                            <li id="tab3" class="back">
                                                <a href="#tabs-3" style="color: blue;">

                                                    Previous Employee Experience
                                              </a>
                                            </li>
                                        </ul>
                                        <div id="AddForm" style="display: none;">
                                            @using (Html.BeginForm("EmpAdmission_DML", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm", @class = "form-horizontal" }))
                                            {

                                            @Html.ValidationSummary(true)
                                                var fromdt = Convert.ToString(System.DateTime.Now.Year);
                                                var todt = Convert.ToString(System.DateTime.Now.AddYears(1).Year);
                                                var session = Convert.ToString(fromdt + "-" + todt);
                                                 <div class="control-group span10">
                                                    <span style="color:red">&nbsp;* fields are required</span>
                                                </div>

                                            <div id="tabs-1">
                                               
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Employee Details</legend>


                                                        <div class="control-group span5" id="empid">

                                                            @Html.LabelFor(model => model.Empid, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Empid, new { placeholder = "Enter Employee ID", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Empid)
                                                            </div>
                                                        </div>


                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.FirstName, new { @class = "control-label", @for = "focusedInput" })
                                                            <div class="controls">

                                                                @Html.TextBoxFor(model => model.FirstName, new { placeholder = "Enter First Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                            </div>


                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MiddleName, new { placeholder = "Enter Middle Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MiddleName)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.LastName, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.LastName, new { placeholder = "Enter Last Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.LastName)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DOB, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DOB, new { id = "datepicker", @readonly = "readonly", placeholder = "Select Date of birth" })
                                                                @Html.ValidationMessageFor(model => model.DOB)
                                                            </div>
                                                        </div>


                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Emailid, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Emailid, new { placeholder = "Enter Email", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Emailid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.PhoneNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.PhoneNo, new { placeholder = "Enter Phone Number", maxlength = "12", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.PhoneNo)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.MobileNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Code, new { placeholder = "Code", maxlength = "4", @class = "input-small" })
                                                                @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Mobile Number", maxlength = "10", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MobileNo)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @{
                                                                    List<SelectListItem> listItems = new List<SelectListItem>();
                                                                    listItems.Add(new SelectListItem
                                                                    {
                                                                        Text = "Male",
                                                                        Value = "1"
                                                                    });
                                                                    listItems.Add(new SelectListItem
                                                                    {
                                                                        Text = "Female",
                                                                        Value = "2",

                                                                    });
                                                                    listItems.Add(new SelectListItem
                                                                    {
                                                                        Text = "Transgender",
                                                                        Value = "3",
                                                                        Selected = true
                                                                    }); }
                                                                @Html.DropDownListFor(model => model.Gender, listItems, "Select Gender")

                                                                @Html.ValidationMessageFor(model => model.Gender)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DateOfJoin, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DateOfJoin, new { id = "datepicker1", placeholder = "Select Joining Date" })
                                                                @Html.ValidationMessageFor(model => model.DateOfJoin)
                                                            </div>
                                                        </div>
                                                        <div class="control-group  span5">
                                                            @Html.LabelFor(model => model.edepartment, new { @class = "control-label" })
                                                            <div class="controls">

                                                                @Html.DropDownListFor(model => model.edepartment, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })

                                                                @Html.ValidationMessageFor(model => model.edepartment)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Typeid, new { @class = "control-label" })
                                                            <div class="controls">
                                                                <select id="Typeid" name="Typeid" class="input"></select>
                                                                @Html.ValidationMessageFor(model => model.Typeid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.eidtype, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @{
                                                                    List<SelectListItem> DocumentType = new List<SelectListItem>();
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Aadhar",
                                                                        Value = "1"
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Passport",
                                                                        Value = "2",

                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "DL",
                                                                        Value = "3",
                                                                        Selected = true
                                                                    });

                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "VoterID",
                                                                        Value = "4",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "PAN",
                                                                        Value = "5",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Refugees",
                                                                        Value = "6",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Others",
                                                                        Value = "7",
                                                                        Selected = true
                                                                    });}
                                                                @Html.DropDownListFor(model => model.eidtype, DocumentType, "Select Document Type")


                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="doctype" hidden>
                                                            @Html.LabelFor(model => model.Documenttypename, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Documenttypename, new { placeholder = "Enter Document Type.", maxlength = "100", @class = "input" })
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DocumentIDNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DocumentIDNo, new { placeholder = "Enter DocumnetIDNo.", maxlength = "12", @class = "input" })
                                                            </div>
                                                        </div>


                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.empreligion, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.empreligion, new SelectList(Model.religionlist, "Religionid", "Religionnm", "Select Religion"), "Select Religion", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.empreligion)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="cast">
                                                            @Html.LabelFor(model => model.empcast, new { @class = "control-label" })
                                                            <div class="controls">

                                                                @Html.DropDownListFor(model => model.empcast, new SelectList(Model.castelist, "Casteid", "CasteName", "Select Sub Category"), "Select Sub Category", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.empcast)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5" id="parish">
                                                            @Html.LabelFor(model => model.ParishName, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ParishName, new { placeholder = "Enter ParishName", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ParishName)
                                                            </div>
                                                        </div>


                                                        <div class="control-group span5" id="diocese">
                                                            @Html.LabelFor(model => model.DioceseName, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DioceseName, new { placeholder = "Enter Diocese Name", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.DioceseName)
                                                            </div>

                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.empcategory, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.empcategory, new SelectList(Model.categorylist, "StudCategoryid", "StudCategoryname", "Select Category"), "Select Category", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.empcategory)
                                                            </div>
                                                        </div>
                                                        <div class="control-group  required span5">
                                                            @Html.LabelFor(model => model.mtongue, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.mtongue, new { placeholder = "Enter Mother Tongue", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.mtongue)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span6 pull-right">
                                                            <br />
                                                            @Html.LabelFor(model => model.emppic, new { @class = "control-label" })
                                                            <div class="controls" style="width:47%">
                                                                <input type="file" name="files1" id="files1" />
                                                                <div id="pic1">
                                                                </div>
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.emppic)
                                                        </div>

                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Qualification</legend>
                                                        <table style="width: 100%;" class="table table-striped table-bordered">
                                                            <thead>
                                                                <tr>
                                                                    <td>Course</td>
                                                                    <td>Department</td>
                                                                    <td>University</td>
                                                                    <td>Precentage</td>
                                                                    <td>Year of Passing</td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td id="Equalification1">
                                                                        
                                                                        @Html.DropDownListFor(model => model.equalification1,new SelectList(Model.courselist, "CourseId", "CourseName", "Select Course"), "Select Course", new { @for = "select", @style="width:150px"})
                                                                        <span style="color:red">&nbsp;*</span>
                                                                    </td>
                                                                    <td id="Q_department1">

                                                                        @Html.DropDownListFor(model => model.q_department1, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select", @style = "width:150px" })
                                                                        <span style="color:red">&nbsp;*</span>
                                                                    </td>
                                                                    <td>
                                                                       
                                                                        @Html.TextBoxFor(model => model.euniversity1, new { placeholder = "Enter University Name", @class = "input", @style = "width:150px" })
                                                                        <span style="color:red">&nbsp;*</span>
                                                                        @Html.ValidationMessageFor(model => model.euniversity1)


                                                                    </td>
                                                                    <td id="Eprecentage1">

                                                                        @Html.TextBoxFor(model => model.eprecentage1, new { placeholder = "Enter Precentage", @class = "input", @style = "width:150px" })
                                                                        <span style="color:red">&nbsp;*</span>
                                                                        @Html.ValidationMessageFor(model => model.eprecentage1)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing1, new { @class="date-own form-control", placeholder = "Enter Year of Passing", @style = "width:150px" })
                                                                      
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing1)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td id="Equalification2">
                                                                        @Html.DropDownListFor(model => model.equalification2, new SelectList(Model.courselist, "CourseId", "CourseName", "Select Course"), "Select Course", new { @for = "select", @style = "width:150px" })
                                                                    </td>
                                                                    <td id="Q_department2">
                                                                        @Html.DropDownListFor(model => model.q_department2, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" , @style = "width:150px" })
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity2, new { placeholder = "Enter University Name", @class = "input", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity2)

                                                                    </td>
                                                                    <td id="Eprecentage2">

                                                                        @Html.TextBoxFor(model => model.eprecentage2, new { placeholder = "Enter Precentage", @class = "input", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage2)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing2, new { @class = "date-own form-control", placeholder = "Enter Year of Passing", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing2)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td id="Equalification3">
                                                                        @Html.DropDownListFor(model => model.equalification3, new SelectList(Model.courselist, "CourseId", "CourseName", "Select Course"), "Select Course", new { @for = "select", @style = "width:150px" })
                                                                    </td>
                                                                    <td id="Q_department3">
                                                                        @Html.DropDownListFor(model => model.q_department3, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" , @style = "width:150px" })
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity3, new { placeholder = "Enter University Name", @class = "input", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity3)

                                                                    </td>
                                                                    <td id="Eprecentage3">

                                                                        @Html.TextBoxFor(model => model.eprecentage3, new { placeholder = "Enter Precentage", @class = "input" , @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage3)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing3, new { @class = "date-own form-control", placeholder = "Enter Year of Passing", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing3)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td id="Equalification4">

                                                                        @Html.DropDownListFor(model => model.equalification4, new SelectList(Model.courselist, "CourseId", "CourseName", "Select Course"), "Select Course", new { @for = "select", @style = "width:150px" })
                                                                    </td>
                                                                    <td id="Q_department4">
                                                                        @Html.DropDownListFor(model => model.q_department4, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select", @style = "width:150px" })
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity4, new { placeholder = "Enter University Name", @class = "input", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity4)

                                                                    </td>
                                                                    <td id="Eprecentage4">

                                                                        @Html.TextBoxFor(model => model.eprecentage4, new { placeholder = "Enter Precentage", @class = "input", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage4)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing4, new { @class = "date-own form-control", placeholder = "Enter Year of Passing", @style = "width:150px" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing4)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                  
                                                                       <td>
                                                                           SET
                                                                        @Html.CheckBoxFor(m => m.q_Set, new { @checked = Model.q_Set })
                                                                    </td>
                                                                    <td>
                                                                       
                                                                        @Html.TextBoxFor(m => m.q_SetPassingYear, new { placeholder = "Enter SET Passing Year", @class = "input", maxlength = "4", @style = "width:150px" })
                                                                    </td>
                                                                    <td>
                                                                   NET @Html.CheckBoxFor(m => m.q_Net, new { @checked = Model.q_Net })
                                                                    </td>
                                                                    <td colspan="2">
                                                                     
                                                                        @Html.TextBoxFor(m => m.q_NetPassingYear, new { placeholder = "Enter NET Passing Year", @class = "input", maxlength = "4", @style = "width:150px" })
                                                                    </td>
                                                                    </tr>
</tbody>

                                                        </table>

                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Medical Info</legend>
                                                        <div class="control-group  span5">
                                                            @Html.LabelFor(model => model.eweight, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.eweight, new { placeholder = "Enter Weight in Kg", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.eweight)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.eheight, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.eheight, new { placeholder = "Enter Height in Cms", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.eheight)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.eblood, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.eblood, new SelectList(Model.bloodgrouplist, "bloodgroupid", "bloodgroupnm", "Select Blood Group"), "Select Blood Group", new { @for = "select" })

                                                                @Html.ValidationMessageFor(model => model.eblood)
                                                            </div>
                                                        </div>


                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Emergency Contact Details</legend>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.dname, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.dname, new { placeholder = "Enter Contact Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.dname)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.dcontact, new { @class = "control-label" })
                                                            <div class="controls" style="width:25%">
                                                                @Html.TextBoxFor(model => model.DCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                            </div><div class="controls">
                                                                @Html.TextBoxFor(model => model.dcontact, new { placeholder = "Enter Contact Number", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.dcontact)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.conttactrelation, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.conttactrelation, new { placeholder = "Enter Contact RelationShip", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.conttactrelation)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.daddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.daddress, new { placeholder = "Enter Contact Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.daddress)
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <button type="button" class="btn btn-primary pull-right" id="btnnext" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Next</button>
                                                </div>
                                            <div id="tabs-2">
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>Parent's Details or Spouse</legend>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.relationship, new { @class = "control-label" })
                                                        <div style="margin-left: 45.5%">
                                                            <div class="pull-left">
                                                                @{
                                                                List<SelectListItem> rlistItems = new List<SelectListItem>();
                                                                rlistItems.Add(new SelectListItem
                                                                {
                                                                Text = "Mother",
                                                                Value = "1"
                                                                });
                                                                rlistItems.Add(new SelectListItem
                                                                {
                                                                Text = "Father",
                                                                Value = "2",

                                                                });
                                                                rlistItems.Add(new SelectListItem
                                                                {
                                                                Text = "Spouse",
                                                                Value = "3",
                                                                Selected = true
                                                                });
                                                                rlistItems.Add(new SelectListItem
                                                                {
                                                                Text = "Guardian ",
                                                                Value = "1"
                                                                }); }
                                                                @Html.DropDownListFor(model => model.relationship, rlistItems, "-- Select Relationship --")

                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.relationship)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.pname, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.pname, new { placeholder = "Enter Parent's Name", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.pname)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.poccupation, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.poccupation, new { placeholder = "Enter Parent's Occupation", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.poccupation)
                                                        </div>
                                                    </div>
                                                    <div class="control-group  span5">
                                                        @Html.LabelFor(model => model.pqualification, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.pqualification, new { placeholder = "Enter Parent's Qualification" })
                                                            @Html.ValidationMessageFor(model => model.pqualification)
                                                        </div>
                                                    </div>
                                                    <div class="control-group  span5">
                                                        @Html.LabelFor(model => model.pemail, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.pemail, new { placeholder = "Enter Parent's Email Address" })
                                                            @Html.ValidationMessageFor(model => model.pemail)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.pofficeaddress, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextAreaFor(model => model.pofficeaddress, new { placeholder = "Enter Parent's Office Address" })
                                                            @Html.ValidationMessageFor(model => model.pofficeaddress)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.pcontact, new { @class = "control-label" })
                                                        <div class="controls" style="width:25%">
                                                            @Html.TextBoxFor(model => model.PCODE, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                        </div><div class="controls">
                                                            @Html.TextBoxFor(model => model.pcontact, new { placeholder = "Enter Parent's Contact", maxlength = "10" })
                                                            @Html.ValidationMessageFor(model => model.pcontact)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.ppic, new { @class = "control-label" })
                                                        <div class="controls" style="width:47%">
                                                            <input type="file" name="files2" id="files2" />
                                                            <div id="pic2">
                                                            </div>
                                                            @Html.ValidationMessageFor(model => model.ppic)
                                                        </div>
                                                    </div>
                                                </fieldset>
                                                <br />
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>Current Address</legend>

                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.ccountry, new { @class = "control-label", @for = "select" })
                                                        <div class="controls">
                                                            @Html.DropDownListFor(m => m.ccountry, new SelectList(Model.countrylist, "Countryid", "CountryName", "Select Country"), "Select Country", new { @for = "select" })
                                                            @Html.ValidationMessageFor(model => model.ccountry)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.cstate, new { @class = "control-label", @for = "select" })
                                                        <div class="controls">
                                                            @Html.DropDownListFor(m => m.cstate, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state")
                                                            @Html.ValidationMessageFor(model => model.cstate)
                                                        </div>
                                                    </div>

                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.ccity, new { @class = "control-label", @for = "select" })
                                                        <div class="controls">
                                                            @Html.DropDownListFor(m => m.ccity, new SelectList(Model.citylist, "Cityid", "CityName", "Select City"), "Select city")
                                                            @Html.ValidationMessageFor(model => model.ccity)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.cstreet, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextAreaFor(model => model.cstreet, new { placeholder = "Enter Street", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.cstreet)
                                                        </div>
                                                    </div>
                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.cpin, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.cpin, new { placeholder = "Enter Pincode", maxlength = "6", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.cpin)
                                                        </div>
                                                    </div>

                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.phome, new { @class = "control-label" })
                                                        <div class="controls" style="width:25%">
                                                            @Html.TextBoxFor(model => model.PHCODE, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                        </div><div class="controls">
                                                            @Html.TextBoxFor(model => model.phome, new { placeholder = "Enter Home Phone Number", maxlength = "10" })
                                                            @Html.ValidationMessageFor(model => model.phome)
                                                        </div>
                                                    </div>

                                                    <div class="control-group required span5">
                                                        @Html.LabelFor(model => model.hmobile, new { @class = "control-label" })
                                                        <div class="controls" style="width:25%">
                                                            @Html.TextBoxFor(model => model.MCODE, new { placeholder = "Code", maxlength = "4" ,@value="+91", @class = "input-small", @Style = "width:86.5%" })
                                                        </div><div class="controls">
                                                            @Html.TextBoxFor(model => model.hmobile, new { placeholder = "Enter Mobile Number", maxlength = "10" })
                                                            @Html.ValidationMessageFor(model => model.hmobile)
                                                        </div>
                                                    </div>

                                                </fieldset>
                                             
                                                <br />
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>Permanant Address</legend>
                                                    <div class="control-group span10">
                                                        <input type="checkbox"  name="sameasabovecheckbox" id="cbxFillCurrentAdd" value="sameasabovecheckbox"> Same as above
                                                   
                                                        </div>
                                                    <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pacountry, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">

                                                                @Html.DropDownListFor(m => m.pacountry, new SelectList(Model.countrylist, "Countryid", "CountryName", "Select Country"), "Select Country", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.pacountry)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pastate, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.pastate, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state")
                                                                @Html.ValidationMessageFor(model => model.pastate)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pacity, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.pacity, new SelectList(Model.citylist, "Cityid", "CityName", "Select City"), "Select city")
                                                                @Html.ValidationMessageFor(model => model.pacity)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pastreet, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.pastreet, new { placeholder = "Enter Street", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.pastreet)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.papin, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.papin, new { placeholder = "Enter Pincode", maxlength = "6", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.papin)
                                                            </div>
                                                        </div>
</fieldset>
                                                <br />
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>Bank Details</legend>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.bankname, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.bankname, new { placeholder = "Enter Bank Name", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.bankname)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.branch, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.branch, new { placeholder = "Enter Branch Name", maxlength = "20", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.branch)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.ifsccode, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.ifsccode, new { placeholder = "Enter IFSC Code" })
                                                            @Html.ValidationMessageFor(model => model.ifsccode)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.accountno, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.accountno, new { placeholder = "Enter Account Number" })
                                                            @Html.ValidationMessageFor(model => model.accountno)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.acname, new { @class = "control-label" })
                                                        <div class="controls">
                                                            @Html.TextAreaFor(model => model.acname, new { placeholder = "Enter Name on the Account" })
                                                            @Html.ValidationMessageFor(model => model.acname)
                                                        </div>
                                                    </div>
                                                </fieldset>

                                                <button type="button" class="btn btn-primary pull-right" id="btnnext1" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Next</button>
                                                <button type="button" class="btn btn-primary pull-left" id="Previous" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Previous</button>

                                            </div>
                                            <div id="tabs-3">
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>College</legend>
                                                    <!--College exp_1-->
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.collagename, new { @class = "control-label", @for = "focusedInput" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.collagename, new { placeholder = "Enter College Name", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.collagename)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.university, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.university, new { placeholder = "Affliated to which University", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.university)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.joiningdate, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.joiningdate, new { id = "datepicker2", @readonly = "readonly", placeholder = "Select Date of Joining",@class="StartDate" })
                                                            @Html.ValidationMessageFor(model => model.joiningdate)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.lastdate, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.lastdate, new { id = "datepicker3", @readonly = "readonly", placeholder = "Select Last Date",@class = "EndDate" })
                                                            @Html.ValidationMessageFor(model => model.lastdate)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.ctotal, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.ctotal, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                            @Html.ValidationMessageFor(model => model.ctotal)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.ldesignation, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.ldesignation, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.ldesignation)
                                                        </div>
                                                    </div>
                                                    <!--College exp_2-->
                                                    <div class="control-group span10" id="colexp2">
                                                        <input type="checkbox"  name="gcheckbox" id="cbxShowHide" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                        <div id="autoUpdate" class="autoUpdate" hidden>
                                                            <br />
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.collagename1, new { @class = "control-label", @for = "focusedInput" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.collagename1, new { placeholder = "Enter College Name", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.collagename1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.university1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.university1, new { placeholder = "Affliated to which University", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.university1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.joiningdate1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.joiningdate1, new { id = "datepicker6", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                    @Html.ValidationMessageFor(model => model.joiningdate1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.lastdate1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.lastdate1, new { id = "datepicker7", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                    @Html.ValidationMessageFor(model => model.lastdate1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.ctotal1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.ctotal1, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                    @Html.ValidationMessageFor(model => model.ctotal1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.ldesignation1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.ldesignation1, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.ldesignation1)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    <!--College exp_3-->
                                                    <div id="colexp3" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide1" value="gcheckbox"> Click here to fill More Experience
                                                            </div>
                                                        </div>
                                                    <div id="autoUpdate1" class="autoUpdate1" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename2, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename2, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university2, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate2, new { id = "datepicker10", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate2, new { id = "datepicker11", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal2, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal1)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation2, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation2)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_4-->
                                                    <div  id="colexp4" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                         
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide2" value="gcheckbox"> Click here to fill More Experience
                                                            </div>
                                                        </div>
                                                    <div id="autoUpdate2" class="autoUpdate2" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename3, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename3, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university3, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate3, new { id = "datepicker12", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate3, new { id = "datepicker13", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal3, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation3, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation3)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_5-->
                                                    <div  id="colexp5" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide3" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdate3" class="autoUpdate3" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename4, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename4, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university4, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate4, new { id = "datepicker14", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate4, new { id = "datepicker15", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal4, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation4, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation4)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_6-->
                                                    <div id="colexp6" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                          
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide4" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdate4" class="autoUpdate4" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename5, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename5, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university5, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate5, new { id = "datepicker16", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate5, new { id = "datepicker17", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal5, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation5, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation5)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_7-->
                                                    <div id="colexp7" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                           
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide5" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdate5" class="autoUpdate5" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename6, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename6, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university6, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate6, new { id = "datepicker18", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate6, new { id = "datepicker19", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal6, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation6, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation6)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_8-->
                                                    <div  id="colexp8" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                           
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide6" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                        </div>
                                                    <div id="autoUpdate6" class="autoUpdate6" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename7, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename7, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university7, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate7, new { id = "datepicker20", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate7, new { id = "datepicker21", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal7, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal1)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation7, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation2)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_9-->
                                                    <div id="colexp9" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                           
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide7" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdate7" class="autoUpdate7" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename8, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename8, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university8, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate8, new { id = "datepicker22", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate8, new { id = "datepicker23", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal8, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation8, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation8)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!--College exp_10-->
                                                    <div id="colexp10" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                          
                                                            <input type="checkbox"  name="gcheckbox" id="cbxShowHide8" value="gcheckbox"> Click here to fill More Experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdate8" class="autoUpdate8" hidden>
                                                        <br />
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.collagename9, new { @class = "control-label", @for = "focusedInput" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.collagename9, new { placeholder = "Enter College Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.collagename9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.university9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.university9, new { placeholder = "Affliated to which University", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.university9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.joiningdate9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.joiningdate9, new { id = "datepicker24", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.joiningdate9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.lastdate9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.lastdate9, new { id = "datepicker25", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.lastdate9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ctotal9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ctotal9, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.ctotal9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ldesignation9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ldesignation9, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ldesignation9)
                                                            </div>
                                                        </div>
                                                    </div>
</fieldset>
                                                <br />
                                                <fieldset class="test" style="width: 100%;">
                                                    <legend>Corporate</legend>
                                                    <!--Corporate exp_1-->
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.companyname, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.companyname, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.companyname)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.clastdesignation, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.clastdesignation, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.clastdesignation)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.cjoiningdate, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.cjoiningdate, new { id = "datepicker4", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                            @Html.ValidationMessageFor(model => model.cjoiningdate)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.clastdate, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.clastdate, new { id = "datepicker5", @readonly = "readonly", placeholder = "Select Last Date" })
                                                            @Html.ValidationMessageFor(model => model.clastdate)
                                                        </div>
                                                    </div>
                                                    <div class="control-group span5">
                                                        @Html.LabelFor(model => model.total, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.total, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                            @Html.ValidationMessageFor(model => model.total)
                                                        </div>
                                                    </div>
                                                    @*<div class="control-group span5">
                                                        @Html.LabelFor(model => model.employeeemail, new { @class = "control-label" })

                                                        <div class="controls">
                                                            @Html.TextBoxFor(model => model.employeeemail, new { placeholder = "Enter Email Address", maxlength = "30", @class = "input" })
                                                            @Html.ValidationMessageFor(model => model.employeeemail)
                                                        </div>
                                                    </div>*@
                                                    <!--Corporate exp_2-->
                                                        <div class="control-group span10" id="comexp2">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany1" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                        <div id="autoUpdateCompany1" class="autoUpdateCompany1" hidden>
                                                            <br />

                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.companyname1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.companyname1, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.companyname1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.clastdesignation1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.clastdesignation1, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.clastdesignation1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.cjoiningdate1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.cjoiningdate1, new { id = "datepicker8", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                    @Html.ValidationMessageFor(model => model.cjoiningdate1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.clastdate1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.clastdate1, new { id = "datepicker9", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                    @Html.ValidationMessageFor(model => model.clastdate1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.total1, new { @class = "control-label" })

                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.total1, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                    @Html.ValidationMessageFor(model => model.total1)
                                                                </div>
                                                            </div>

                                                        </div>
                                                    <!--Corporate exp_3-->
                                                    <div id="comexp3" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany2" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany2" class="autoUpdateCompany2" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname2, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation2, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate2, new { id = "datepicker26", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate2, new { id = "datepicker27", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate2)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total2, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total2, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total2)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_4-->
                                                    <div id="comexp4" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany3" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany3" class="autoUpdateCompany3" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname3, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation3, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate3, new { id = "datepicker28", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate3, new { id = "datepicker29", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate3)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total3, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total3, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total3)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_5-->
                                                    <div id="comexp5" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany4" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany4" class="autoUpdateCompany4" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname4, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation4, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate4, new { id = "datepicker30", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate4, new { id = "datepicker31", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate4)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total4, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total4, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total4)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_6-->
                                                    <div id="comexp6" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany5" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany5" class="autoUpdateCompany5" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname5, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation5, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate5, new { id = "datepicker32", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate5, new { id = "datepicker33", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate5)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total5, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total5, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total5)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_7-->
                                                    <div id="comexp7" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany6" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany6" class="autoUpdateCompany6" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname6, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation6, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate6, new { id = "datepicker34", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate6, new { id = "datepicker35", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate6)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total6, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total6, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total6)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_8-->
                                                    <div  id="comexp8" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany7" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany7" class="autoUpdateCompany7" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname7, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation7, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate7, new { id = "datepicker36", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate7, new { id = "datepicker37", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate7)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total7, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total7, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total7)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_9-->
                                                    <div id="comexp9" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany8" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany8" class="autoUpdateCompany8" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname8, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation8, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate8, new { id = "datepicker38", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate8, new { id = "datepicker39", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate8)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total8, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total8, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total8)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <!--Corporate exp_10-->
                                                    <div id="comexp10" hidden>
                                                        <br />
                                                        <div class="control-group span10">
                                                            <input type="checkbox" name="pgcheckbox" id="cbxShowHideCompany9" value="pgcheckbox"> Click here to fill More experience
                                                        </div>
                                                    </div>
                                                    <div id="autoUpdateCompany9" class="autoUpdateCompany9" hidden>
                                                        <br />

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.companyname9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.companyname9, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.companyname9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdesignation9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdesignation9, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.clastdesignation9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cjoiningdate9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cjoiningdate9, new { id = "datepicker40", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                                @Html.ValidationMessageFor(model => model.cjoiningdate9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.clastdate9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.clastdate9, new { id = "datepicker41", @readonly = "readonly", placeholder = "Select Last Date" })
                                                                @Html.ValidationMessageFor(model => model.clastdate9)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.total9, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.total9, new { @readonly = "readonly", placeholder = "Total Experience" })
                                                                @Html.ValidationMessageFor(model => model.total9)
                                                            </div>
                                                        </div>

                                                    </div>
</fieldset>
                                                <button type="button" class="btn btn-primary pull-left" id="Previous1" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Previous</button>
                                                <br />
                                                <div class="form-actions">
                                                    <div class="control-group span8 pull-right">
                                                        <input type="submit" class="btn btn-primary" id="insert" value="Submit" />
                                                    </div>

                                                </div>
                                            </div>
                                                                    }
                                        </div>
                                    </div>
                                </fieldset>
                            </div>

                        </div>

                    </div>
                </div>
                
            </div>
        </div>
    </div>
</div>

