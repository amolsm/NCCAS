@model Entity.Chaptercompleteviewmodel
@{
    ViewBag.Title = "ChapterComplete";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<style type="text/css">
    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }

    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }

    #ui-datepicker-div {
        display: none;
    }
</style>

<style type="text/css">

    .modal {
        position: fixed;
        top: 10%;
        left: 50%;
        z-index: 1050;
        width: 80%;
        margin-left: -40%;
        background-color: #fff;
        border: 1px solid #999;
        border: 1px solid rgba(0,0,0,0.3);
        -webkit-border-radius: 6px;
        -moz-border-radius: 6px;
        border-radius: 6px;
        outline: 0;
        -webkit-box-shadow: 0 3px 7px rgba(0,0,0,0.3);
        -moz-box-shadow: 0 3px 7px rgba(0,0,0,0.3);
        box-shadow: 0 3px 7px rgba(0,0,0,0.3);
        -webkit-background-clip: padding-box;
        -moz-background-clip: padding-box;
        background-clip: padding-box;
    }

    .tblCapterContent {
        font-family: verdana,arial,sans-serif;
        font-size: 11px;
        color: #333333;
        border-width: 1px;
        border-color: #666666;
        border-collapse: collapse;
    }

    .productth {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #dedede;
        width:200px;
    }

    .prtoducttd {
        border-width: 1px;
        padding: 8px;
        border-style: solid;
        border-color: #666666;
        background-color: #ffffff;
        width:200px;
    }
 

    
</style>

<script type="text/javascript">
    $(document).ready(function () {
        $("#insert").hide();
        $("#CourseId").change(function () {
            $("#Departmentid").empty();
            debugger;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Getdepartment")',
                dataType: 'json',
                data: { id: $("#CourseId").val() },
                success: function (DClass) {
                    if (DClass != "") {
                        var item = '<option value="0">Select Department</option>';
                        $.each(DClass, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#Departmentid").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Department</option>';
                        $("#Departmentid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Class.' + ex);
                }
            });
            return false;
        })
        //////////////////////////////////////////////////////////////

        $("#result").on("click", ".edit", function (evt) {
            debugger;
            var ChapterId = this.id;
            var courseid = $('#CourseId').val();
            var deptid=$('#Departmentid').val();
            var yearid=$('#YearId').val();
            var subjectid=$('#Subjectid').val();
           
            $("#tblCapterContent tbody tr").remove();
            
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillChapterContentDetails")',
                dataType: 'JSON',
                data: { courseid: courseid,deptid:deptid,yearid:yearid,subjectid:subjectid,ChapterId:ChapterId },
                success: function (data) {
                    if (data != "") {
                        var items = '';
                        debugger;
                        $.each(data, function (i, item) {
                            debugger;
                            var id = "<tr id=Contentsids_" + item.Content_id+ ">";
                            var chapterid="<input type=hidden  class='addcls' id=Chapterids_" + item.Content_id + " value='" + ChapterId + "'>"
                            if (item.IsCompleted == "0")
                            { var checkbox = "<td class='prtoducttd'>" + "<input type=checkbox  class='addcls' id=AddContent_" + item.Content_id + " value='" + item.Content_id + "'>" + "</td>"
                            var status="Pending"}
                            else { var checkbox = "<td class='prtoducttd'>" + "<input type=checkbox disabled class='addcls'  id=AddContent_" + item.Content_id +" value='" + item.Content_id + "'>"+ "</td>" 
                            var status="Completed"}
                            if(item.CompleteDate==null)
                            {var date="<td class='prtoducttd'>" +""+ "</td>" + "</tr>"}else{var date="<td class='prtoducttd'>" + (new Date(parseInt(item.CompleteDate.substr(6)))).toDateString() + "</td>" + "</tr>"}
                            var row = "<td class='prtoducttd'>" + item.Content_Name + "</td>"
                            + "<td class='prtoducttd'>" + status + "</td>"
                            var remarks="<td class='prtoducttd'>" + "<input type=text  class='addcls' id=Remark_" + item.Content_id +" value='" + item.Remark + "'>"+ "</td>"
                            var rows = id + chapterid+ checkbox + row + remarks+date;
                            $('#tblCapterContent tbody').append(rows);


                        });
                    } else {
                        var rows = "<tr>"
                            + "<td class='prtoducttd' colspan='7'>" +"No Records Found"+ "</td>"

                            + "</tr>";
                        $('#tblCapterContent tbody').append(rows);
                    }
                    $('#myModal').modal('show');
                },
                error: function (ex) {
                    var r = jQuery.parseJSON(response.responseText);
                    alert("Message: " + r.Message);
                    alert("StackTrace: " + r.StackTrace);
                    alert("ExceptionType: " + r.ExceptionType);
                }
            });
            $('#myModal').modal('show');
        });


        $("#Departmentid").change(function () {
            $("#YearId").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetYearClass")',
                dataType: 'json',
                data: { depid: $("#Departmentid").val(), cid: $("#CourseId").val() },
                success: function (yeardata) {
                    if (yeardata != "") {
                        var item = '<option value="0">Select Year</option>';
                        $.each(yeardata, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#YearId").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Year</option>';
                        $("#YearId").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Year.' + ex);
                }
            });
            return false;
        });


        $("#YearId").change(function () {
            $("#Subjectid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubjects")',
                dataType: 'json',
                data: { id: $("#CourseId").val(), year: $("#YearId").val(), department: $("#Departmentid").val() },
                success: function (subject) {
                    if (subject != "") {
                        var item = '<option value="0">Select Subject</option>';
                        $.each(subject, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#Subjectid").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Subject</option>';
                        $("#Subjectid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Subject.' + ex);
                }
               });
            return false;
        })




        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').datepicker('setDate', new Date());

        function myFunction() { var ChapterIds = $("#chaplist").val(data.length); }

        $("#header").click(function () {
            if ($("#Add_header").is(":checked")) {
                $(".addcls").prop('checked', true);
                $(".Reason").attr("disabled", true);
            }
            else {
                $(".addcls").prop('checked', false);
                $(".Reason").attr("disabled", false);
            }

        });

        $(document).on('change', '[type=checkbox]', function (e) {

            var empid = this.id.replace("Present_", "");
            var absent = $("#Present_" + empid);
            var remark = "";

            if ($("#Present_" + empid).is(":checked")) {
                $("#Remark_" + empid).attr("disabled", true);
            }
            else {
                $("#Remark_" + empid).attr("disabled", false);
            }
        });

        $('#Subjectid').change(function () {
            $("#insert").show();
            var SubjectId = $('#Subjectid').val();
            if (SubjectId == '') {
                $("#insert").hide();
                $('#result').html('');
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetChapterlist")',
                dataType: 'json',
                data: { id: $("#Subjectid").val() },
                success: function (data) {

                    var result = $('#result');
                    var head = $('#header');
                    var table; var header;
                    var ChapterIds;
                    result.html('');
                    $("#chaplist").val(data.length);
                    header = "<table  class='table tb-parshav tablesorter'><thead><tr><th width='100px;'>Chapter ID</th><th  width='200px;'>Chapter Name</th><th  width='200px;'>Status</th><th  width='200px;'>Complete Content</th></thead></table>";
                    head.html(header);
                    table = "<table class='table tb-parshav tablesorter'><tbody>";
                    for (var i = 0; i < data.length; i++) {
                        ChapterIds = data[i].Chapter_id;
                        table += "<tr id=" + ChapterIds + "><td width='100px;'>" + data[i].Chapter_id.toString() + "</td><td  width='200px;'>" + data[i].ChapterName.toString() + "</td><td width='200px;'>" + data[i].complete.toString() + "</td><td  width='200px;'><button type='button' class='btn btn-default btn_edit edit' id='" + data[i].Chapter_id.toString() + "'  value='" + data[i].Chapter_id.toString() + "'>Add Complete Content</button></td></tr>";
                    }
                    table += "</tbody><table>";
                    result.html(table);
                    myFunction();
                }

            });
        });

        $("#addcontent").click(function () {
            debugger;
            var completiondetails = [];
            $('input:checkbox.addcls').each(function (evt) {
                var contentid=($(this).val());
                var chapterid=($("#Chapterids_"+contentid).val());
                var CompletionDate = ($("#datepicker").val());
              
                @{int userid;
                    userid = Convert.ToInt32(HttpContext.Current.Session["Userid"]); }
                debugger;
                var teacherid = @userid;

                var complete = '';
                var remark = '';
                var department = ($("#Departmentid").val());
                var subject = ($("#Subjectid").val());
                var course = ($("#CourseId").val());
                var year = ($("#YearId").val());
                //var complete = '';

                debugger;
                if ($(this).prop('checked')) {
                    complete = 'true';
                    var remark = ($("#Remark_" + contentid).val());
                    completiondetails.push(teacherid + "," + CompletionDate + "," + complete + "," + remark + "," + department + "," + chapterid + "," + subject + "," + course + "," + year+","+contentid);

                }
               

            });
            if (completiondetails != "") {
                var options = {};
                options.type = "POST",
                options.url = '@Url.Action("DMLCompletion")',
                options.data = JSON.stringify(completiondetails);
                options.contentType = "application/json";
                options.success = function (completiondetails) {
                    $("#msgs").show();
                    $("#lblmsgs").text("Chapter details updated successfully!..");
                    $("#lblmsgs").css({ "color": "green" });
                    $("#lblmsgs").css({ "font-size": "15px" });
                    $("#result").html(result);
                    clear();

                    ReloadPaging();
                    //alert("PresentList updated successfully!..");
                };
                options.error = function (completiondetails) {
                    $("#msg").show();
                    $("#lblmsg").text("Error while save the records!..");
                    $("#lblmsg").css({ "color": "orange" });
                    $("#lblmsg").css({ "font-size": "15px" });
                    $("#result").html(result);
                    clear();

                    ReloadPaging();
                    //alert("Error while save the records!");
                };
                $.ajax(options);
            }


        });

    });
    ReloadPaging();
</script>


@Html.Hidden("ChapterIds")@Html.Partial("_PermissionHiddenFlds")
<div class="modal fade" id="myModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add Completed Content For Chapter</h4>
            </div>
            <div class="modal-body">
                <p>
                    <b>List Of Contents</b><br>
                    <table id="tblCapterContent"  class="tblCapterContent">
                        <thead>
                           
                             <tr>
                               
                                <th align="left" class="productth">Select</th>
                                <th align="left" class="productth">ContentName</th>
                                 <th align="left" class="productth">Status</th>
                                 <th align="left" class="productth">Remark</th>
                                <th align="left" class="productth">CompletedDate</th>
                              
                               </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" value="Add" id="addcontent"class="btn btn-primary" data-dismiss="modal">Save changes</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_AttendanceMenuList")
        <div id="content" class="span10">
            <div class="row-fluid">

                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Chapter Complete", "Index", "ChapterComplete", "")<i class="icon-angle-right"></i>
                    </li>
                    <li class="active">Chapter Details</li>

                    <div id="srch_criteria" style="float: right;display:none;">

                        @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
                        <input type="submit" id="srch" value="Find" />

                    </div>
                </ul>
                <div class="panel-body">
                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        <strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Chapter Completion Details</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <form id="frm" class="form-horizontal">


                                <fieldset>
                                    @using (Html.BeginForm("ClassChapterComplete", "Complete", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm", @class = "form-horizontal" }))
                                    {
                                        @Html.ValidationSummary(true)
                                        <div>
                                            <h2 style="color:red;">
                                                @TempData["ErrorMessage"]
                                            </h2>
                                        </div>

                                        @*<div class="control-group span5">
                                                @Html.LabelFor(model => model.Teacherid, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.DropDownListFor(model => model.Teacherid, new SelectList(Model.Teacherlist, "Dept_id", "Dept_name", "Select Department"), "Select Department")
                                                    @Html.ValidationMessageFor(model => model.Teacherid)
                                                </div>
                                            </div>*@


                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.CourseId, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.Courselist, "Courseid", "CourseName", "Select Course"), "Select Course")
                                                @Html.ValidationMessageFor(model => model.CourseId)
                                            </div>
                                        </div>

                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.Departmentid, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.Departmentid, new SelectList(Model.Departmentlist, "Dept_id", "Dept_name", "Select Department"), "Select Department")
                                                @Html.ValidationMessageFor(model => model.Departmentid)
                                            </div>
                                        </div>


                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.YearId, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.YearId, new SelectList(Model.Yearlist, "yearid", "YearName", "Select Year"), "Select Year")
                                                @Html.ValidationMessageFor(model => model.YearId)
                                            </div>
                                        </div>

                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.Subjectid, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.DropDownListFor(model => model.Subjectid, new SelectList(Model.Subjectlist, "Subjectid", "SubjectNm", "Select Subject"), "Select Subject")
                                                @Html.ValidationMessageFor(model => model.Subjectid)
                                            </div>
                                        </div>

                                        <div class="control-group span5">
                                            @Html.LabelFor(model => model.CompleteDate, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.CompleteDate, new { id = "datepicker", placeholder = "Select Date of Attendance" })
                                                @Html.ValidationMessageFor(model => model.CompleteDate)
                                            </div>
                                        </div>

                                                <div class="control-group span5" id="staffreason" style="display: none;">
                                                </div>

                                                <div>
                                                    <input type="button" class="btn btn-primary" id="insert" value="submit" />
                                                </div>





                                    }
                                </fieldset>
                            </form>

                        </div>
                    </div><!--/span-->

                </div><!--/row-->

                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Chapter List</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <div id="header" class="table-responsive">
                            </div>
                            <div id="result" class="table-responsive">
                            </div>
                        </div>



                    </div>
                </div>

            </div>
        </div>

    </div>
</div>