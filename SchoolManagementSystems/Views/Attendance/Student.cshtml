@model Entity.Attendanceviewmodel
@{
    ViewBag.Title = "Student";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
@*<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>*@
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<style type="text/css">
  

.closebtn {
    margin-left: 15px;
    color: black;
    font-weight: bold;
    float: right;
    font-size: 22px;
    line-height: 20px;
    cursor: pointer;
    transition: 0.3s;
}

    .closebtn:hover {
        color: blue;
    }
    .ui-datepicker-calendar
    {
        background-color: antiquewhite;
    }
    
    .ui-datepicker-title
    {
        background-color: antiquewhite;
    }
    
    .ui-icon ui-icon-circle-triangle-w
    {
        background-color: antiquewhite;
    }
    #ui-datepicker-div
    {
        display: none;
    }
</style>
 
    

<script type="text/javascript">
  
    $(document).ready(function () {
        $("#insert").hide();



        $("#Classid").change(function () {
            $("#department").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCourseTeacherDepartment")',
                dataType: 'json',
                data: { id: $("#Classid").val() },
                success: function (DClass) {
                    if (DClass != "") {
                        var item = '<option value="0">Select Department</option>';
                        $.each(DClass, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#department").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Department</option>';
                        $("#department").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Department.' + ex);
                }
            });
            return false;
        });
        $("#department").change(function () {
            $("#year").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetYearClass")',
                dataType: 'json',
                data: { depid: $("#department").val(), cid: $("#Classid").val() },
                success: function (yeardata) {
                    if (yeardata != "") {
                        var item = '<option value="0">Select Year</option>';
                        $.each(yeardata, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#year").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Year</option>';
                        $("#year").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Year.' + ex);
                }
            });
             return false;
         });
        $("#year").change(function () {
            $("#subjectid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubject")',
                dataType: 'json',
                data: { id: $("#Classid").val(), dept: $("#department").val(), year: $("#year").val() },
                success: function (subject) {
                    if (subject != "") {
                        var item = '<option value="0">Select Subject</option>';
                        $.each(subject, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#subjectid").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Subject</option>';
                        $("#subjectid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Subject.' + ex);
                }
            });
            return false;
        });

        

        $("#insert").click(function () {
            var allValid = true;
            $(".selectionrequired").each(function () {
                // check if value was selected
                if ($(this).val() == "" || $(this).val() == 0) {
                    alert("All fields are required");
                    // if value is not selected set state to false
                    allValid = false;
                    return false;
                }
            });
            // display success only if state is true
            if (allValid === true) {
            
                var presentdetails = [];
                $('input:checkbox.addcls').each(function (evt) {
                    var PresentDate = ($("#datepicker").val());
                    var subject = ($("#subjectid").val());
                    var studentid = ($(this).val());
                    var remark = '';
                    var reason = '';
                    var session = ($("#session").val());
                    var LecTimeId = ($("#LecTimeId").val());
                    if ($(this).prop('checked')) {
                        remark = 'true';
                        presentdetails.push(studentid + "," + PresentDate + "," + remark + "," + reason + "," + subject + "," + session + "," + LecTimeId);

                    }
                    else {
                        remark = 'false'
                        var studentid = ($(this).val());

                        var reason = ($("#Reason_" + studentid).val());
                        if (reason != "") {
                            presentdetails.push(studentid + "," + PresentDate + "," + remark + "," + reason + "," + subject + "," + session + "," + LecTimeId);

                        }
                        else {
                            alert("Please provide reason for Absent Student !!");
                            presentdetails = [];
                            return false;
                        }
                    }
                });
                if (presentdetails != "") {
                    var options = {};
                    options.type = "POST",
                    options.url = '@Url.Action("DMLAttendance")',
                    options.data = JSON.stringify(presentdetails);
                    options.contentType = "application/json";
                    options.success = function (presentdetails) {
                        $("#msgs").show();
                        $("#lblmsgs").text("PresentList  updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();

                        ReloadPaging();
                        //alert("PresentList updated successfully!..");
                    };
                    options.error = function (presentdetails) {
                        $("#msg").show();
                        $("#lblmsg").text("Error while save the records!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();

                        ReloadPaging();
                        //alert("Error while save the records!");
                    };
                    $.ajax(options);
                }
            }
           
            });
        


        $("#view").click(function () {
          
            var allValid = true;
            $(".view").each(function () {
                // check if value was selected
                if ($(this).val() == "" || $(this).val() == 0) {
                    $("#insert").hide();
                    alert("Please select course , department and year for view student attendance list")
                    $('#result').html('');
                    $('#header').html('');
                    // if value is not selected set state to false
                    allValid = false;
                    return false;
                }
            });
            // display success only if state is true
            if (allValid === true) {
              $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStudents")',
                    dataType: 'json',
                    data: { id: $("#Classid").val(), id2: $("#year").val(), id3: $("#department").val() },
                    success: function (data) {
                        $("#insert").show();
                        var result = $('#result');
                        var head = $('#header');
                        var table; var header
                        var StudentIds;
                        result.html('');
                        $("#students").val(data.length);
                        header = "<table  class='table tb-parshav tablesorter'><thead><tr><th width='100px;'>Student ID</th><th  width='200px;'>Student Name</th><th width='100px;'>Student Roll No</th><th width='100px;'><input type='checkbox' id='Add_header' />Present</th><th width='300px;'>Reason</th></thead></table>";
                        head.html(header);
                        table = "<table class='table tb-parshav tablesorter'><tbody>";
                        for (var i = 0; i < data.length; i++) {
                            StudentIds = data[i].Studid;
                            table += "<tr id=" + StudentIds + "><td width='100px;'>" + data[i].Studid.toString() + "</td><td  width='200px;'>" + data[i].Studnm.toString() + "</td><td width='100px;'>" + data[i].RollNo.toString() + "</td><td width='100px;'><input class='addcls' type='checkbox' onchange='valueChanged()'  id='Present_" + data[i].Studid.toString() + "'  value='" + data[i].Studid.toString() + "'></td><td width='300px;'><input  type='text' id='Reason_" + data[i].Studid + "'  class='Reason' /></td></tr>";
                        }
                        table += "</tbody><table>";
                        result.html(table);
                        myFunction();
                    }

                });
            }
        });



        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').datepicker('setDate', new Date());

        $('#StaffPresent').change(function () {
            if ($(this).is(":checked")) {
                $('#staffreason').css('display', 'block');
            }
            else {
                $('#staffreason').css('display', 'none');
            }
        });



        function Validations(e) {
            var cnt = 0;
            if ($("#Empid").val() == '' || $("#Empid").val() == 0) {
                cnt++;
                $("#Empid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Empid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#AttendanceDate").val() == '') {
                cnt++;
                $("#AttendanceDate").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#AttendanceDate").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#session").val() == '' || $("#session").val() == 0) {
                cnt++;
                $("#session").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#session").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#LecTimeId").val() == '' || $("#LecTimeId").val() == 0) {
                cnt++;
                $("#LecTimeId").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#LecTimeId").css({
                    "border": "",
                    "background": ""
                });
            }
            if (cnt != 0) {
                e.preventDefault();
            }
        }

     function myFunction() { var StudentIds = $("#students").val(data.length);}

        $("#header").click(function () {
            if ($("#Add_header").is(":checked")) {
                $(".addcls").prop('checked', true);
                $(".Reason").attr("disabled", true);
            }
            else {
                $(".addcls").prop('checked', false);
                $(".Reason").attr("disabled", false);
            }

        });

        $(document).on('change', '[type=checkbox]', function (e) {
            var empid = this.id.replace("Present_", "");
            var absent = $("#Present_" + empid);
            var remark = "";
            if ($("#Present_" + empid).is(":checked")) {
                $("#Reason_" + empid).attr("disabled", true);
            }
            else {
                $("#Reason_" + empid).attr("disabled", false);
            }
        });
        $('#session').change(function () {
            $("#LecTimeId").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetLecture")',
                dataType: 'json',
                data: { sessionid: $("#session").val()},
                success: function (lecturelist) {
                    if (lecturelist != "") {
                        var item = '<option value="0">Select Hour</option>';
                        $.each(lecturelist, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#LecTimeId").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Hour</option>';
                        $("#LecTimeId").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Hour.' + ex);
                }
            });
             return false;
        });

       
    ReloadPaging();
    });

</script>


@Html.Hidden("StudentIds")@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">
             
		<div class="row-fluid">
           @Html.Partial("_AttendanceMenuList")
	<div id="content" class="span10">
        	<div class="row-fluid">
              
                    <ul class="breadcrumb">
                        <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Attendance Management", "Index", "Attendance", "")<i class="icon-angle-right"></i></li>
                        <li class="active">Student Attendances</li>
                        <div id="srch_criteria" style="float: right;display:none;">
                            @*@using (Html.BeginForm())
                            {*@
                            @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
                            <input type="submit" id="srch" value="Find" />
                            @*}*@
                        </div>
                    </ul>
                
                 <div class="panel-body"> 
                  <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                      <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
                       <strong><label id="lblmsg"></label></strong> 
	                </div>
                <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                    <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span>
	              <strong><label id="lblmsgs"></label></strong> 
                </div>
                </div>
               <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                            @using (Html.BeginForm("ClassStudentAttendance", "Attendance", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm",@class="form-horizontal" }))
                                            {
                                                @Html.ValidationSummary(true)
                                                <div>
                                                    <h2 style="color:red;">
                                                        @TempData["ErrorMessage"]
                                                    </h2>
                                                </div>
                                                <div class="control-group span5">
                                                    @Html.LabelFor(model => model.Classid, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.Classid, new SelectList(Model._courselist, "Courseid", "CourseName", "Select Course"), "Select Course", new { @class = "selectionrequired view" })
                                                    @Html.ValidationMessageFor(model => model.Classid)
                                                           </div>
                                                </div>
                                               <div class="control-group span5">
                                                    @Html.LabelFor(model => model.department, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.department, new SelectList(Model.DepartmentList, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @class = "selectionrequired view" })
                                                    @Html.ValidationMessageFor(model => model.department)
                                                           </div>
                                                </div>
                                                
                                                 <div class="control-group span5">
                                                    @Html.LabelFor(model => model.year, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.year, new SelectList(Model.YearList, "yearid", "YearName", "Select Year"), "Select Year", new { @class = "selectionrequired view" })
                                                    @Html.ValidationMessageFor(model => model.year)
                                                           </div>
                                                </div>
                                                <div class="control-group span5">
                                                    @Html.LabelFor(model => model.subjectid, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.subjectid, new SelectList(Model.SubjectList, "Subjectid", "SubjectNm", "Select Subject"), "Select Subject", new { @class = "selectionrequired" })
                                                    @Html.ValidationMessageFor(model => model.subjectid)
                                                           </div>
                                                </div>
                                                 @*<div class="control-group span5">
                                                    @Html.LabelFor(model => model.division, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.division, new SelectList(Model.DivisionList, "Divisionid", "DivisionName", "Select Division"), "Select Division")
                                                    @Html.ValidationMessageFor(model => model.division)
                                                           </div>
                                                </div>*@
                                                <div class="control-group span5">
                                                    @Html.LabelFor(model => model.AttendanceDate, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.TextBoxFor(model => model.AttendanceDate, new { id = "datepicker", placeholder = "Select Date of Attendance"})
                                                    @Html.ValidationMessageFor(model => model.AttendanceDate)
                                                           </div>
                                                </div>
                                               <div class="control-group span5">
                                                    @Html.LabelFor(model => model.session, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.session, new SelectList(Model.SessionList, "ID", "SessionName", "Select Session"), "Select Session", new { @class = "selectionrequired" })
                                                    @Html.ValidationMessageFor(model => model.session)
                                                           </div>
                                                </div>
                                                <div class="control-group span5">
                                                    @Html.LabelFor(model =>model.LecTimeId, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.DropDownListFor(model => model.LecTimeId, new SelectList(Model._Lecturelist, "LecTimeid", "LecNo", "Select Hour"), "Select Hour", new { @class = "selectionrequired" })
                                                        @Html.ValidationMessageFor(model => model.LecTimeId)
                                                    </div>
                                                </div>
                                                <div class="control-group span5" id="staffreason" style="display: none;">
                                                </div>
                                             
                                                    <div>
                                            <input type="button" class="btn btn-primary" id="view" value="View" />
                                            <input type="button" class="btn btn-primary" id="insert"  value="submit" />
                                        </div>
                                              
                                                
                                              
                                                  
                                               
                                            }
                                                 </fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                                                
                                                 <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                               <div id="header" class="table-responsive">
                                        </div>
                                        <div id="result" class="table-responsive">
                                        </div>
                                                </div>
                                             
                                                

                                         </div>
        </div>
             
    </div>
</div>
   
            </div>
    </div>