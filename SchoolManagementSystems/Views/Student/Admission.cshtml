@model Entity.Studentviewmodel
@{
    TempData["Docs"] = TempData["Docs"];
}
@{
    ViewBag.Title = "Admission";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}


<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js" type="text/javascript"></script>
<script>
    var app = angular.module('myApp', []);
    app.controller('myCtrl', function($scope) {
        $scope.count = $scope.a + $scope.b;
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
    });
    $(document).ready(function () {
        FillPermission();
        if ($("#DocumentType").val() == 7)
        { $("#doctype").show(); }
        else { $("#doctype").hide(); }

        $("#insert").click(function (e) {
            Validations(e);
        });

        $('#cbxShowHide').change(function () {
            if (this.checked) {
                $('#autoUpdate').show();
                $('#autoUpdate').fadeIn('slow');
            }
            else {
                $('#autoUpdate').hide();
                $('#autoUpdate').fadeOut('slow');
            }
        });
        $('#cbxShowHide1').change(function () {
            if (this.checked) {
                $('#autoUpdate1').show();
                $('#autoUpdate1').fadeIn('slow');
            }
            else {
                $('#autoUpdate1').hide();
                $('#autoUpdate1').fadeOut('slow');
            }
        });
        $('#cbxShowHide3').change(function () {
            if (this.checked) {
                $('#autoUpdate3').show();
                $('#autoUpdate3').fadeIn('slow');
            }
            else {
                $('#autoUpdate3').hide();
                $('#autoUpdate3').fadeOut('slow');
            }
        });
        $('#Previous1').click(function () {
            $('.navbar-nav > .active').next('li').find('a').trigger('click');
        });
        $('#Previous').click(function () {
            $('.navbar-nav > .active').last('li').find('a').trigger('click');

        });
        $('#btnnext').click(function () {
            $('.navbar-nav > .active').next('li').find('a').trigger('click');
        });
        $('#btnnext1').click(function () {
            $('.navbar-nav > .back').next('li').find('a').trigger('click');
        });
        $("#PrScRegisterNumber").change(function () {
            debugger;
            var a = $("#PrScObtainMark").val();
            var b = $("#PrScTotalMarks").val();
            var sum = (a / b) * 100;
            $("#PrScPercentage").val(parseFloat(sum.toFixed(2)));
            if ((sum > 60) && (sum < 100)) {
                $("#Grade").val('A');
            }
            if ((sum > 41) && (sum < 59)) {
                $("#Grade").val('B');
            }
            if ((sum > 01) && (sum < 40)) {
                $("#Grade").val('C');
            }

        });

        $("#PrUgAffilatedUniversity").change(function () {
            var a = $("#PrUgObtainMark").val();
            var b = $("#PrUgTotalMark").val();
            var sum = (a / b) * 100;
            $("#PrUgPercentage").val(parseFloat(sum.toFixed(2)));
            if ((sum > 60) && (sum < 100)) {
                $("#PrUgGradeLeaving").val('A');
            }
            if ((sum > 41) && (sum < 59)) {
                $("#PrUgGradeLeaving").val('B');
            }
            if ((sum > 01) && (sum < 40)) {
                $("#PrUgGradeLeaving").val('C');
            }
        });

        $("#PrPgTotalMark").change(function () {
            var a = $("#PrPgObtainMark").val();
            var b = $("#PrPgTotalMark").val();
            var sum = (a / b) * 100;
            $("#PrPgPercentage").val(parseFloat(sum.toFixed(2)));
            if ((sum > 60) && (sum < 100)) {
                $("#PrPgGradeLeaving").val('A');
            }
            if ((sum > 41) && (sum < 59)) {
                $("#PrPgGradeLeaving").val('B');
            }
            if ((sum > 01) && (sum < 40)) {
                $("#PrPgGradeLeaving").val('C');
            }
        });

        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }
        $("#Busid").hide();
        $("#BusNo").hide();
        $("#attach").hide();


        //        $("#tabss").find("#tab3").addClass("ui-tabs-active ui-state-active");
        //        $("#tabs - 3").attr("display", "block");
        //        $("#tabs - 2").attr("display", "none");
        //        $("#tabs - 3").attr("aria-hidden",false);
        //        $("#tabs - 1").attr("display", "none");
        $("#StudEmail").change(function () {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("CheckStudEmail")',
                dataType: 'JSON',
                data: { Email: $("#StudEmail").val() },
                success: function (data) {
                    if (data.StudEmail != "") {
                        $("#StudEmail").val('');
                        alert("Student Email Already Exists in our Database!");
                    }
                }
            });
        });
        function fillsubcats() {
            $("#products").html('');
            if ($("#categories").val() != "") {
                $("#cats").val($("#categories").val());
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetSubcats")',
                    dataType: 'json',
                    data: { cats: $("#cats").val() },
                    success: function (data) {
                        $("#subcategories").html('');
                        if (data.subcats != "") {
                            var item = '';
                            $.each(data.subcats, function (i, subcat) {
                                item += '<option value="' + subcat.Value + '">' + subcat.Text + '</option>';
                            });
                            $("#subcategories").append(item);
                        }
                        if (data.prds != "") {
                            $("#exclude").val("Yes");
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetProductsexclude")',
                                dataType: 'json',
                                data: { subcats: data.prds },
                                success: function (prds) {
                                    $("#products").html('');
                                    if (prds != "") {
                                        var item = '';
                                        $.each(prds, function (i, prd) {
                                            item += '<option value="' + prd.Value + '">' + prd.Text + '</option>';
                                        });
                                        $("#products").append(item);
                                    }
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve products.' + ex);
                                }
                            });
                        }
                        else {
                            $("#exclude").val("No");
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve sub categories.' + ex);
                    }
                });
            }
        }


        function ReloadState() {
            $("#DepartmentId").empty();
            var item = '<option value="">select Department</option>';
            $("#DepartmentId").append(item);
        }

        function ReloadCountry() {
            if ($("#Classid").val() == "") {
                ReloadState();
            }
            else {

                $("#DepartmentId").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourse")',
                    dataType: 'json',
                    data: { id: $("#Classid").val() },
                    success: function (course) {
                        if (course != "") {

                            var item = '<option value="">select Department</option>';
                            $.each(course, function (i, course) {
                                item += '<option value="' + course.Value + '">' + course.Text + '</option>';
                            });
                            $("#DepartmentId").append(item);
                        }
                        else {
                            var item = '<option value="">select Department</option>';
                            $("#DepartmentId").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#Classid").change(function () {

            ReloadCountry();
        })

        $("#DepartmentId").change(function () {

            ReloadCourseYear();
        })
        $("#academicyear").change(function () {

            ReloadRegisteartionNo();
        })

        function ReloadRegisteartionNo() {
            if ($("#academicyear").val() == "" || $("#academicyear").val() == "0") {
                $("#StdRegNo").val('');
            }
            else {
                  $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetRegisterationNo")',
                    dataType: 'json',
                    data: {
                        acadmicyear:  $("#academicyear option:selected").text(),
                        deptname: $("#DepartmentId option:selected").text()
                    },
                    success: function (data) {
                        if (data != "") {

                            var accadmic = $("#academicyear option:selected").text();
                            var year = accadmic.substring(0, 4);
                            var dept = $("#DepartmentId option:selected").text();
                            var deptname = dept.substring(0, 3);
                            var count = data;
                            var stdreg = (year + deptname.toUpperCase() + "0000" + count)
                            $("#StdRegNo").val(stdreg);
                        }
                        else {

                            $("#StdRegNo").val('');
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        $("#FatherOccpationid").change(function () {

            if ($("#FatherOccpationid option:selected").text() == "Others")
            {
                $('#fatheroccupation').show();
                $('#fatheroccupation').fadeIn('slow');
            }
            else {
                $('#fatheroccupation').hide();
                $('#fatheroccupation').fadeOut('slow');
            }


        })

        $("#FatherQualificationid").change(function () {

            if ($("#FatherQualificationid option:selected").text() == "Others") {
                $('#fatherqualification').show();
                $('#fatherqualification').fadeIn('slow');
            }
            else {
                $('#fatherqualification').hide();
                $('#fatherqualification').fadeOut('slow');
            }


        })

        $("#GuardianOccpationid").change(function () {

            if ($("#GuardianOccpationid option:selected").text() == "Others") {
                $('#guardianoccupation').show();
                $('#guardianoccupation').fadeIn('slow');
            }
            else {
                $('#guardianoccupation').hide();
                $('#guardianoccupation').fadeOut('slow');
            }


        })

        $("#GuardianQualificationid").change(function () {

            if ($("#GuardianQualificationid option:selected").text() == "Others") {
                $('#guardianqualification').show();
                $('#guardianqualification').fadeIn('slow');
            }
            else {
                $('#guardianqualification').hide();
                $('#guardianqualification').fadeOut('slow');
            }


        })

        $("#MotherOccpationid").change(function () {

            if ($("#MotherOccpationid option:selected").text() == "Others") {
                $('#motherOccupation').show();
                $('#motherOccupation').fadeIn('slow');
            }
            else {
                $('#motherOccupation').hide();
                $('#motherOccupation').fadeOut('slow');
            }


        })

        $("#MotherQualificationid").change(function () {

            if ($("#MotherQualificationid option:selected").text() == "Others") {
                $('#motherQualification').show();
                $('#motherQualification').fadeIn('slow');
            }
            else {
                $('#motherQualification').hide();
                $('#motherQualification').fadeOut('slow');
            }


        })





        function ReloadYear() {
            $("#courseyear").empty();
            var item = '<option value="">select Year</option>';
            $("#courseyear").append(item);
        }

        function ReloadCourseYear() {
            if ($("#DepartmentId").val() == "") {
                ReloadYear();
            }
            else {

                $("#courseyear").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCourseYear")',
                    dataType: 'json',
                    data: {
                        courseid: $("#Classid").val(),
                        deptid: $("#DepartmentId").val()
                    },
                    success: function (yeardata) {
                        if (yeardata != "") {

                            var item = '<option value="">select Year</option>';
                            $.each(yeardata, function (i, yeardata) {
                                item += '<option value="' + yeardata.Value + '">' + yeardata.Text + '</option>';
                            });
                            $("#courseyear").append(item);
                        }
                        else {
                            var item = '<option value="">select Year</option>';
                            $("#courseyear").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve course.' + ex);
                    }
                });
            }
            return false;
        }

        function fillprds() {
            if ($("#subcategories").val() != "") {
                $("#subcats").val($("#subcategories").val());
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetProducts")',
                    dataType: 'json',
                    data: { subcats: $("#subcats").val() },
                    success: function (prds) {
                        $("#products").html('');
                        if ($("#exclude").val() == "No") {
                            $("#products").html('');
                        }
                        if (prds != "") {
                            var item = '';
                            $.each(prds, function (i, prd) {
                                item += '<option value="' + prd.Value + '">' + prd.Text + '</option>';
                            });
                            $("#products").append(item);
                        }
                        else {
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve products.' + ex);
                    }
                });

                if ($("#categories").val() != "") {
                    $("#cats").val($("#categories").val());
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetSubcats")',
                        dataType: 'json',
                        data: { cats: $("#cats").val() },
                        success: function (data) {
                            if (data.prds != "") {
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("GetProductsexclude")',
                                    dataType: 'json',
                                    data: { subcats: data.prds },
                                    success: function (prds) {
                                        //$("#products").html('');
                                        if (prds != "") {
                                            var item = '';
                                            $.each(prds, function (i, prd) {
                                                item += '<option value="' + prd.Value + '">' + prd.Text + '</option>';
                                            });
                                            $("#products").append(item);
                                        }
                                    },
                                    error: function (ex) {
                                        alert('Failed to retrieve products.' + ex);
                                    }
                                });
                            }
                            else {
                                $("#exclude").val("No");
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve sub categories.' + ex);
                        }
                    });
                }

            }
        }

        $("#categories").change(function () {
            fillsubcats();
        });
        $("#subcategories").change(function () {
            fillprds();
        });

        $("#lblmsg").text('');
        $('#studid input').attr("readonly", true);
        if ($("#studid input").val() == "0") {
            $("#studid").hide();
        }
        else {
            if ($("#FormType").val() == "O_type") {
                act = '@Url.Action("FillOnlineStudentDetails")';
                $("#stat").show();
            }
            else {
                act = '@Url.Action("FillStudentDetails")';
                $("#stat").hide();
                $('input:radio[name=group1]').filter('[value=0]').prop("checked", true);
                $('input:radio[name=group1]').filter('[value=0]').prop("checked", false);
            }
            var studid = $("#studid input").val();
            $.ajax({
                type: 'GET',
                url: act,
                dataType: 'JSON',
                data: { studid: studid },
                success: function (data) {
                    $("#Studnm").val(data.Studnm);
                    $("#Studfathernm").val(data.Studfathernm);
                    $("#Studmothernm").val(data.Studmothernm);
                    var value = new Date(parseInt(data.DOB.substr(6)));
                    $('#datepicker').datepicker('setDate', value);
                    //$('#datepicker').focus();


                    $("#Weight").val(data.Weight);
                    $("#Height").val(data.Height);
                    $("#StudBldGrp").val(data.StudBldGrp);
                    $("#StudEmail").val(data.StudEmail);
                    $("#Disease").val(data.Disease);
                    $("#Documenttypename").val(data.doc_typename);
                    $("#Religionid").val(data.Religionid);
                    if ($("#Religionid").val() == 2 && $("#Casteid").val() == 2)
                    { $("#parish").show(); $("#diocese").show() }
                    else { $("#parish").hide(); $("#diocese").hide() }
                    $("#Casteid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCastes")',
                        dataType: 'json',
                        data: { id: $("#Religionid").val() },
                        success: function (castes) {
                            if (castes != "") {
                                var item = '<option value="0">Select Sub Category</option>';
                                $.each(castes, function (i, caste) {
                                    item += '<option value="' + caste.Value + '">' + caste.Text + '</option>';
                                });
                                $("#Casteid").append(item);
                                $("#Casteid").val(data.Casteid);
                            }
                            else {
                                var item = '<option value="0">Select Sub Category</option>';
                                $("#Casteid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve castes.' + ex);
                        }
                    });
                    if (data.Classid == 0) {
                        data.Classid = "";
                    }
                    $("#Classid").val(data.Classid);
                    $("#RollNo").val(data.RollNo);
                    $("#Gender").val(data.Gender);
                    $("#ApplicationID").val(data.app_id);
                    $("#DepartmentId").val(data.Dept_Id);
                    $("#UniversityRegId").val(data.ug_id);
                    $("#DocumentType").val(data.DocumentType);
                    $("#DocumentIDNo").val(data.DocumentIDNo);
                    $("#Pincode").val(data.pincode);
                    $("#ParishName").val(data.ParishName);
                    $("#DioceseName").val(data.DioceseName);
                    $("#courseyear").val(data.courseyearid);

                    $("#MotherTongue").val(data.MotherTongue);
                    $("#PreviousSchool").val(data.PreviousSchool);
                    $("#SchoolAddress").val(data.SchoolAddress);
                    $("#PrScTotalMarks").val(data.SecondaryTotalMarks);
                    $("#PrScObtainMark").val(data.SecondaryObtainMarks);
                    $("#PrScPercentage").val(parseFloat(Math.round(data.SecondaryPercetage * 100) / 100).toFixed(2));
                    $("#PrScTCNumber").val(data.sc_tcno);
                    $("#PrScRegisterNumber").val(data.sc_regno);
                    $("#PrUgCollegeName").val(data.PrUgCollegeName);
                    $("#PrUgCollegeAddress").val(data.PrUgCollegeAddress);
                    $("#PrUgAffilatedUniversity").val(data.PrUgAffilatedUniversity);
                    $("#PrUgGradeLeaving").val(data.PrUgGradeLeaving);
                    $("#PrUgTotalMark").val(data.PrUgTotalMark);
                    $("#PrUgObtainMark").val(data.PrUgObtainMark);
                    $("#PrUgPercentage").val(parseFloat(Math.round(data.PrUgPercentage * 100) / 100).toFixed(2));
                    $("#PrUgYearLeaving").val(data.PrUgYearLeaving);
                    $("#PrUgRegisterNumber").val(data.prug_regno);
                    $("#PrUgReasonofLeaving").val(data.PrUgReasonofLeaving);
                    $("#PrUgPrincipalName").val(data.PrUgPrincipalName);
                    $("#PrUgRefContactName").val(data.PrUgRefContactName);
                    $("#PrUgRefContactNo").val(data.PrUgRefContactNo);

                    $("#PrPgCollegeName").val(data.PrPgCollegeName);
                    $("#PrPgCollegeAddress").val(data.PrPgCollegeAddress);
                    $("#PrPgAffilatedUniversity").val(data.PrPgAffilatedUniversity);
                    $("#PrPgGradeLeaving").val(data.PrPgGradeLeaving);
                    $("#PrPgTotalMark").val(data.PrPgTotalMark);
                    $("#PrPgObtainMark").val(data.PrPgObtainMark);
                    $("#PrPgPercentage").val(parseFloat(Math.round(data.PrPgPercentage * 100) / 100).toFixed(2));
                    $("#PrPgYearLeaving").val(data.PrPgYearLeaving);
                    $("#PrPgRegisterNumber").val(data.prpg_regno);
                    $("#PrPgReasonofLeaving").val(data.PrPgReasonofLeaving);
                    $("#PrPgPrincipalName").val(data.PrPgPrincipalName);
                    $("#PrPgRefContactName").val(data.PrPgRefContactName);
                    $("#PrPgRefContactNo").val(data.PrPgRefContactNo);
                    //               sibbling

                    $("#Sibling1Name").val(data.Sibling1Name);
                    $("#Sibling1Rel").val(data.Sibling1Rel);
                    var s1dob = new Date(parseInt(data.Sibling1DOB.substr(6)));
                    $('#datepicker1').datepicker('setDate', s1dob);

                    $("#Sibling1Ql").val(data.Sibling1Ql);
                    $("#Sibling2Name").val(data.Sibling2Name);
                    $("#Sibling2Rel").val(data.Sibling2Rel);
                    var s2dob = new Date(parseInt(data.Sibling2DOB.substr(6)));
                    $('#datepicker2').datepicker('setDate', s2dob);

                    $("#Sibling2Ql").val(data.Sibling2Ql);
                    $("#Sibling3Name").val(data.Sibling3Name);
                    $("#Sibling3Rel").val(data.Sibling3Rel);
                    var s3dob = new Date(parseInt(data.Sibling3DOB.substr(6)));
                    $('#datepicker3').datepicker('setDate', s3dob);
                    $("#Sibling3Ql").val(data.Sibling3Ql);
                    $("#Sibling4Name").val(data.Sibling4Name);
                    $("#Sibling4Rel").val(data.Sibling4Rel);
                    var s4dob = new Date(parseInt(data.Sibling4DOB.substr(6)));
                    $('#datepicker4').datepicker('setDate', s4dob);
                    $("#Sibling4Ql").val(data.Sibling4Ql);
                    //                        $("#LastClass").val('');
                    //                    }
                    //                    else {
                    //                        $("#LastClass").val(data.LastClass);
                    //                    }
                    $("#LastClass").val(data.LastClass);
                    $("#Grade").val(data.Grade);

                    $("#LeaveYear").val(data.LeaveYear);
                    $("#LeaveReason").val(data.LeaveReason);
                    $("#PrincipalNm").val(data.PrincipalNm);
                    $("#ReferenceNm").val(data.ReferenceNm);
                    $("#RCode").val(data.RCode);
                    $("#ReferenceContact").val(data.ReferenceContact);
                    $("#BusFacility").prop('checked', data.BusFacility);
                    if ($("#BusFacility").prop('checked') == true) {
                        $("#busid").val(data.busid);
                        $("#Busid").show();
                        $("#BusNo").show();
                        FillTransDetail();
                    }
                    else {
                        $("#Busid").hide();
                        $("#BusNo").hide();
                    }
                    $("#BusNo").val(data.BusNo);
                    $("#BusRTONo").val(data.BusRTONo);
                    $("#EmergencyPhysicianNm").val(data.EmergencyPhysicianNm);
                    $("#ECode").val(data.ECode);
                    $("#EmergencyPhysicianContact").val(data.EmergencyPhysicianContact);
                    $("#EmergencyAddress").val(data.EmergencyAddress);
                    if (data.FatherOccpationid == 0) {
                        data.FatherOccpationid = "";
                    }
                    $("#FatherOccpationid").val(data.FatherOccpationid);
                    if (data.FatherQualificationid == 0) {
                        data.FatherQualificationid = "";
                    }
                    $("#FatherQualificationid").val(data.FatherQualificationid);
                    $("#FatherEmail").val(data.FatherEmail);
                    $("#FatherOfficeAddress").val(data.FatherOfficeAddress);
                    $("#FCode").val(data.FCode);
                    $("#FatherContact").val(data.FatherContact);

                    if (data.GuardianOccpationid == 0) {
                        data.GuardianOccpationid = "";
                    }
                    $("#GuardianOccpationid").val(data.GuardianOccpationid);
                    if (data.GuardianQualificationid == 0) {
                        data.GuardianQualificationid = "";
                    }
                    $("#FatherOccumationName").val(data.FatherOtherOccName);
                    $("#FatherQualificationName").val(data.FatherOtherQualName);
                    $("#GuardianOccpationName").val(data.GuardianOtherOccName);
                    $("#GuardianQualificationName").val(data.GuardianOtherQalName);
                    $("#MotherOccpationName").val(data.MotherOtherOccName);
                    $("#MotherQualificationName").val(data.MotherOtherQualName);
                    $("#GuardianName").val(data.GuardianName);
                    $("#GuardianQualificationid").val(data.GuardianQualificationid);
                    $("#GuardianEmail").val(data.GuardianEmail);
                    $("#GuardianOfficeAddress").val(data.GuardianOfficeAddress);
                    $("#GCode").val(data.GCode);
                    $("#GuardianContact").val(data.GuardianContact);

                    if (data.FatherBldGrpid == 0) {
                        data.FatherBldGrpid = "";
                    }
                    $("#FatherBldGrpid").val(data.FatherBldGrpid);
                    if (data.MotherOccpationid == 0) {
                        data.MotherOccpationid = "";
                    }
                    $("#MotherOccpationid").val(data.MotherOccpationid);
                    if (data.MotherQualificationid == 0) {
                        data.MotherQualificationid = "";
                    }
                    $("#MotherQualificationid").val(data.MotherQualificationid);
                    $("#MotherEmail").val(data.MotherEmail);
                    $("#MotherOfficeAddress").val(data.MotherOfficeAddress);
                    $("#MCode").val(data.MCode);
                    $("#MotherContact").val(data.MotherContact);
                    if (data.MotherBldGrpid == 0) {
                        data.MotherBldGrpid = "";
                    }
                    $("#MotherBldGrpid").val(data.MotherBldGrpid);
                    $("#Docs").val(data.Docs);

                    if ($("#Docs").val() != "") {
                        $("#attach").show();
                    }
                    else {
                        $("#attach").hide();
                    }
                    $("#StdRegMob").val(data.StdMobNo);
                    $("#StdRegNo").val(data.StdRegNo);
                    $("#emcontactrel").val(data.emContactRel);

                    $("#hpic1").css({
                        "display": "block"
                    });
                    $("#temp").css({
                        "display": "block"
                    });
                    $("#pic1").append('<img src="/Student/getImg1/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="Student Pic">');
                    $("#pic2").append('<img src="/Student/getImg2/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="Father Pic">');
                    $("#pic3").append('<img src="/Student/getImg3/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="Guardian Pic">');
                    $("#pic4").append('<img src="/Student/getImg4/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="Mother Pic">');
                    $("#pic5").append('<img src="/Student/getImg5/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="SC Reference letter Pic">');
                    $("#pic6").append('<img src="/Student/getImg6/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="TC Scan Copy">');
                    $("#pic7").append('<img src="/Student/getImg7/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="SC Marksheet">');
                    $("#pic8").append('<img src="/Student/getImg8/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="UG Marksheet">');
                    $("#pic9").append('<img src="/Student/getImg9/' + $("#Studid").val() + '" style="width: 190px;height: 220px;" alt="PG Marksheet">');

                    var selectedValues = new Array();
                    var array = data.cats.split(",");
                    $.each(array, function (i) {

                        if (array[i] != "") {
                            selectedValues[i] = array[i];
                        }
                    });
                    $("#categories").val(selectedValues);

                    var scats = data.subcats;
                    var p = data.prds;

                    if ($("#categories").val() != "") {
                        $("#cats").val($("#categories").val());
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetSubcats")',
                            dataType: 'json',
                            data: { cats: $("#cats").val() },
                            success: function (data) {
                                $("#subcategories").html('');
                                if (data.subcats != "") {
                                    var item = '';
                                    $.each(data.subcats, function (i, subcat) {
                                        item += '<option value="' + subcat.Value + '">' + subcat.Text + '</option>';
                                    });
                                    $("#subcategories").append(item);
                                    var s = new Array();
                                    var arr = scats.split(",");
                                    $.each(arr, function (j) {
                                        if (arr[j] != "") {
                                            s[j] = arr[j];
                                        }
                                    });
                                    $("#subcategories").val(s);
                                }

                                if (data.prds != "") {
                                    $("#exclude").val("Yes");
                                    $.ajax({
                                        type: 'POST',
                                        url: '@Url.Action("GetProductsexclude")',
                                        dataType: 'json',
                                        data: { subcats: data.prds },
                                        success: function (prds) {
                                            $("#products").html('');
                                            if (prds != "") {
                                                var item = '';
                                                $.each(prds, function (i, prd) {
                                                    item += '<option value="' + prd.Value + '">' + prd.Text + '</option>';
                                                });
                                                $("#products").append(item);
                                                var t = new Array();
                                                var arr1 = p.split(",");
                                                $.each(arr1, function (j) {
                                                    if (arr1[j] != "") {
                                                        t[j] = arr1[j];
                                                    }
                                                });

                                                $("#products").val(t);
                                            }
                                        },
                                        error: function (ex) {
                                            alert('Failed to retrieve products.' + ex);
                                        }
                                    });
                                }
                                else {
                                    $("#exclude").val("No");
                                }

                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("GetProducts")',
                                    dataType: 'json',
                                    data: { subcats: scats },
                                    success: function (prds) {
                                        if (prds != "") {
                                            var item = '';
                                            $.each(prds, function (i, prd) {
                                                item += '<option value="' + prd.Value + '">' + prd.Text + '</option>';
                                            });
                                            $("#products").append(item);
                                            var t = new Array();
                                            var arr1 = p.split(",");
                                            $.each(arr1, function (j) {
                                                if (arr1[j] != "") {
                                                    t[j] = arr1[j];
                                                }
                                            });

                                            $("#products").val(t);
                                        }
                                        else {
                                        }
                                    },
                                    error: function (ex) {
                                        alert('Failed to retrieve products.' + ex);
                                    }
                                });
                            },
                            error: function (ex) {
                                alert('Failed to retrieve sub categories.' + ex);
                            }
                        });
                    }

                    $("#StudCategoryid").val(data.StudCategoryid);
                    $("#Countryid").val(data.Countryid);
                    $("#Stateid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetStates")',
                        dataType: 'json',
                        data: { id: data.Countryid },
                        success: function (states) {
                            if (states != "") {
                                var item = '<option value="0">select State</option>';
                                $.each(states, function (i, state) {
                                    item += '<option value="' + state.Value + '">' + state.Text + '</option>';
                                });
                                $("#Stateid").append(item);
                                $("#Stateid").val(data.Stateid);
                            }
                            else {
                                var item = '<option value="0">select State</option>';
                                $("#Stateid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    $("#Cityid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.Stateid },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">select City</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#Cityid").append(item);
                                $("#Cityid").val(data.Cityid);
                            }
                            else {
                                var item = '<option value="0">select City</option>';
                                $("#Cityid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    $("#CurrentAddress").val(data.CurrentAddress);
                    $("#PermanentAddress").val(data.PermanentAddress);
                    $("#academicyear").val(data.academicyear);
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Getseducation")',
                        dataType: 'json',
                        data: { Studid: data.Studid },
                        success: function (school) {
                            $("#subject1").val(school.subject1);
                            $("#subject2").val(school.subject2);
                            $("#subject3").val(school.subject3);
                            $("#subject4").val(school.subject4);
                            $("#subject5").val(school.subject5);
                            $("#subject6").val(school.subject6);
                            $("#marks1").val(school.marks1);
                            $("#marks2").val(school.marks2);
                            $("#marks3").val(school.marks3);
                            $("#marks4").val(school.marks4);
                            $("#marks5").val(school.marks5);
                            $("#marks6").val(school.marks6);
                            $("#maximum1").val(school.max1);
                            $("#maximum2").val(school.max2);
                            $("#maximum3").val(school.max3);
                            $("#maximum4").val(school.max4);
                            $("#maximum5").val(school.max5);
                            $("#maximum6").val(school.max6);
                            $("#pyear1").val(school.yearpassing1);
                            $("#rnumber1").val(school.registerno1);
                            $("#attempts1").val(school.attempts1);

                            $("#c1").val(school.radio1);
                            $("#c2").val(school.radio2);
                            $("#c3").val(school.radio3);
                            $("#c4").val(school.radio4);
                            $("#c5").val(school.radio5);
                            $("#namelocation").val(school.namelocation);
                            $("#examinationpassed").val(school.qualifyingexamination);




                        },

                    });

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Getcducation")',
                        dataType: 'json',
                        data: { Studid: data.Studid },
                        success: function (collage) {
                            $("#psubject1").val(collage.subject1);
                            $("#psubject2").val(collage.subject2);
                            $("#psubject3").val(collage.subject3);
                            $("#psubject4").val(collage.subject4);
                            $("#psubject5").val(collage.subject5);
                            $("#psubject6").val(collage.subject6);
                            $("#pmarks1").val(collage.marks1);
                            $("#pmarks2").val(collage.marks2);
                            $("#pmarks3").val(collage.marks3);
                            $("#pmarks4").val(collage.marks4);
                            $("#pmarks5").val(collage.marks5);
                            $("#pmarks6").val(collage.marks6);
                            $("#pmaximum1").val(collage.max1);
                            $("#pmaximum2").val(collage.max2);
                            $("#pmaximum3").val(collage.max3);
                            $("#pmaximum4").val(collage.max4);
                            $("#pmaximum5").val(collage.max5);
                            $("#pmaximum6").val(collage.max6);
                            $("#ppyear1").val(collage.yearpassing1);
                            $("#prnumber1").val(collage.registerno1);
                            $("#pattempts1").val(collage.attempts1);

                            $("#pc1").val(collage.radio1);
                            $("#pc2").val(collage.radio2);
                            $("#pc3").val(collage.radio3);
                            $("#pc4").val(collage.radio4);
                            $("#pc5").val(collage.radio5);
                            $("#pnamelocation").val(collage.namelocation);
                            $("#pexaminationpassed").val(collage.qualifyingexamination);




                        },

                    });
                }
            });
        }
        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });
        //$(function () {
        //    $("#datepicker").val('');
        //});
        $('#datepicker').datepicker('setDate', new Date());

        $('#datepicker1').attr("readonly", true);

        $('#datepicker1').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker1').datepicker('setDate', new Date());


        $('#datepicker2').attr("readonly", true);

        $('#datepicker2').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker2').datepicker('setDate', new Date());

        $('#datepicker3').attr("readonly", true);

        $('#datepicker3').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker3').datepicker('setDate', new Date());

        $('#datepicker4').attr("readonly", true);

        $('#datepicker4').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker4').datepicker('setDate', new Date());

        $("#ui-datepicker-div").hide();

        function Validations(e) {
            var cnt = 0;
            if ($("#Studnm").val() == '') {
                cnt++;
                $("#Studnm").css({
                    "border": "1px solid red"
                });
                alert("Student Name Mandatory!");
                e.preventDefault();
                $("#Studnm").focus();
                return false;
            }
            else {
                $("#Studnm").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Gender").val() == '' || $("#Gender").val() == 0) {
                cnt++;
                $("#Gender").css({
                    "border": "1px solid red"
                });
                alert("Gender is Mandatory!");
                e.preventDefault();
                $("#Gender").focus();
                return false;
            }
            else {
                $("#Gender").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Classid").val() == '' || $("#Classid").val() == 0) {
                cnt++;
                $("#Classid").css({
                    "border": "1px solid red"
                });
                alert("Course is Mandatory!");
                e.preventDefault();
                $("#Classid").focus();
                return false;
            }
            else {
                $("#Classid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#DepartmentId").val() == '' || $("#DepartmentId").val() == 0) {
                cnt++;
                $("#DepartmentId").css({
                    "border": "1px solid red"
                });
                alert("Department is Mandatory!");
                e.preventDefault();
                $("#DepartmentId").focus();
                return false;
            }
            else {
                $("#DepartmentId").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#courseyear").val() == '' || $("#courseyear").val() == 0) {
                cnt++;
                $("#courseyear").css({
                    "border": "1px solid red"
                });
                alert("Course Year is Mandatory!");
                e.preventDefault();
                $("#courseyear").focus();
                return false;
            }
            else {
                $("#courseyear").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#academicyear").val() == '' || $("#academicyear").val() == 0) {
                cnt++;
                $("#academicyear").css({
                    "border": "1px solid red"
                });
                alert("Academic Year is Mandatory!");
                e.preventDefault();
                $("#academicyear").focus();
                return false;
            }
            else {
                $("#academicyear").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#StdRegNo").val() == '') {
                cnt++;
                $("#StdRegNo").css({
                    "border": "1px solid red"
                });
                alert("Student Register No. is Mandatory!");
                e.preventDefault();
                $("#StdRegNo").focus();
                return false;
            }
            else {
                $("#StdRegNo").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#ApplicationID").val() == '') {
                cnt++;
                $("#ApplicationID").css({
                    "border": "1px solid red"
                });
                alert("Application Id is Mandatory!");
                e.preventDefault();
                $("#ApplicationID").focus();
                return false;
            }
            else {
                $("#ApplicationID").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#RollNo").val() == '' || $("#RollNo").val() == 0) {
                cnt++;
                $("#RollNo").css({
                    "border": "1px solid red"
                });
                alert("Roll Number is Mandatory!");
                e.preventDefault();
                $("#RollNo").focus();
                return false;
            }
            else {
                $("#RollNo").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#UniversityRegId").val() == '') {
                cnt++;
                $("#UniversityRegId").css({
                    "border": "1px solid red"
                });
                alert("University Registration no. is Mandatory!");
                e.preventDefault();
                $("#UniversityRegId").focus();
                return false;
            }
            else {
                $("#UniversityRegId").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#datepicker").val() == '01-Jan-01 12:00:00 AM' ||$("#datepicker").val() =='') {
                cnt++;
                $("#datepicker").css({
                    "border": "1px solid red"
                });
                alert("DOB Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#datepicker").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#StudEmail").val() == '') {
                cnt++;
                $("#StudEmail").css({
                    "border": "1px solid red"
                });
                alert("Student Email is Mandatory!");
                e.preventDefault();
                $("#StudEmail").focus();
                return false;
            }
            else {
                $("#StudEmail").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#Religionid").val() == '' || $("#Religionid").val() == 0) {
                cnt++;
                $("#Religionid").css({
                    "border": "1px solid red"
                });
                alert("Religion  is Mandatory!");
                e.preventDefault();
                $("#Religionid").focus();
                return false;
            }
            else {
                $("#Religionid").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#StudCategoryid").val() == '' || $("#StudCategoryid").val() == 0) {
                cnt++;
                $("#StudCategoryid").css({
                    "border": "1px solid red"
                });
                alert("Category  is Mandatory!");
                e.preventDefault();
                $("#StudCategoryid").focus();
                return false;
            }
            else {
                $("#StudCategoryid").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#MotherTongue").val() == '') {
                cnt++;
                $("#MotherTongue").css({
                    "border": "1px solid red"
                });
                alert("Mother Tongue  is Mandatory!");
                e.preventDefault();
                $("#MotherTongue").focus();
                return false;
            }
            else {
                $("#MotherTongue").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#DocumentType").val() == '' || $("#DocumentType").val()==7) {
                cnt++;
                $("#Documenttypename").css({
                    "border": "1px solid red"
                });
                alert("Document Type  is Mandatory!");
                e.preventDefault();
                $("#Documenttypename").focus();
                return false;
            }
            else {
                $("#doctype").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#DocumentIDNo").val() == '') {
                cnt++;
                $("#DocumentIDNo").css({
                    "border": "1px solid red"
                });
                alert("Document ID No.  is Mandatory!");
                e.preventDefault();
                $("#DocumentIDNo").focus();
                return false;
            }
            else {
                $("#DocumentIDNo").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Religionid").val() == 2 && $("#Casteid").val() == 2)
            {
                if ($("#ParishName").val() == ''){
                    cnt++;
                    $("#ParishName").css({
                        "border": "1px solid red"
                    });

                    alert("Parish Name Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#parish").css({
                    "border": "",
                    "background": ""
                    });

                }

                if ($("#DioceseName").val() == '') {
                    cnt++;
                    $("#DioceseName").css({
                        "border": "1px solid red"
                    });

                    alert("DioceseName Name Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#DioceseName").css({
                        "border": "",
                        "background": ""
                    });

                }

            }




            if ($("#Weight").val() == '0' || $("#Weight").val() == '') {
                cnt++;
                $("#Weight").css({
                    "border": "1px solid red"
                });
                alert("weight Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Weight").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Height").val() == '0' || $("#Height").val() == '') {
                cnt++;
                $("#Height").css({
                    "border": "1px solid red"
                });
                alert("height Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Height").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#StudBldGrp").val() == ''|| $("#StudBldGrp").val() == 0) {
                cnt++;
                $("#StudBldGrp").css({
                    "border": "1px solid red"
                });
                alert("blood group Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#StudBldGrp").css({
                    "border": "",
                    "background": ""
                });
            }







            if ($("#Casteid").val() == '') {
                cnt++;
                $("#Casteid").css({
                    "border": "1px solid red"
                });
                alert("caste Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Casteid").css({
                    "border": "",
                    "background": ""
                });
            }




                        if ($("#PreviousSchool").val() == '') {
                            cnt++;
                            $("#PreviousSchool").css({
                                "border": "1px solid red"
                            });
                            alert("Previous School Name is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#PreviousSchool").css({
                                "border": "",
                                "background": ""
                            });
                        }

                        if ($("#SchoolAddress").val() == '') {
                            cnt++;
                            $("#SchoolAddress").css({
                                "border": "1px solid red"
                            });
                            alert("Previous School Address is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#SchoolAddress").css({
                                "border": "",
                                "background": ""
                            });
                        }

                        if ($("#PrScObtainMark").val() == 0 || $("#PrScObtainMark").val() == '') {
                            cnt++;
                            $("#PrScObtainMark").css({
                                "border": "1px solid red"
                            });
                            alert("Previous School Obtain Marks is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#PrScObtainMark").css({
                                "border": "",
                                "background": ""
                            });
                        }
                        if ($("#PrScTotalMarks").val() == 0 || $("#PrScTotalMarks").val() == '') {
                            cnt++;
                            $("#PrScTotalMarks").css({
                                "border": "1px solid red"
                            });
                            alert("Previous School Total Marks is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#PrScTotalMarks").css({
                                "border": "",
                                "background": ""
                            });
                        }
                        if ($("#LeaveYear").val() == '') {
                            cnt++;
                            $("#LeaveYear").css({
                                "border": "1px solid red"
                            });
                            alert("Year of leaving is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#LeaveYear").css({
                                "border": "",
                                "background": ""
                            });
                        }

                        if ($("#PrScRegisterNumber").val() == '') {
                            cnt++;
                            $("#PrScRegisterNumber").css({
                                "border": "1px solid red"
                            });
                            alert("Previous School Registeration No. is Mandatory!");
                            e.preventDefault();
                            return false;
                        }
                        else {
                            $("#PrScRegisterNumber").css({
                                "border": "",
                                "background": ""
                            });
                        }






                if ($("#PrincipalNm").val() == '') {
                cnt++;
                $("#PrincipalNm").css({
                    "border": "1px solid red"
                });
                alert("Principal Name Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                    $("#PrincipalNm").css({
                    "border": "",
                    "background": ""
                });
            }
                if ($("#ReferenceNm").val() == '') {
                    cnt++;
                    $("#ReferenceNm").css({
                        "border": "1px solid red"
                    });
                    alert("Reference Name Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#ReferenceNm").css({
                        "border": "",
                        "background": ""
                    });
                }

                if ($("#ReferenceContact").val() == '') {
                    cnt++;
                    $("#ReferenceContact").css({
                        "border": "1px solid red"
                    });
                    alert("Reference Contact Number Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#ReferenceContact").css({
                        "border": "",
                        "background": ""
                    });
                }
                if ($("#PrScTCNumber").val() == '') {
                    cnt++;
                    $("#PrScTCNumber").css({
                        "border": "1px solid red"
                    });
                    alert("TC Number Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#PrScTCNumber").css({
                        "border": "",
                        "background": ""
                    });
                }

            if ($("#EmergencyPhysicianNm").val() == '') {
                cnt++;
                $("#EmergencyPhysicianNm").css({
                    "border": "1px solid red"
                });
                alert("Emergency Contact Name Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#EmergencyPhysicianNm").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#EmergencyPhysicianContact").val() == '') {
                cnt++;
                $("#EmergencyPhysicianContact").css({
                    "border": "1px solid red"
                });
                alert("Emergecy Contact Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#EmergencyPhysicianContact").css({
                    "border": "",
                    "background": ""
                });
            }



            if ($("#EmergencyAddress").val() == '') {
                cnt++;
                $("#EmergencyAddress").css({
                    "border": "1px solid red"
                });
                alert("Emergency address Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#EmergencyAddress").css({
                    "border": "",
                    "background": ""
                });
            }



            if ($("#Studfathernm").val() == '') {
                cnt++;
                $("#Studfathernm").css({
                    "border": "1px solid red"
                });
                alert("Father email Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Studfathernm").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#FatherEmail").val() == '') {
                cnt++;
                $("#FatherEmail").css({
                    "border": "1px solid red"
                });
                alert("father email Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#FatherEmail").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#FatherOfficeAddress").val() == '') {
                cnt++;
                $("#FatherOfficeAddress").css({
                    "border": "1px solid red"
                });
                alert("office address Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#FatherOfficeAddress").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#FatherContact").val() == '') {
                cnt++;
                $("#FatherContact").css({
                    "border": "1px solid red"
                });
                alert("father contact Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#FatherContact").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#Countryid").val() == '') {
                cnt++;
                $("#Countryid").css({
                    "border": "1px solid red"
                });
                alert("country Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Countryid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Stateid").val() == '') {
                cnt++;
                $("#Stateid").css({
                    "border": "1px solid red"
                });
                alert("state Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Stateid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Cityid").val() == '') {
                cnt++;
                $("#Cityid").css({
                    "border": "1px solid red"
                });
                alert("city Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#Cityid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#CurrentAddress").val() == '') {
                cnt++;
                $("#CurrentAddress").css({
                    "border": "1px solid red"
                });
                alert("current address Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#CurrentAddress").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#PermanentAddress").val() == '') {
                cnt++;
                $("#PermanentAddress").css({
                    "border": "1px solid red"
                });
                alert("permanent address Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#PermanentAddress").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Pincode").val() == '') {
                cnt++;
                $("#Pincode").css({
                    "border": "1px solid red"
                });
                alert("Pincode is Mandatory!");
                e.preventDefault();
                return false;
                $("#Pincode").focus();
            }
            else {
                $("#Pincode").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#BusFacility").prop('checked') == true) {
                if ($("#busid").val() == '') {
                    cnt++;
                    $("#busid").css({
                        "border": "1px solid red"
                    });
                    alert("bus facility Mandatory!");
                    e.preventDefault();
                    return false;
                }
                else {
                    $("#busid").css({
                        "border": "",
                        "background": ""
                    });
                }
            }

            if ($("#academicyear").val() == '') {
                cnt++;
                $("#academicyear").css({
                    "border": "1px solid red"
                });
                alert("academic year Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#academicyear").css({
                    "border": "",
                    "background": ""
                });
            }


            if (cnt != 0) {
                e.preventDefault();
            }
        }

        $("#BusFacility").change(function () {
            $("#trans_details").hide();
            $("#busid").val('');
            if ($("#BusFacility").prop('checked') == true) {
                $("#Busid").show();
                $("#BusNo").show();
            }
            else {
                $("#Busid").hide();
                $("#BusNo").hide();
            }
        });

        function FillTransDetail() {
            if ($("#busid").val() != "") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetTransportDetails")',
                    dataType: 'json',
                    data: { busid: $("#busid").val() },
                    success: function (data) {
                        $("#trans_details").html('');
                        if (data != "") {
                            $("#trans_details").show();
                            var html = '<div class="control-group span5"><label class="control-label" for="busRoute"> Bus Route : </label>';
                            html = html + "<div class='controls' for='busRoute'>" + data.busRoute + "</div></div>";
                            html = html + '<div class="control-group span5"><label class="control-label" for="busDriverNm"> Bus Driver Name : </label>';
                            html = html + "<div class='controls' for='busRoute'>" + data.busDriverNm + "</div></div>";
                            html = html + '<div class="control-group span5"><label class="control-label" for="busDrivercontact"> Bus Driver Contact: </label>';
                            html = html + "<div class='controls' for='busRoute'>" + data.busDrivercontact + "</div></div>";
                            html = html + '<div class="control-group span5"><label class="control-label" for="busRTONo"> Bus RTO Number: </label>';
                            html = html + "<div class='controls'  for='busRoute'>" + data.busRTONo + "</div></div>";
                            html = html + '<div class="control-group span5"><label class="control-label" for="busDateTime"> Bus Time: </label>';
                            var dateString = data.busDateTime.substr(6);
                            var currentTime = new Date(parseInt(dateString));
                            var hrs = currentTime.getHours();
                            var min = currentTime.getMinutes();
                            var time = hrs + ":" + min;
                            html = html + "<div class='control-group span5'><label class='form-control mar' for='busRoute'>" + time + "</label></div>";
                            $("#trans_details").append(html);
                        }
                        else {
                            $("#trans_details").hide();
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve transport details.' + ex);
                    }
                });
            }
            else {
                $("#trans_details").hide();
            }
        }

        $("#busid").change(function () {
            FillTransDetail();
        });

        $("#Casteid").change(function () {
            if ($("#Religionid").val() == 2 && $("#Casteid").val() == 2)
            { $("#parish").show(); $("#diocese").show() }
            else { $("#parish").hide(); $("#diocese").hide() }

        });

        $("#DocumentType").change(function () {
            if ($("#DocumentType").val() == 7)
            { $("#doctype").show(); }
            else { $("#doctype").hide();}

        });




        $("#Religionid").change(function () {
            if ($("#Religionid").val() != 2)
            { $("#parish").hide(); $("#diocese").hide(); $("#cast").hide(); }
            else { $("#parish").show(); $("#diocese").show(); $("#cast").show(); }
            if ($("#Religionid").val() == "") {
                $("#Casteid").empty();
                var item = '<option value="0">Select Sub Category</option>';
                $("#Casteid").append(item);
            }
            else {
                $("#Casteid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCastes")',
                    dataType: 'json',
                    data: { id: $("#Religionid").val() },
                    success: function (castes) {
                        if (castes != "") {
                            var item = '<option value="0">Select Sub Category</option>';
                            $.each(castes, function (i, caste) {
                                item += '<option value="' + caste.Value + '">' + caste.Text + '</option>';
                            });
                            $("#Casteid").append(item);
                        }
                        else {
                            var item = '<option value="0">Select Sub Category</option>';
                            $("#Casteid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve castes.' + ex);
                    }
                });
            }
            return false;
        })

        $("#Countryid").change(function () {
            if ($("#Countryid").val() == "") {
                $("#Stateid").empty();
                var item = '<option value="0">select State</option>';
                $("#Stateid").append(item);
                $("#Cityid").empty();
                var item = '<option value="0">select City</option>';
                $("#Cityid").append(item);
                $("#state").val('')
                $("#city").val('')
            }
            else {
                $("#Stateid").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStates")',
                    dataType: 'json',
                    data: { id: $("#Countryid").val() },
                    success: function (states) {
                        if (states != "") {
                            var item = '<option value="0">select State</option>';
                            $.each(states, function (i, state) {
                                item += '<option value="' + state.Value + '">' + state.Text + '</option>';
                            });
                            $("#Stateid").append(item);
                        }
                        else {
                            var item = '<option value="0">select State</option>';
                            $("#Stateid").append(item);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        $("#Stateid").change(function () {
            $("#Cityid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { id: $("#Stateid").val() },
                success: function (cities) {
                    if (cities != "") {
                        var item = '<option value="0">select City</option>';
                        $.each(cities, function (i, city) {
                            item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                        });
                        $("#Cityid").append(item);
                    }
                    else {
                        var item = '<option value="0">select City</option>';
                        $("#Cityid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })


        $("#Weight").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Height").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Documenttypename").keypress(function (e) {
            if (!(e.which >= 65 && e.which <= 120)&& (e.which !=32 && e.which != 0)) {
                $("#errmsg").html("Alphabetes Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#FatherContact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#GuardianContact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#MotherContact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#FCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#GCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#MCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#RollNo").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#academicyear").keypress(function (e) {
            if (e.which != 8 && e.which != 45 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#ECode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Pincode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#PrScTotalMarks").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#PrScObtainMark").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });
        $("#EmergencyPhysicianContact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#LeaveYear").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#RCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#ReferenceContact").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        function ValidateEmail(email) {
            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            return expr.test(email);
        };

        $('#FatherEmail').blur(function () {
            if (!ValidateEmail($("#FatherEmail").val())) {
                $("#FatherEmail").css({
                    "border": "1px solid red"
                });
                alert("Father's Email address is invalid!..");
                return false;
            }
            else {
                $("#FatherEmail").css({
                    "border": "",
                    "background": ""
                });
            }
        });

        $('#GuardianEmail').blur(function () {
            if (!ValidateEmail($("#GuardianEmail").val())) {
                $("#GuardianEmail").css({
                    "border": "1px solid red"
                });
                alert("Guardian's Email address is invalid!..");
                return false;
            }
            else {
                $("#GuardianEmail").css({
                    "border": "",
                    "background": ""
                });
            }
        });

        $('#StudEmail').blur(function () {
            if (!ValidateEmail($("#StudEmail").val())) {
                $("#StudEmail").css({
                    "border": "1px solid red"
                });
                alert("Student's Email address is invalid!..");
                return false;
            }
            else {
                $("#StudEmail").css({
                    "border": "",
                    "background": ""
                });
            }
        });

        $('#MotherEmail').blur(function () {
            if (!ValidateEmail($("#MotherEmail").val())) {
                $("#MotherEmail").css({
                    "border": "1px solid red"
                });
                alert("Mother's Email address is invalid!..");
                return false;
            }
            else {
                $("#MotherEmail").css({
                    "border": "",
                    "background": ""
                });
            }
        });

    });
</script>
<script type="text/javascript">
  // When the document is ready

    $(document).ready(function () {

            $('#datepicker').datepicker();
            $('#datepicker').val("");

            $('#datepicker1').datepicker();
            $('#datepicker1').val("");

            $('#datepicker2').datepicker();
            $('#datepicker2').val("");

            $('#datepicker3').datepicker();
            $('#datepicker3').val("");

            $('#datepicker4').datepicker();
            $('#datepicker4').val("");
            $('#fatheroccupation').hide();
            $('#fatherqualification').hide();
            $('#guardianoccupation').hide();
            $('#guardianqualification').hide();
            $('#motherOccupation').hide();
            $('#motherQualification').hide();
            $('.date-own').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'MM yy',
                onClose: function(dateText, inst) {
                    $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));


                }




            });



            $('#Dpyear1').attr("readonly", true);

            $('#Dpyear1').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true

            });

            $('#Dpyear1').datepicker('setDate', new Date());

            $('#Dpyear2').attr("readonly", true);

            $('#Dpyear2').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true
            });

            $('#Dpyear2').datepicker('setDate', new Date());


            $('#Dpyear3').attr("readonly", true);

            $('#Dpyear3').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true
            });

            $('#Dpyear3').datepicker('setDate', new Date());

            $('#Dpyear4').attr("readonly", true);

            $('#Dpyear4').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true
            });

            $('#Dpyear4').datepicker('setDate', new Date());


            $('#Dpyear5').attr("readonly", true);

            $('#Dpyear5').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true
            });

            $('#Dpyear5').datepicker('setDate', new Date());


            $('#Dpyear6').attr("readonly", true);

            $('#Dpyear6').datepicker({
                inline: true,
                showOtherMonths: true,
                showOtherYears: true,
                dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
                dateFormat: 'dd-mm-yy',
                changeMonth: true,
                yearRange: "-100:+0",
                changeYear: true
            });

            $('#Dpyear6').datepicker('setDate', new Date());



   });

</script>
<style type="text/css">
    fieldset {
        border: 1px solid #777;
    }

    legend {
        float: left;
        margin-right: 0.5em;
        padding-top: 0.2em;
        text-align: left;
        font-size: 18px;
        background-color: gainsboro;
    }

    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }

    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }

    .control-group.required .control-label:after {
        content: "*";
        color: red;
    }
</style>
<script>
    function scrollWin() {
        window.scrollTo(0, -500);
    }
</script>

@Html.Hidden("cats")
@Html.Hidden("exclude")
@Html.Hidden("subcats")
@Html.Hidden("Docs")
@Html.Partial("_PermissionHiddenFlds")
@Html.Hidden("FormType", TempData["FormType"])
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_StudentSubMenu")
        <div id="content" class="span10">
            <div class="row-fluid">




                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Student Management", "Index", "Student", "")<i class="icon-angle-right"></i>
                    </li>
                    <li class="active">Manage Student</li>
                </ul>

                <div class="panel-body">

                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        @*@(TempData["StudentError"] ?? string.Empty)*@<strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Manage Student</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">

                            <div id="frm" class="form-horizontal">


                                <fieldset>
                                    <div id="tabs">
                                        <ul id="tabss" class="nav navbar-nav">
                                            <li id="tab1" class="active back"><a href="#tabs-1" style="color: blue;">Student Details</a></li>
                                            <li id="tab2" class="back"><a href="#tabs-2" style="color: blue;">Personal Details</a></li>
                                            <li id="tab3" class="back">
                                                <a href="#tabs-3" style="color: blue;">
                                                    Previous Education
                                                    Details

                                                </a>
                                            </li>
                                        </ul>
                                        <div id="AddForm" style="display: none;">
                                            @using (Html.BeginForm("Admission_DML", "Student", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm", @class = "form-horizontal" }))
                                            {
                                                @Html.ValidationSummary(true)
                                                var fromdt = Convert.ToString(System.DateTime.Now.Year);
                                                var todt = Convert.ToString(System.DateTime.Now.AddYears(1).Year);
                                                var session = Convert.ToString(fromdt + "-" + todt);
                                                <div class="control-group span10">
                                                    <span style="color:red">&nbsp;* fields are required</span>
                                                </div>
                                                <div id="tabs-1">
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Student Details</legend>

                                                        <div class="control-group span5" id="hpic1" style="display:none">
                                                            <div id="pic1" class="controls" style="margin-left:190px">
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5" id="studid">
                                                            @Html.LabelFor(model => model.Studid, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Studid, new { placeholder = "Enter Student ID", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Studid)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Studnm, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Studnm, new { placeholder = "Enter Student Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Studnm)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                                            <div class="controls">
                                                                <div class="pull-left">
                                                                    @{
                                                                        List<SelectListItem> listItems = new List<SelectListItem>();
                                                                        listItems.Add(new SelectListItem
                                                                        {
                                                                            Text = "Male",
                                                                            Value = "1"
                                                                        });
                                                                        listItems.Add(new SelectListItem
                                                                        {
                                                                            Text = "Female",
                                                                            Value = "2",

                                                                        });
                                                                        listItems.Add(new SelectListItem
                                                                        {
                                                                            Text = "Transgender",
                                                                            Value = "3",
                                                                            Selected = true
                                                                        }); }
                                                                    @Html.DropDownListFor(model => model.Gender, listItems, "-- Select Gender --")

                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.Gender)
                                                            </div>
                                                        </div>




                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Classid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Classid, new SelectList(Model.courselist, "Courseid", "CourseName", "Select Course"), "Select Course", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Classid)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DepartmentId, new { @class = "control-label", @for = "focusedInput" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.departmentlistdetails, "Dept_id", "Dept_name", "Select Department"), "Select Department", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.DepartmentId)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.courseyear, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.courseyear, new SelectList(Model.yearlist, "yearid", "YearName", "Select Course Year"), "Select Course Year", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.courseyear)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.academicyear, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(model => model.academicyear, new SelectList(Model.academicyear), "Select Year", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.academicyear)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.StdRegNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.StdRegNo, new { placeholder = "Student Registeration No.", maxlength = "50", @readonly = "true", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.StdRegNo)
                                                            </div>
                                                        </div>


                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.ApplicationID, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ApplicationID, new { placeholder = "Enter Application ID.", maxlength = "50", @class = "input" })
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.RollNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.RollNo, new { placeholder = "Enter Roll No", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.RollNo)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.UniversityRegId, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.UniversityRegId, new { placeholder = "Enter University Reg.", maxlength = "50", @class = "input" })
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DOB, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DOB, new { id = "datepicker", placeholder = "Select Date of birth", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.DOB)
                                                            </div>
                                                        </div>



                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.StudEmail, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.StudEmail, new { placeholder = "Enter Student's Email", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.StudEmail)
                                                            </div>
                                                        </div>



                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Religionid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Religionid, new SelectList(Model.religionlist, "Religionid", "Religionnm", "Select Religion"), "Select Religion", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Religionid)
                                                            </div>
                                                        </div>







                                                        <div class="control-group span5" id="cast">
                                                            @Html.LabelFor(model => model.Casteid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Casteid, new SelectList(Model.castelist, "Casteid", "CasteName", "Select Sub Category"), "Select Sub Category", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Casteid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5" id="parish">
                                                            @Html.LabelFor(model => model.ParishName, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ParishName, new { placeholder = "Enter ParishName", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.ParishName)
                                                            </div>
                                                        </div>


                                                        <div class="control-group span5" id="diocese">
                                                            @Html.LabelFor(model => model.DioceseName, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DioceseName, new { placeholder = "Enter Diocese Name", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.DioceseName)
                                                            </div>

                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.StudCategoryid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.StudCategoryid, new SelectList(Model.categorylist, "StudCategoryid", "StudCategoryname", "Select Category"), "Select Category", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.StudCategoryid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.MotherTongue, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MotherTongue, new { placeholder = "Enter Mother Tongue", maxlength = "45", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MotherTongue)
                                                            </div>
                                                        </div>


                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DocumentType, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @{
                                                                    List<SelectListItem> DocumentType = new List<SelectListItem>();
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Aadhar",
                                                                        Value = "1"
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Passport",
                                                                        Value = "2",

                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "DL",
                                                                        Value = "3",
                                                                        Selected = true
                                                                    });

                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "VoterID",
                                                                        Value = "4",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "PAN",
                                                                        Value = "5",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Refugees",
                                                                        Value = "6",
                                                                        Selected = true
                                                                    });
                                                                    DocumentType.Add(new SelectListItem
                                                                    {
                                                                        Text = "Others",
                                                                        Value = "7",
                                                                        Selected = true
                                                                    });}
                                                                @Html.DropDownListFor(model => model.DocumentType, DocumentType, "-- Select Document Type --")


                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="doctype" hidden>
                                                            @Html.LabelFor(model => model.Documenttypename, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Documenttypename, new { placeholder = "Enter Document Type.", type = "text", maxlength = "100", @class = "input" })
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.DocumentIDNo, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.DocumentIDNo, new { placeholder = "Enter DocumnetIDNo.", maxlength = "50", @class = "input" })
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.StudPic, new { @class = "control-label" })
                                                            <div class="controls">
                                                                <input type="file" name="files1" id="files1" />

                                                                @Html.ValidationMessageFor(model => model.StudPic)
                                                            </div>
                                                        </div>




                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Medical Info</legend>
                                                        <div class="control-group required span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.Weight, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Weight, new { placeholder = "Enter Weight in Kg", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Weight)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Height, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Height, new { placeholder = "Enter Height in Cms", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Height)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.StudBldGrp, new { @class = "control-label ", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.StudBldGrp, new SelectList(Model.bloodgrouplist, "bloodgroupid", "bloodgroupnm", "Select Blood Group"), "Select Blood Group", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.StudBldGrp)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.Disease, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.Disease, new { placeholder = "Enter Disease", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Disease)
                                                            </div>
                                                        </div>







                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Emergency Contact Details</legend>
                                                        <div class="control-group required span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.EmergencyPhysicianNm, new { @class = "control-label" })

                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.EmergencyPhysicianNm, new { placeholder = "Enter  Name", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.EmergencyPhysicianNm)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.EmergencyPhysicianContact, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.ECode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:30%" })
                                                                @Html.TextBoxFor(model => model.EmergencyPhysicianContact, new { placeholder = "Enter Emergency  Contact", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.EmergencyPhysicianContact)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.emcontactrel, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.emcontactrel, new { placeholder = "Enter RelationShip", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.emcontactrel)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.EmergencyAddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.EmergencyAddress, new { placeholder = "Enter  Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.EmergencyAddress)
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <br />
                                                    <button type="button" class="btn btn-primary pull-right" id="btnnext" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Next</button>

                                                </div>
                                                <div id="tabs-2">
                                                    <fieldset class="test hide" style="width: 100%;">
                                                        <legend>Student Details</legend>





                                                    </fieldset>
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Father's Details</legend>
                                                        <div class="control-group required span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.Studfathernm, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Studfathernm, new { placeholder = "Enter Father's Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Studfathernm)
                                                            </div>
                                                        </div>


                                                        <div class="control-group  span5">
                                                            @Html.LabelFor(model => model.FatherOccpationid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.FatherOccpationid, new SelectList(Model.occupationlist, "occupationid", "occupationnm", "Select Occupation"), "Select Occupation", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.FatherOccpationid)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="fatheroccupation" hidden>
                                                            @Html.LabelFor(model => model.FatherOccumationName, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.FatherOccumationName, new { placeholder = "Enter Father's Occupation", maxlength = "50", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.FatherOccumationName)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.FatherQualificationid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.FatherQualificationid, new SelectList(Model.qualificationlist, "qualificationid", "qualificationnm", "Select Qualification"), "Select Qualification", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.FatherQualificationid)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="fatherqualification" hidden>
                                                            @Html.LabelFor(model => model.FatherQualificationName, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.FatherQualificationName, new { placeholder = "Enter Father's Qualification", maxlength = "50", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.FatherQualificationName)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.FatherEmail, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.FatherEmail, new { placeholder = "Enter Father's Email", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.FatherEmail)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.FatherOfficeAddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.FatherOfficeAddress, new { placeholder = "Enter Father's Office Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.FatherOfficeAddress)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.FatherContact, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.FCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:30%" })
                                                                @Html.TextBoxFor(model => model.FatherContact, new { placeholder = "Father's Contact Number", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                @Html.ValidationMessageFor(model => model.FatherContact)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.FatherPic, new { @class = "control-label" })
                                                            <div class="controls">
                                                                <input type="file" name="files2" id="files2" />
                                                                <div id="pic2">
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.FatherPic)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5 hide">
                                                            @Html.LabelFor(model => model.FatherBldGrpid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.FatherBldGrpid, new SelectList(Model.bloodgrouplist, "bloodgroupid", "bloodgroupnm", "Select Blood Group"), "Select Blood Group", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.FatherBldGrpid)
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Guardian's Detail</legend>
                                                        <input type="checkbox" name="gcheckbox" id="cbxShowHide3" value="gcheckbox"> Click here to fill Gaurdian Details
                                                        <div id="autoUpdate3" class="autoUpdate3" hidden style="margin-top:10px">
                                                            <div class="control-group span5" style="margin-left:25px">
                                                                @Html.LabelFor(model => model.GuardianName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextAreaFor(model => model.GuardianName, new { placeholder = "Enter Guardian Name", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianName)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianOccpationid, new { @class = "control-label", @for = "select" })
                                                                <div class="controls">
                                                                    @Html.DropDownListFor(m => m.GuardianOccpationid, new SelectList(Model.occupationlist, "occupationid", "occupationnm", "Select Occupation"), "Select Occupation", new { @for = "select" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianOccpationid)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5" id="guardianoccupation" hidden>
                                                                @Html.LabelFor(model => model.GuardianOccpationName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.GuardianOccpationName, new { placeholder = "Enter Guardian's Occupation", maxlength = "50", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianOccpationName)
                                                                </div>
                                                            </div>


                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianQualificationid, new { @class = "control-label", @for = "select" })
                                                                <div class="controls">
                                                                    @Html.DropDownListFor(m => m.GuardianQualificationid, new SelectList(Model.qualificationlist, "qualificationid", "qualificationnm", "Select Qualification"), "Select Qualification", new { @for = "select" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianQualificationid)
                                                                </div>
                                                            </div>

                                                            <div class="control-group span5" id="guardianqualification" hidden>
                                                                @Html.LabelFor(model => model.GuardianQualificationName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.GuardianQualificationName, new { placeholder = "Enter Guardian's Qualifiaction", maxlength = "50", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianQualificationName)
                                                                </div>
                                                            </div>

                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianEmail, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.GuardianEmail, new { placeholder = "Enter Guardian's Email", maxlength = "30", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianEmail)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianOfficeAddress, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextAreaFor(model => model.GuardianOfficeAddress, new { placeholder = "Enter Guardian's Office Address", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianOfficeAddress)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianContact, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.GCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:30%" })
                                                                    @Html.TextBoxFor(model => model.GuardianContact, new { placeholder = "Guardian's Contact Number", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                    @Html.ValidationMessageFor(model => model.GuardianContact)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.GuardianPic, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    <input type="file" name="files3" id="files3" />
                                                                    <div id="pic3">
                                                                    </div>
                                                                    @Html.ValidationMessageFor(model => model.GuardianPic)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </fieldset>

                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Mother's Details</legend>
                                                        <div class="control-group span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.Studmothernm, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Studmothernm, new { placeholder = "Enter Mother's Name", maxlength = "20", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Studmothernm)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MotherOccpationid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.MotherOccpationid, new SelectList(Model.occupationlist, "occupationid", "occupationnm", "Select Occupation"), "Select Occupation", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.MotherOccpationid)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5" id="motherOccupation" hidden>
                                                            @Html.LabelFor(model => model.MotherOccpationName, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MotherOccpationName, new { placeholder = "Enter Mother's Occupation", maxlength = "50", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MotherOccpationName)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MotherQualificationid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.MotherQualificationid, new SelectList(Model.qualificationlist, "qualificationid", "qualificationnm", "Select Qualification"), "Select Qualification", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.MotherQualificationid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5" id="motherQualification" hidden>
                                                            @Html.LabelFor(model => model.MotherQualificationName, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MotherQualificationName, new { placeholder = "Enter Mother's Qualification", maxlength = "50", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MotherQualificationName)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MotherEmail, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MotherEmail, new { placeholder = "Enter Mother's Email", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MotherEmail)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MotherOfficeAddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.MotherOfficeAddress, new { placeholder = "Enter Mother's Office Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.MotherOfficeAddress)
                                                            </div>
                                                        </div>

                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MotherContact, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.MCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:30%" })
                                                                @Html.TextBoxFor(model => model.MotherContact, new { placeholder = "Mother's Contact Number", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                @Html.ValidationMessageFor(model => model.MotherContact)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.MPic, new { @class = "control-label" })

                                                            <div class="controls">
                                                                <input type="file" name="filemotherpic" id="filemotherpic" />
                                                                <div id="pic4">
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.MPic)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5 hide">
                                                            @Html.LabelFor(model => model.MotherBldGrpid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.MotherBldGrpid, new SelectList(Model.bloodgrouplist, "bloodgroupid", "bloodgroupnm", "Select Blood Group"), "Select Blood Group", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.MotherBldGrpid)
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Address Details</legend>
                                                        <div class="control-group required span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.Countryid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Countryid, new SelectList(Model.countrylist, "Countryid", "CountryName", "Select Country"), "Select Country", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Countryid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Stateid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Stateid, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Stateid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Cityid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.Cityid, new SelectList(Model.citylist, "Cityid", "CityName", "Select City"), "Select City", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.Cityid)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.CurrentAddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.CurrentAddress, new { placeholder = "Enter Current Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.CurrentAddress)
                                                            </div>
                                                        </div>
                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.PermanentAddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.PermanentAddress, new { placeholder = "Enter Permanent Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.PermanentAddress)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.Pincode, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.Pincode, new { placeholder = "Enter Pincode", maxlength = "6", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.Pincode)
                                                            </div>
                                                        </div>

                                                        <div class="control-group required span5">
                                                            @Html.LabelFor(model => model.StdRegMob, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.StdRegMob, new { placeholder = "Enter Mobile No. For SMS", maxlength = "10", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.StdRegMob)
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <br />

                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Transport Details</legend>
                                                        <div class="control-group span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.BusFacility, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.CheckBoxFor(model => model.BusFacility)
                                                                @Html.ValidationMessageFor(model => model.BusFacility)
                                                            </div>
                                                        </div>
                                                        <div id="Busid" class="control-group span5">
                                                            @Html.LabelFor(model => model.busid, new { @class = "control-label", @for = "select" })

                                                            <div id="BusNo" class="controls">
                                                                @Html.DropDownListFor(m => m.busid, new SelectList(Model.Translist, "busid", "busNo", "Select Bus"), "Select Bus", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.busid)
                                                            </div>
                                                        </div>
                                                        <div id="trans_details">
                                                        </div>
                                                        <div style="display: none;" class="control-group span5">
                                                            @Html.LabelFor(model => model.BusNo, new { @class = "control-label" })

                                                            <div style="display: none;" class="controls">
                                                                @Html.TextBoxFor(model => model.BusNo, new { placeholder = "Enter Bus No.", maxlength = "15", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.BusNo)
                                                            </div>
                                                        </div>
                                                        <div style="display: none;" class="control-group span5">
                                                            @Html.LabelFor(model => model.BusRTONo, new { @class = "control-label" })

                                                            <div style="display: none;" class="controls">
                                                                @Html.TextBoxFor(model => model.BusRTONo, new { placeholder = "Enter Bus RTO No.", maxlength = "30", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.BusRTONo)
                                                            </div>
                                                        </div>
                                                    </fieldset>

                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Inventory Details</legend>
                                                        <div class="control-group span5" style="margin-top:0px">
                                                            @Html.LabelFor(model => model.cats, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.ListBoxFor(m => m.categories,
new MultiSelectList((List<SelectListItem>)ViewData["appList"], "Value", "Text"),
new { style = "display:block;width:200px;height:178px;" })
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.subcats, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.ListBoxFor(m => m.subcategories,
new MultiSelectList((List<SelectListItem>)ViewData["subcatList"], "Value", "Text"),
new { style = "display:block;width:200px;height:178px;" })
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.prds, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.ListBoxFor(m => m.products,
new MultiSelectList((List<SelectListItem>)ViewData["prdList"], "Value", "Text"),
new { style = "display:block;width:200px;height:178px;" })
                                                            </div>
                                                        </div>
                                                        @Html.Partial("_MultipleAttachments")
                                                    </fieldset>

                                                    <button type="button" class="btn btn-primary pull-right" id="btnnext1" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Next</button>
                                                    <button type="button" class="btn btn-primary pull-left" id="Previous" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Previous</button>
                                                </div>
                                                <div id="tabs-3" ng-app="myApp" ng-controller="myCtrl">
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Secondary Education Details</legend>
                                                        <table style="width:100%">
                                                            <tr>
                                                                <td style="width:30%">
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.PreviousSchool, new { @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PreviousSchool, new { placeholder = "Enter Previous School", maxlength = "30", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PreviousSchool)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td style="width:70%">
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.SchoolAddress, new { @class = "control-label" })
                                                                        <div class="controls" style="width:100%">
                                                                            @Html.TextBoxFor(model => model.SchoolAddress, new { @Style = "width:100%", placeholder = "Enter School Address", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.SchoolAddress)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        @* <table style="width:100%"><tr><td style="width:25%">*@
                                                        <div class="control-group required span5" style="margin-left:-10px;margin-top:0px">
                                                            @Html.LabelFor(model => model.pyear1, new { @class = "control-label" })
                                                            <div class="controls" sytle="margin-left:0px">
                                                                @Html.TextBoxFor(model => model.pyear1, new { id = "Dpyear4", placeholder = "Year Of Passing", @Style = "width:100px;margin-left:-20px" })
                                                                @Html.ValidationMessageFor(model => model.pyear1)
                                                            </div>
                                                        </div>
                                                        @*</td><td style="width:30%">*@
                                                        <div class="control-group required span3" style="margin-top:0px;margin-left:-100px">
                                                            @Html.LabelFor(model => model.rnumber1, new { @class = "control-label", @Style = "margin-left:-95px" })
                                                            <div class="controls" style="margin-left:65px">
                                                                @Html.TextBoxFor(model => model.rnumber1, new { @Style = "width:150px", placeholder = "Register Number" })
                                                                @Html.ValidationMessageFor(model => model.rnumber1)
                                                            </div>
                                                        </div>
                                                        @* </td><td style="width:20%">*@
                                                        <div class="control-group required span3" style="margin-left:-30px; margin-top:0px">
                                                            @Html.LabelFor(model => model.attempts1, new { @class = "control-label" })
                                                            <div class="controls" style"margin-left:0px">
                                                                @Html.TextBoxFor(model => model.attempts1, new { @Style = "margin-left:-15px; width:50px", placeholder = "Year Of Passing" })
                                                                @Html.ValidationMessageFor(model => model.attempts1)
                                                            </div>
                                                        </div>
                                                        @* </td><td style="width:25%">*@
                                                        <div class="control-group required span3" style="margin-top:0px; margin-left:-30px">
                                                            @Html.LabelFor(model => model.LeaveYear, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.LeaveYear, new { @readonly = "readonly", placeholder = "Select Date", @Style = "margin-left:-20px;width:120px", @class = "date-own form-control", maxlength = "9" })
                                                                @Html.ValidationMessageFor(model => model.LeaveYear)
                                                            </div>
                                                        </div>
                                                        @* </td> </tr></table>
                                                        *@<table style="width: 400px; margin-left:20px" class="table table-striped table-bordered">
                                                            <thead>
                                                                <tr>
                                                                    <td>Subject</td>
                                                                    <td>Marks</td>
                                                                    <td>Maximum</td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject1, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject1)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks1, new { data_ng_model = "m1", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks1)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum1, new { data_ng_model = "max1", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum1)
                                                                    </td>

                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject2, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject2)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks2, new { data_ng_model = "m2", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks2)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum2, new { data_ng_model = "max2", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum2)
                                                                    </td>

                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject3, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject3)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks3, new { data_ng_model = "m3", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks3)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum3, new { data_ng_model = "max3", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum3)
                                                                    </td>

                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject4, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject4)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks4, new { data_ng_model = "m4", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks4)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum4, new { data_ng_model = "max4", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum4)
                                                                    </td>

                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject5, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject5)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks5, new { data_ng_model = "m5", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks5)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum5, new { data_ng_model = "max5", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum5)
                                                                    </td>

                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.subject6, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.subject6)

                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.marks6, new { data_ng_model = "m6", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.marks6)
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.maximum6, new { data_ng_model = "max6", @class = "input", @Style = "width:50px" })
                                                                        @Html.ValidationMessageFor(model => model.maximum6)
                                                                    </td>

                                                                </tr>
                                                                @* <tr>

                                                                        <td><p>Result: {{ m1 -- m2 }}</p></td>
                                                                    </tr>*@
                                                            </tbody>

                                                        </table>

                                                        <table style="width:600px; margin-left:435px;margin-top:-480px" class="table table-striped table-bordered">
                                                            @*<thead>
                                                                    <tr>
                                                                        <td>Subject</td>
                                                                        <td>Marks</td>
                                                                        <td>Maximum</td>
                                                                    </tr>
                                                                </thead>*@
                                                            <tbody>

                                                                <tr>
                                                                    <td>
                                                                        @Html.LabelFor(model => model.c1, new { @class = "control-label", @Style = "width:400px" })
                                                                    </td>
                                                                    <td class="control">

                                                                        @*<input type="hidden" ng_model="yr" value="Yes"/> *@
                                                                        @*<div ng_model="yr" ng-if="yr == Yes">*@
                                                                        <label class="input">Yes: @Html.RadioButtonFor(model => model.c1, "Yes")</label>
                                                                        @*</div>
                                                                            <div ng_model="yr" ng-if="yr == No">*@
                                                                        <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.c1, "No")</label>
                                                                        @* </div>*@
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.LabelFor(model => model.c2, new { @class = "control-label", @Style = "width:400px" })
                                                                    </td>
                                                                    <td>

                                                                        <label class="">Yes: @Html.RadioButtonFor(model => model.c2, "Yes")</label>
                                                                        <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.c2, "No")</label>
                                                                        @Html.ValidationMessageFor(model => model.c2)

                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.LabelFor(model => model.c3, new { @class = "control-label", @Style = "width:400px" })
                                                                    </td>
                                                                    <td>
                                                                        <label class="">Yes: @Html.RadioButtonFor(model => model.c3, "Yes")</label>
                                                                        <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.c3, "No")</label>
                                                                        @Html.ValidationMessageFor(model => model.c3)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @Html.LabelFor(model => model.c4, new { @class = "control-label", @Style = "width:400px" })
                                                                    </td>
                                                                    <td>
                                                                        <label class="">Yes: @Html.RadioButtonFor(model => model.c4, "Yes")</label>
                                                                        <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.c4, "No")</label>
                                                                        @Html.ValidationMessageFor(model => model.c4)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.LabelFor(model => model.c5, new { @class = "control-label", @Style = "width:400px" })
                                                                    </td>
                                                                    <td>
                                                                        <label class="">Yes: @Html.RadioButtonFor(model => model.c5, "Yes")</label>
                                                                        <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.c5, "No")</label>
                                                                        @Html.ValidationMessageFor(model => model.c5)
                                                                    </td>
                                                                </tr>

                                                            </tbody>

                                                        </table>

                                                        <table style="width:400px; margin-left:-23px;margin-top:50px">
                                                            <tr>
                                                                <td style="width:25%">
                                                                    <div class="control-group  required span3">
                                                                        @Html.LabelFor(model => model.PrScObtainMark, new { @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PrScObtainMark, new { @Style = "width:50px;", data_ng_model = "obtain", data_ng_bind = "obtain = max1 -- max2 -- max3 -- max4 -- max5 -- max6", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrScObtainMark)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td style="width:30%">
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.PrScTotalMarks, new { @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PrScTotalMarks, new { @Style = "width:50px;", data_ng_model = "count", data_ng_bind = "count = m1 -- m2 -- m3 -- m4 -- m5 -- m6", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrScTotalMarks)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td style="width:30%">
                                                                    <div class="control-group required span3">
                                                                        @Html.LabelFor(model => model.Grade, new { @class = "control-label", @Style = "width:175px" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.Grade, new { data_ng_model = "grade", @Style = "width:30px;", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.Grade)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td style="width:30%">
                                                                    <div class="control-group required span3">
                                                                        @Html.LabelFor(model => model.PrScPercentage, new { @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PrScPercentage, new { @Style = "width:50px;", data_ng_model = "presn | number : 2", data_ng_bind = "presn = obtain/count*100", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrScPercentage)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        <table style="width:400px; margin-left:-23px;margin-top:0px">
                                                            <tr>
                                                                <td style="width:25%">
                                                                    <div class="control-group span5">
                                                                        @Html.LabelFor(model => model.namelocation, new { @class = "control-label", @Style = "width:400px" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.namelocation, new { @Style = "width:200px", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.namelocation)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="control-group required span3">
                                                                        @Html.LabelFor(model => model.PrScRegisterNumber, new { @Style = "width:160px;margin-left:210px", @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PrScRegisterNumber, new { @Style = "width:235px", placeholder = "Enter Register Number", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrScRegisterNumber)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        <table style="width:400px; margin-left:-0px;margin-top:0px">
                                                            <tr>
                                                                <td style="width:25%">
                                                                    <div class="control-group span5">
                                                                        @Html.LabelFor(model => model.examinationpassed, new { @class = "control-label", @Style = "width:400px" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.examinationpassed, new { @Style = "width:220px", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.examinationpassed)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>

                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.PrincipalNm, new { @Style = "width:150px;margin-left:210px", @class = "control-label" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.PrincipalNm, new { placeholder = "Enter Principal Name", maxlength = "20", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrincipalNm)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        <table style="width:400px; margin-left:-40px;margin-top:0px">
                                                            <tr>
                                                                <td style="width:25%">
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.ReferenceNm, new { @class = "control-label", @Style = "width:200px" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.ReferenceNm, new { @Style = "width:150px", placeholder = "Contact Name", maxlength = "20", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.ReferenceNm)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.ReferenceContact, new { @class = "control-label", @Style = "width:215px; margin-left:-30px" })
                                                                        <div class="controls">
                                                                            @Html.TextBoxFor(model => model.RCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:40px" })

                                                                            @Html.ValidationMessageFor(model => model.ReferenceContact)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="controls">
                                                                        @Html.TextBoxFor(model => model.ReferenceContact, new { @Style = "width:120px;margin-left:-180px;margin-top:-13px", placeholder = "Contact Number", maxlength = "10", @class = "input" })
                                                                    </div>

                                                                </td>
                                                                <td>
                                                                    <div class="control-group required span5">
                                                                        @Html.LabelFor(model => model.PrScTCNumber, new { @Style = "margin-left:-140px", @class = "control-label" })
                                                                        <div class="controls">

                                                                            @Html.TextBoxFor(model => model.PrScTCNumber, new { @Style = "margin-left:-160px;width:120px", placeholder = "Enter TC Number", maxlength = "20", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.PrScTCNumber)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        <table style="width:400px; margin-left:-16px;margin-top:0px">
                                                            <tr>
                                                                <td style="width:25%">
                                                                    <div class="control-group span5">
                                                                        @Html.LabelFor(model => model.PrScReferenceLetter, new { @class = "control-label" })
                                                                        <div class="controls" style="margin-left:165px">
                                                                            <input type="file" name="files5" id="files5" />
                                                                            <div id="pic5" style="width:200px">
                                                                            </div>
                                                                            @Html.ValidationMessageFor(model => model.PrScReferenceLetter)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="control-group span5" style="margin-left:-50px">
                                                                        @Html.LabelFor(model => model.SCTCPic, new { @class = "control-label" })
                                                                        <div class="controls" style="margin-left:165px">
                                                                            <input type="file" name="files6" id="files6" />
                                                                            <div id="pic6" style="width:200px">
                                                                            </div>
                                                                            @Html.ValidationMessageFor(model => model.SCTCPic)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    <div class="control-group span5">
                                                                        @Html.LabelFor(model => model.SCMarksheet, new { @Style = "width:200px;margin-left:-10px", @class = "control-label" })
                                                                        <div class="controls">
                                                                            <input type="file" name="files7" id="files7" />
                                                                            <div id="pic7" style="width:200px">
                                                                            </div>
                                                                            @Html.ValidationMessageFor(model => model.SCMarksheet)
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                        </table>



                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>College UG</legend>
                                                        <input type="checkbox" name="ugcheckbox" id="cbxShowHide" value="ugcheckbox"> Click here to fill college UG Details
                                                        <div id="autoUpdate" class="autoUpdate" hidden>
                                                            <table style="width:100%; width:400px; margin-top:10px">
                                                                <tr>
                                                                    <td style="width:30%">
                                                                        <div class="control-group required span5">
                                                                            @Html.LabelFor(model => model.PrUgCollegeName, new { @Style = "width:200px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgCollegeName, new { @Style = "width:200px", placeholder = "Enter Previous Collage", maxlength = "30", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgCollegeName)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td style="width:70%">
                                                                        <div class="control-group required span5">
                                                                            @Html.LabelFor(model => model.PrUgCollegeAddress, new { @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgCollegeAddress, new { @Style = "width:445px", placeholder = "Enter Collage Address", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgCollegeAddress)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                            <div class="control-group  span5" style="margin-left:-20px;margin-top:0px">
                                                                @Html.LabelFor(model => model.ppyear1, new { @class = "control-label" })
                                                                <div class="controls" sytle="margin-left:0px">
                                                                    @Html.TextBoxFor(model => model.ppyear1, new { id = "Dpyear3", placeholder = "Year Of Passing", @Style = "width:100px;margin-left:-20px" })
                                                                    @Html.ValidationMessageFor(model => model.ppyear1)
                                                                </div>
                                                            </div>
                                                            <div class="control-group  span3" style="margin-top:0px;margin-left:-60px">
                                                                @Html.LabelFor(model => model.PrUgRegisterNumber, new { @class = "control-label", @Style = "margin-left:-95px" })
                                                                <div class="controls" style="margin-left:65px">
                                                                    @Html.TextBoxFor(model => model.PrUgRegisterNumber, new { @Style = "width:150px", placeholder = "Register Number" })
                                                                    @Html.ValidationMessageFor(model => model.PrUgRegisterNumber)
                                                                </div>
                                                            </div>
                                                            <div class="control-group required span3" style="margin-left:-30px; margin-top:0px">
                                                                @Html.LabelFor(model => model.pattempts1, new { @class = "control-label" })
                                                                <div class="controls" style"margin-left:0px">
                                                                    @Html.TextBoxFor(model => model.pattempts1, new { @Style = "margin-left:-15px; width:50px", placeholder = "Year Of Passing" })
                                                                    @Html.ValidationMessageFor(model => model.pattempts1)
                                                                </div>
                                                            </div>

                                                            <div class="control-group  span3" style="margin-top:0px; margin-left:-50px">
                                                                @Html.LabelFor(model => model.PrUgYearLeaving, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrUgYearLeaving, new { @readonly = "readonly", @Style = "margin-left:-20px;width:102px", @class = "date-own form-control", placeholder = "Select Date", maxlength = "9" })
                                                                    @Html.ValidationMessageFor(model => model.PrUgYearLeaving)
                                                                </div>
                                                            </div>
                                                            <table style="width: 400px; margin-left:20px" class="table table-striped table-bordered">
                                                                <thead>
                                                                    <tr>
                                                                        <td>Subject</td>
                                                                        <td>Marks</td>
                                                                        <td>Maximum</td>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.psubject1, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.psubject1)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks1, new { data_ng_model = "pm1", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmarks1)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum1, new { data_ng_model = "pmax1", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum1)
                                                                        </td>

                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.psubject2, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.psubject2)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks2, new { data_ng_model = "pm2", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmarks2)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum2, new { data_ng_model = "pmax2", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum2)
                                                                        </td>

                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.psubject3, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.psubject3)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks3, new { data_ng_model = "pm3", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmarks3)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum3, new { data_ng_model = "pmax3", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum3)
                                                                        </td>

                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.psubject4, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.psubject4)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks4, new { data_ng_model = "pm4", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmarks4)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum4, new { data_ng_model = "pmax4", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum4)
                                                                        </td>

                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.subject5, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.psubject5)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks5, new { data_ng_model = "pm5", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmarks5)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum5, new { data_ng_model = "pmax5", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum5)
                                                                        </td>

                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.psubject6, new { placeholder = "Enter Subject Name", @class = "input" })
                                                                            @Html.ValidationMessageFor(model => model.subject6)

                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmarks6, new { data_ng_model = "pm6", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.marks6)
                                                                        </td>
                                                                        <td>

                                                                            @Html.TextBoxFor(model => model.pmaximum6, new { data_ng_model = "pmax6", @class = "input", @Style = "width:50px" })
                                                                            @Html.ValidationMessageFor(model => model.pmaximum6)
                                                                        </td>

                                                                    </tr>
                                                                    @* <tr>

                                                                            <td><p>Result: {{ m1 -- m2 }}</p></td>
                                                                        </tr>*@
                                                                </tbody>

                                                            </table>
                                                            <table style="width:600px; margin-left:435px;margin-top:-340px" class="table table-striped table-bordered">
                                                                <tbody>
                                                                    <tr>
                                                                        <td>
                                                                            @Html.LabelFor(model => model.pc1, new { @class = "control-label", @Style = "width:400px" })
                                                                        </td>
                                                                        <td class="control">
                                                                            <label class="">Yes: @Html.RadioButtonFor(model => model.pc1, "Yes")</label>
                                                                            <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.pc1, "No")</label>
                                                                            @Html.ValidationMessageFor(model => model.pc1)
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>
                                                                            @Html.LabelFor(model => model.pc2, new { @class = "control-label", @Style = "width:400px" })
                                                                        </td>
                                                                        <td>

                                                                            <label class="">Yes: @Html.RadioButtonFor(model => model.pc2, "Yes")</label>
                                                                            <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.pc2, "No")</label>
                                                                            @Html.ValidationMessageFor(model => model.pc2)
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>
                                                                            @Html.LabelFor(model => model.pc3, new { @class = "control-label", @Style = "width:400px" })
                                                                        </td>
                                                                        <td>
                                                                            <label class="">Yes: @Html.RadioButtonFor(model => model.pc3, "Yes")</label>
                                                                            <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.pc3, "No")</label>
                                                                            @Html.ValidationMessageFor(model => model.pc3)
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>

                                                                            @Html.LabelFor(model => model.pc4, new { @class = "control-label", @Style = "width:400px" })
                                                                        </td>
                                                                        <td>
                                                                            <label class="">Yes: @Html.RadioButtonFor(model => model.pc4, "Yes")</label>
                                                                            <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.pc4, "No")</label>
                                                                            @Html.ValidationMessageFor(model => model.pc4)
                                                                        </td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td>
                                                                            @Html.LabelFor(model => model.pc5, new { @class = "control-label", @Style = "width:400px" })
                                                                        </td>
                                                                        <td>
                                                                            <label class="">Yes: @Html.RadioButtonFor(model => model.pc5, "Yes")</label>
                                                                            <label style="margin-top:-25px;margin-left:80px;">No: @Html.RadioButtonFor(model => model.pc5, "No")</label>
                                                                            @Html.ValidationMessageFor(model => model.pc5)
                                                                        </td>
                                                                    </tr>

                                                                </tbody>

                                                            </table>
                                                            <table style="width:400px; margin-left:-35px;margin-top:50px">
                                                                <tr>
                                                                    <td style="width:25%">
                                                                        <div class="control-group  required span3">
                                                                            @Html.LabelFor(model => model.PrUgObtainMark, new { @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgObtainMark, new { @Style = "width:50px;", data_ng_model = "obtain", data_ng_bind = "obtain = max1 -- max2 -- max3 -- max4 -- max5 -- max6", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgObtainMark)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td style="width:30%">
                                                                        <div class="control-group required span5">
                                                                            @Html.LabelFor(model => model.PrUgTotalMark, new { @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgTotalMark, new { @Style = "width:50px;", data_ng_model = "count", data_ng_bind = "count = m1 -- m2 -- m3 -- m4 -- m5 -- m6", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgTotalMark)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td style="width:30%">
                                                                        <div class="control-group required span3">
                                                                            @Html.LabelFor(model => model.PrUgGradeLeaving, new { @class = "control-label", @Style = "width:175px" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgGradeLeaving, new { data_ng_model = "grade", @Style = "width:30px;", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgGradeLeaving)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td style="width:30%">
                                                                        <div class="control-group required span3">
                                                                            @Html.LabelFor(model => model.PrUgPercentage, new { @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgPercentage, new { @Style = "width:50px;", data_ng_model = "presn | number : 2", data_ng_bind = "presn = obtain/count*100", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgPercentage)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                            <table style="margin-top:0px;margin-left:4px">
                                                                <tr>
                                                                    <td style="width:25%">
                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.pnamelocation, new { @Style = "width:370px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.pnamelocation, new { @Style = "width:208px", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.pnamelocation)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="control-group span5" style="margin-left:130px">
                                                                            @Html.LabelFor(model => model.PrUgPrincipalName, new { @Style = "margin-left:20px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgPrincipalName, new { placeholder = "Enter Principal Name", maxlength = "20", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgPrincipalName)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                            <table style="width:400px;margin-left:-5px;margin-top:0px">
                                                                <tr>
                                                                    <td style="width:25%">
                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.pexaminationpassed, new { @Style = "width:400px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.pexaminationpassed, new { @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.pexaminationpassed)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>

                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.PrUgReasonofLeaving, new { @Style = "margin-left:210px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgReasonofLeaving, new { placeholder = "Enter Leave Reason", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgReasonofLeaving)
                                                                            </div>
                                                                        </div>

                                                                    </td>
                                                                </tr>
                                                            </table>
                                                            <table style="width:400px;margin-left:2px;margin-top:0px">
                                                                <tr>
                                                                    <td style="width:25%">
                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.PrUgAffilatedUniversity, new { @Style = "width:240px", @class = "control-label" })
                                                                            <div class="controls">

                                                                                @Html.TextBoxFor(model => model.PrUgAffilatedUniversity, new { @Style = "width:240px", placeholder = "University - Affliated University", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgAffilatedUniversity)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.PrUgRefContactName, new { @Style = "width:180px;margin-left:10px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgRefContactName, new { placeholder = "Contact Name", maxlength = "20", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgRefContactName)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                            <table style="width:400px;margin-top:0px">
                                                                <tr>
                                                                    <td style="width:25%">
                                                                        <div class="control-group span5">
                                                                            @Html.LabelFor(model => model.PrUgRefContactNo, new { @Style = "width:200px;margin-left:-48px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                @Html.TextBoxFor(model => model.PrUgRefContactNo, new { @Style = "width:120px;margin-left:-20px", placeholder = "Contact Number", maxlength = "10", @class = "input" })
                                                                                @Html.ValidationMessageFor(model => model.PrUgRefContactNo)
                                                                                <div id="temp" style="width:200px;height:220px;display:none">
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        <div class="control-group span5" style="margin-left:-80px">
                                                                            @Html.LabelFor(model => model.UGMarksheet, new { @Style = "width:200px;margin-left:55px", @class = "control-label" })
                                                                            <div class="controls">
                                                                                <input type="file" name="files8" id="files8" />
                                                                                <div id="pic8" style="width:200px">
                                                                                </div>
                                                                                @Html.ValidationMessageFor(model => model.UGMarksheet)
                                                                            </div>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>College PG</legend>
                                                        <input type="checkbox" name="pgcheckbox" id="cbxShowHide1" value="pgcheckbox"> Click here to fill college PG Details
                                                        <div id="autoUpdate1" class="autoUpdate1" hidden style="margin-top:10px">
                                                            <div class="control-group span5" style="margin-left:25px">
                                                                @Html.LabelFor(model => model.PrPgCollegeName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgCollegeName, new { placeholder = "Enter College Name", maxlength = "30", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgCollegeName)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgCollegeAddress, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextAreaFor(model => model.PrPgCollegeAddress, new { placeholder = "Enter College Address", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgCollegeAddress)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgAffilatedUniversity, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @*@Html.DropDownListFor(m => m.LastClass, new SelectList(Model.classlist, "Classid", "Classnm", "Select Class"), "Select Class", new { @class = "form-control mar" })*@
                                                                    @Html.TextBoxFor(model => model.PrPgAffilatedUniversity, new { placeholder = "University - Affliated University", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgAffilatedUniversity)
                                                                </div>
                                                            </div>

                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgObtainMark, new { @class = "control-label" })
                                                                <div class="controls">

                                                                    @Html.TextBoxFor(model => model.PrPgObtainMark, new { placeholder = "Enter Obtain Marks", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgObtainMark)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgTotalMark, new { @class = "control-label" })
                                                                <div class="controls">

                                                                    @Html.TextBoxFor(model => model.PrPgTotalMark, new { placeholder = "Enter Total Marks", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgTotalMark)
                                                                </div>
                                                            </div>


                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgGradeLeaving, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgGradeLeaving, new { placeholder = "Enter Grade While Leaving", @readonly = "readonly", maxlength = "10", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgGradeLeaving)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgPercentage, new { @class = "control-label" })
                                                                <div class="controls">

                                                                    @Html.TextBoxFor(model => model.PrPgPercentage, new { placeholder = "Enter Percentage ", @readonly = "readonly", maxlength = "10", @class = "input", @Style = "width:63%" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgPercentage)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgYearLeaving, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgYearLeaving, new { placeholder = "Enter Year of Leaving", maxlength = "9", @class = "date-own form-control" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgYearLeaving)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgRegisterNumber, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgRegisterNumber, new { placeholder = "Enter Reference Contact Number", maxlength = "10", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgRegisterNumber)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgReasonofLeaving, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextAreaFor(model => model.PrPgReasonofLeaving, new { placeholder = "Enter Leave Reason", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgReasonofLeaving)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgPrincipalName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgPrincipalName, new { placeholder = "Enter Principal Name", maxlength = "20", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgPrincipalName)
                                                                </div>
                                                            </div>

                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgRefContactName, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgRefContactName, new { placeholder = "Enter Reference Contact Name", maxlength = "20", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgRefContactName)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PrPgRefContactNo, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    @Html.TextBoxFor(model => model.PrPgRefContactNo, new { placeholder = "Enter Reference Contact Number", maxlength = "10", @class = "input" })
                                                                    @Html.ValidationMessageFor(model => model.PrPgRefContactName)
                                                                </div>
                                                            </div>
                                                            <div class="control-group span5">
                                                                @Html.LabelFor(model => model.PGMarksheet, new { @class = "control-label" })
                                                                <div class="controls">
                                                                    <input type="file" name="files9" id="files9" />
                                                                    <div id="pic9">
                                                                    </div>
                                                                    @Html.ValidationMessageFor(model => model.PGMarksheet)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <br />

                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Siblings</legend>
                                                        <table style="width: 100%;" class="table table-striped table-bordered">
                                                            <thead>
                                                                <tr>
                                                                    <td>Name</td>
                                                                    <td>Relation</td>
                                                                    <td>DOB</td>
                                                                    <td>Qualification</td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.Sibling1Name, new { placeholder = "Enter  Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling1Name)

                                                                    </td>
                                                                    <td>

                                                                        @{
                                                                            List<SelectListItem> Sibling1Rel = new List<SelectListItem>();
                                                                            Sibling1Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Sister",
                                                                                Value = "1"
                                                                            });
                                                                            Sibling1Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Brother",
                                                                                Value = "2",

                                                                            });
                                                                        }

                                                                        @Html.DropDownListFor(model => model.Sibling1Rel, Sibling1Rel, "-- Select Relation --")
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.Sibling1DOB, new { id = "datepicker1", placeholder = "Select Date of birth" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling1DOB)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextAreaFor(model => model.Sibling1Ql, new { placeholder = "Enter  Qualification", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling1Ql)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling2Name, new { placeholder = "Enter  Name", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling2Name)
                                                                    </td>
                                                                    <td>
                                                                        @{
                                                                            List<SelectListItem> Sibling2Rel = new List<SelectListItem>();
                                                                            Sibling2Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Sister",
                                                                                Value = "1"
                                                                            });
                                                                            Sibling2Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Brother",
                                                                                Value = "2",

                                                                            });
                                                                        }
                                                                        @Html.DropDownListFor(model => model.Sibling2Rel, Sibling2Rel, "-- Select Relation --")
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling2DOB, new { id = "datepicker2", placeholder = "Select Date of birth" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling2DOB)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextAreaFor(model => model.Sibling2Ql, new { placeholder = "Enter Qualification", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling2Ql)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling3Name, new { placeholder = "Enter  Name", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling3Name)
                                                                    </td>
                                                                    <td>
                                                                        @{
                                                                            List<SelectListItem> Sibling3Rel = new List<SelectListItem>();
                                                                            Sibling3Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Sister",
                                                                                Value = "1"
                                                                            });
                                                                            Sibling3Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Brother",
                                                                                Value = "2",

                                                                            });
                                                                        }
                                                                        @Html.DropDownListFor(model => model.Sibling3Rel, Sibling3Rel, "-- Select Relation --")


                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling3DOB, new { id = "datepicker3", placeholder = "Select Date of birth" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling3DOB)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextAreaFor(model => model.Sibling3Ql, new { placeholder = "Enter Qualification", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling3Ql)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling4Name, new { placeholder = "Enter  Name", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling4Name)
                                                                    </td>
                                                                    <td>
                                                                        @{
                                                                            List<SelectListItem> Sibling4Rel = new List<SelectListItem>();
                                                                            Sibling4Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Sister",
                                                                                Value = "1"
                                                                            });
                                                                            Sibling4Rel.Add(new SelectListItem
                                                                            {
                                                                                Text = "Brother",
                                                                                Value = "2",

                                                                            });
                                                                        }
                                                                        @Html.DropDownListFor(model => model.Sibling4Rel, Sibling4Rel, "-- Select Relation --")


                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.Sibling4DOB, new { id = "datepicker4", placeholder = "Select Date of birth" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling4DOB)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextAreaFor(model => model.Sibling4Ql, new { placeholder = "Enter Qualification", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.Sibling4Ql)
                                                                    </td>
                                                                </tr>
                                                            </tbody>

                                                        </table>

                                                    </fieldset>
                                                    <br />
                                                    <fieldset class="test" style="width: 100%;">
                                                        <div id="stat" class="control-group">
                                                            <label class="control-label">Status</label>
                                                            <div class="controls">
                                                                <label class="radio inline">

                                                                    <input type="radio" checked="checked" name="group1" value="1" />Approve
                                                                </label>
                                                                <label class="radio inline"> <input type="radio" name="group1" value="0" />Unapprove   </label>
                                                            </div>
                                                        </div>
                                                    </fieldset>

                                                    <button type="button" class="btn btn-primary pull-left" id="Previous1" onclick="scrollWin()"> <span class="glyphicon glyphicon-search"></span> Previous</button>
                                                    <br />
                                                    <div class="form-actions">

                                                        <div class="control-group span8 pull-right">
                                                            <input type="submit" class="btn btn-primary" id="insert" value="Submit" />

                                                        </div>
                                                    </div>
                                                </div>
                                                                            }
                                        </div>
                                    </div>
                                </fieldset>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


