@model Entity.employeeviewmodel
@{
    ViewBag.Title = "Employee Master";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("#tabs").tabs();
    });
    $(document).ready(function () {
        FillPermission();
        FillType();
        function FillType() {
            var item = '<option value="">select Type</option>';
            item += '<option value="4">Teacher</option>';
            item += '<option value="5">Employee</option>';
            $("#Typeid").append(item);
        }
        $("#lblmsg").text('');
        $('#empid input').attr("readonly", true);
        if ($("#empid input").val() == "0") {
            $("#empid").hide();
        }

        $("#result").on("click", ".edit", function (evt) {
            var Empid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillEmpDetails")',
                dataType: 'JSON',
                data: { Empid: Empid },
                success: function (data) {
                    clearmsg();
                    $("#empid").show();
                    $("#empid input").val(data.Empid);
                    $("#FirstName").val(data.FirstName);
                    $("#MiddleName").val(data.MiddleName);
                    $("#LastName").val(data.LastName);
                    var value = new Date(parseInt(data.DOB.substr(6)));
                    $('#datepicker').datepicker('setDate', value);
                    $('#datepicker').focus();
                    if (data.DateOfJoin != null) {
                        var value1 = new Date(parseInt(data.DateOfJoin.substr(6)));
                        $('#datepicker1').datepicker('setDate', value1);
                    }
                    else {
                        $('#datepicker1').datepicker('setDate', new Date());
                    }

                    $("#Emailid").val(data.Emailid);
                    $("#Gender").val(data.Gender);
                    $("#Quallification").val(data.Quallification);
                    $("#OQualification").val(data.OtherQualification);
                    $("#Address").val(data.Address);
                    $("#PhoneNo").val(data.PhoneNo);
                    $("#MobileNo").val(data.MobileNo);
                    $("#Code").val(data.Code);
                    $("#Typeid").val(data.Typeid)
                    $("#Zipcode").val(data.Zipcode)
                    $("#Stateid").val(data.Stateid);
                    $("#Cityid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.Stateid },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">Select city</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#Cityid").append(item);
                                $("#Cityid").val(data.Cityid);
                            }
                            else {
                                var item = '<option value="">Select city</option>';
                                $("#Cityid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve cities.' + ex);
                        }
                    });
                }
            });
        });
        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker1').attr("readonly", true);

        $('#datepicker1').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').datepicker('setDate', new Date());
        $('#datepicker1').datepicker('setDate', new Date());
        $('#datepicker').focus();

        
            $("#insert").click(function () {
                setTimeout(function () {
                    validations();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DMLEmp")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("Employee updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
             });
    

        $("#reset").click(function () {
            clear();
            clearmsg();
        });
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

        $("#result").on("click", ".delete", function (evt) {
            var Cityid = this.id;
            var flag = confirm('Are you sure you want to delete this Employee?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLEmp")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Cityid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Employee deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function clear() {
            $("#empid").hide();
            $('#empid input').val('0');
            $("#FirstName").val('');
            $("#MiddleName").val('');
            $("#LastName").val('');
            $("#Stateid").val('');
            $("#Cityid").val('0');
            $("#Zipcode").val('');
            $("#Emailid").val('');
            $("#PhoneNo").val('');
            $("#MobileNo").val('');
            $("#Code").val('');
            $("#Address").val('');
            $("#Quallification").val('');
            $("#OQualification").val('');
            $("#Typeid").val('');
            $('#datepicker').datepicker('setDate', new Date());
            $('#datepicker1').datepicker('setDate', new Date());
        }

        function Validations(e) {
            var cnt = 0;
            if ($("#FirstName").val() == '') {
                cnt++;
                $("#FirstName").css({
                    "border": "1px solid red"
                });
                alert("academic year Mandatory!");
                e.preventDefault();
                return false;
            }
            else {
                $("#FirstName").css({
                    "border": "",
                    "background": ""
                });
            }
            if (cnt != 0) {
                e.preventDefault();
            }

        //    if ($("#MiddleName").val() == '') {
        //        cnt++;
        //        $("#MiddleName").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#MiddleName").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#LastName").val() == '') {
        //        cnt++;
        //        $("#LastName").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#LastName").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#datepicker").val() == '') {
        //        cnt++;
        //        $("#datepicker").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#datepicker").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#datepicker1").val() == '') {
        //        cnt++;
        //        $("#datepicker1").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#datepicker1").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Emailid").val() == '') {
        //        cnt++;
        //        $("#Emailid").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Emailid").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Quallification").val() == '') {
        //        cnt++;
        //        $("#Quallification").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Quallification").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Address").val() == '') {
        //        cnt++;
        //        $("#Address").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Address").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Zipcode").val() == '') {
        //        cnt++;
        //        $("#Zipcode").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Zipcode").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#PhoneNo").val() == '') {
        //        cnt++;
        //        $("#PhoneNo").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#PhoneNo").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#MobileNo").val() == '') {
        //        cnt++;
        //        $("#MobileNo").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#MobileNo").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Code").val() == '') {
        //        cnt++;
        //        $("#Code").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Code").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }


        //    if ($("#Stateid").val() == '' || $("#Stateid").val() == '0') {
        //        cnt++;
        //        $("#Stateid").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Stateid").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Cityid").val() == '' || $("#Cityid").val() == '0') {
        //        cnt++;
        //        $("#Cityid").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Cityid").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }

        //    if ($("#Typeid").val() == '' || $("#Typeid").val() == '0') {
        //        cnt++;
        //        $("#Typeid").css({
        //            "border": "1px solid red"
        //        });
        //    }
        //    else {
        //        $("#Typeid").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }


        //    if (cnt != 0) {
        //        e.preventDefault();
        //    }
        }

        $("#Stateid").change(function () {
            $("#Cityid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { id: $("#Stateid").val() },
                success: function (cities) {
                    if (cities != "") {
                        var item = '<option value="0">select City</option>';
                        $.each(cities, function (i, city) {
                            item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                        });
                        $("#Cityid").append(item);
                    }
                    else {
                        var item = '<option value="0">select City</option>';
                        $("#Cityid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve cities.' + ex);
                }
            });
            return false;
        })

        $('#Emailid').change(function () {
            $("#lblmsg").text("");
            var Emailid = $('#Emailid').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_Emp")',
                dataType: 'JSON',
                data: { Emailid: Emailid },
                success: function (data) {
                    if (data.Emailid != null) {
                        alert("Emailid Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#Emailid').val('');
                        return false;
                    }
                }
            });
        });

        //$("#PhoneNo").keypress(function (e) {
        //    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //        $("#errmsg").html("Digits Only").show().fadeOut("slow");
        //        return false;
        //    }
        //});

        //$("#Zipcode").keypress(function (e) {
        //    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //        $("#errmsg").html("Digits Only").show().fadeOut("slow");
        //        return false;
        //    }
        //});

        //$("#MobileNo").keypress(function (e) {
        //    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //        $("#errmsg").html("Digits Only").show().fadeOut("slow");
        //        return false;
        //    }
        //});

        //$("#Code").keypress(function (e) {
        //    if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //        $("#errmsg").html("Digits Only").show().fadeOut("slow");
        //        return false;
        //    }
        //});

        //function ValidateEmail(email) {
        //    var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        //    return expr.test(email);
        //};

        //$('#Emailid').blur(function () {
        //    if (!ValidateEmail($("#Emailid").val())) {
        //        $("#Emailid").css({
        //            "border": "1px solid red"
        //        });
        //        $('#Emailid').val('');
        //        alert("Email address is invalid!..");
        //        return false;
        //    }
        //    else {
        //        $("#Emailid").css({
        //            "border": "",
        //            "background": ""
        //        });
        //    }
        //});

        $("#clastdate").change(function () {
            var c = $("#cjoiningdate").val();
            var d = $("#clastdate").val();
            var a = new Date(c);
            var b = new Date(d);
            var day = Math.round(Math.abs((a.getDate() - b.getDate())));
            var year = Math.round(Math.abs((a.getYear() - b.getYear())));
            var month = Math.round(Math.abs((a.getMonth() - b.getMonth())));
            $("#total").val(day + " Days " + month + " Months " + year + " Years");
        });
        $("#lastdate").change(function () {
            var c = $("#joiningdate").val();
            var d = $("#lastdate").val();
            var a = new Date(c);
            var b = new Date(d);
            var day = Math.round(Math.abs((a.getDate() - b.getDate())));
            var year = Math.round(Math.abs((a.getYear() - b.getYear())));
            var month = Math.round(Math.abs((a.getMonth() - b.getMonth())));
            $("#ctotal").val(day + " Days " + month + " Months " + year + " Years");
        });
        ReloadPaging();


    });
</script>
<style type="text/css">
    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    fieldset {
        border: 1px solid #777;
    }

        /*.controls {
        border: 1px solid;
    }
    .input {
        border: 1px solid;
        border-color:red;
    }*/
    .form-horizontal .controls {
    margin-left: 45.5%;
}
    .form-horizontal .control-group {
    margin-bottom: 5px;
    margin-left: 5%;
    margin-top: 5px;
}
    legend {
        float: left;
        margin-right: 0.5em;
        padding-top: 0.2em;
        text-align: left;
        font-size: 18px;
        background-color: gainsboro;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }
    .form-horizontal .control-group{
    margin-top:5px;
    margin-bottom:5px;
    }
    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }
</style>@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">
             
		<div class="row-fluid">
             @Html.Partial("_EmployeeSubMenuList")
	<div id="content" class="span10">
        	<div class="row-fluid">
     
            <ul class="breadcrumb">
               <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                @Html.ActionLink("Employee Management", "Employee", "Masters", "")<i class="icon-angle-right"></i></li>
                <li class="active">Employee Master</li>
            </ul>
                 <div class="panel-body"> 
<div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
	<strong><label id="lblmsg"></label></strong> 
	</div>
  <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
	<strong><label id="lblmsgs"></label></strong> 
</div>
</div>

           <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<div id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                       <div id="tabs">
                                        <ul id="tabss" class="nav navbar-nav">
                                            <li id="tab1" class="active back"><a href="#tabs-1" style="color: blue;">Employee Details</a></li>
                                            <li id="tab2" class="back"><a href="#tabs-2" style="color: blue;">Personal Details</a></li>
                                            <li id="tab3" class="back">
                                                <a href="#tabs-3" style="color: blue;">Previous Experience Details</a>
                                            </li>
                                        </ul>  
                                      <div id="AddForm" style="display: none;">
                                   @using (Html.BeginForm("DMLEmp", "Masters", FormMethod.Post, new { id = "frm", enctype = "multipart/form-data", @class = "form-horizontal" }))
                                   {
                                         
                                        @Html.ValidationSummary(true)
                                       var fromdt = Convert.ToString(System.DateTime.Now.Year);
                                       var todt = Convert.ToString(System.DateTime.Now.AddYears(1).Year);
                                       var session = Convert.ToString(fromdt + "-" + todt);
                                   
                                      <div id="tabs-1">
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Employee Details</legend>
                                  
                                            <div id="empid" class="control-group span5 ">
                                                    @Html.LabelFor(model => model.Empid, new { @class = "control-label", @for = "focusedInput" })
                                              
                                                <div class="controls">
                                                    @Html.TextBoxFor(model => model.Empid, new { placeholder = "Enter Employee ID", @class = "input" })
                                                    @Html.ValidationMessageFor(model => model.Empid)
                                                </div>
                                                      </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.FirstName, new { @class = "control-label", @for = "focusedInput" })
                                           
                                             <div class="controls">
                                                @Html.TextBoxFor(model => model.FirstName, new { placeholder = "Enter First Name", maxlength = "20", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.FirstName)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.MiddleName, new { placeholder = "Enter Middle Name", maxlength = "20", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.MiddleName)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.LastName, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.LastName, new { placeholder = "Enter Last Name", maxlength = "20", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.LastName)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.DOB, new { @class = "control-label" })
                                          
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.DOB, new { id = "datepicker", placeholder = "Select Date of birth" })
                                                @Html.ValidationMessageFor(model => model.DOB)
                                            </div>
                                                      </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> listItems = new List<SelectListItem>();
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Male",
                                           Value = "1"
                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Female",
                                           Value = "2",

                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Unknown",
                                           Value = "3",
                                           Selected = true
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.Gender, listItems, "-- Select Gender --")
                                                
                                               
                                                @*    @Html.RadioButtonFor(model => model.SelectGender,Model.Gender,Model.Gender.  new { id = "male" })
                                                    Male*@
                                             
                                                 @*   @Html.RadioButtonFor(model => model.SelectGender, Model.Gender, new { id = "female" }) FeMale*@
                                                
                                                @Html.ValidationMessageFor(model => model.Gender)
                                                      </div>
                                            </div>  
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.DateOfJoin, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.DateOfJoin, new { id = "datepicker1", placeholder = "Select Joining Date" })
                                                @Html.ValidationMessageFor(model => model.DateOfJoin)
                                            </div>
                                                </div> 
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.edepartment, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> dlistItems = new List<SelectListItem>();
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Male",
                                           Value = "1"
                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Female",
                                           Value = "2",

                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Unknown",
                                           Value = "3",
                                           Selected = true
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.edepartment, dlistItems, "-- Select Department --")
                                                                                              
                                                @Html.ValidationMessageFor(model => model.edepartment)
                                                      </div>
                                            </div>  
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.eblood, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> eblistItems = new List<SelectListItem>();
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Male",
                                           Value = "1"
                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Female",
                                           Value = "2",

                                       });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Unknown",
                                           Value = "3",
                                           Selected = true
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.eblood, eblistItems, "-- Select Blood Group --")
                                                                                              
                                                @Html.ValidationMessageFor(model => model.eblood)
                                                      </div>
                                            </div>

                                            
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Quallification, new { @class = "control-label" })
                                             <div  class="controls">
                                                @Html.DropDownListFor(m => m.Quallification, new SelectList(Model.qualificationlist, "qualificationid", "qualificationnm", "Select Qualification"), "Select Qualification")
                                                @Html.ValidationMessageFor(model => model.Quallification)
                                            </div>
                                                  </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Stateid, new { @class = "control-label" })
                                        
                                            <div  class="controls"> 
                                                @Html.DropDownListFor(m => m.Stateid, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state")
                                                @Html.ValidationMessageFor(model => model.Stateid)
                                            </div>
                                                    </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Cityid, new { @class = "control-label" })
                                             <div  class="controls">
                                                @Html.DropDownListFor(m => m.Cityid, new SelectList(Model.citylist, "Cityid", "CityName", "Select City"), "Select city")
                                                @Html.ValidationMessageFor(model => model.Cityid)
                                            </div>
                                               </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Zipcode, new { @class = "control-label" })
                                           
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.Zipcode, new { placeholder = "Enter Zipcode", maxlength = "6", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.Zipcode)
                                            </div>
                                                    </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Emailid, new { @class = "control-label" })
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.Emailid, new { placeholder = "Enter Email", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.Emailid)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.PhoneNo, new { @class = "control-label" })
                                             <div  class="controls">
                                                @Html.TextBoxFor(model => model.PhoneNo, new { placeholder = "Enter Phone Number", maxlength = "12", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.PhoneNo)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.MobileNo, new { @class = "control-label" })
                                           <div  class="controls" >
                                                @Html.TextBoxFor(model => model.Code, new { placeholder = "Code", maxlength = "4", @class = "input-small" })
                                               </div><div  class="controls">
                                                @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Mobile Number", maxlength = "10", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.MobileNo)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextAreaFor(model => model.Address, new { placeholder = "Enter Address", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.Address)
                                            </div>
                                                </div>                            
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Typeid, new { @class = "control-label" })
                                               <div  class="controls">
                                                <select id="Typeid" name="Typeid" class="input"></select>
                                                @Html.ValidationMessageFor(model => model.Typeid)
                                            </div>
                                                   </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.OQualification, new { @class = "control-label" })
                                             <div  class="controls">
                                                @Html.TextAreaFor(model => model.OQualification, new { @class = "input", placeholder = "Qualification" })
                                                @Html.ValidationMessageFor(model => model.OQualification)
                                            </div>
                                                </div>  
                                            </fieldset>
                                            <br />
                                            <fieldset class="test" style="width: 100%;">
                                                        <legend>Qualication</legend>
                                                        <table style="width: 100%;" class="table table-striped table-bordered">
                                                            <thead>
                                                                <tr>
                                                                    <td>Qualication</td>
                                                                    <td>University</td>
                                                                    <td>Precentage</td>
                                                                    <td>Year of Passing</td>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td>

                                                                        @{
                                       List<SelectListItem> equalication1 = new List<SelectListItem>();
                                       equalication1.Add(new SelectListItem
                                       {
                                           Text = "BA",
                                           Value = "1"
                                       });
                                       equalication1.Add(new SelectListItem
                                       {
                                           Text = "MA",
                                           Value = "2",

                                       });
                                       equalication1.Add(new SelectListItem
                                       {
                                           Text = "MPhil",
                                           Value = "3",

                                       });
                                       equalication1.Add(new SelectListItem
                                       {
                                           Text = "PHD",
                                           Value = "4",

                                       });
                                       equalication1.Add(new SelectListItem
                                       {
                                           Text = "Others",
                                           Value = "5",

                                       });
                                                                        }

                                                                        @Html.DropDownListFor(model => model.equalification1, equalication1, "-- Select Qualication --")
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity1, new { placeholder = "Enter University Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity1)

                                                                    </td>                                                                    
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.eprecentage1, new { placeholder = "Enter Precentage", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage1)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing1, new { placeholder = "Enter Year of Passing", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing1)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @{
                                       List<SelectListItem> equalication2 = new List<SelectListItem>();
                                       equalication2.Add(new SelectListItem
                                       {
                                           Text = "BA",
                                           Value = "1"
                                       });
                                       equalication2.Add(new SelectListItem
                                       {
                                           Text = "MA",
                                           Value = "2",

                                       });
                                       equalication2.Add(new SelectListItem
                                       {
                                           Text = "MPhil",
                                           Value = "3",

                                       });
                                       equalication2.Add(new SelectListItem
                                       {
                                           Text = "PHD",
                                           Value = "4",

                                       });
                                       equalication2.Add(new SelectListItem
                                       {
                                           Text = "Others",
                                           Value = "5",

                                       });
                                                                        }

                                                                        @Html.DropDownListFor(model => model.equalification2, equalication2, "-- Select Qualication --")
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity2, new { placeholder = "Enter University Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity2)

                                                                    </td>                                                                    
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.eprecentage2, new { placeholder = "Enter Precentage", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage2)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing2, new { placeholder = "Enter Year of Passing", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing2)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @{
                                       List<SelectListItem> equalication3 = new List<SelectListItem>();
                                       equalication3.Add(new SelectListItem
                                       {
                                           Text = "BA",
                                           Value = "1"
                                       });
                                       equalication3.Add(new SelectListItem
                                       {
                                           Text = "MA",
                                           Value = "2",

                                       });
                                       equalication3.Add(new SelectListItem
                                       {
                                           Text = "MPhil",
                                           Value = "3",

                                       });
                                       equalication3.Add(new SelectListItem
                                       {
                                           Text = "PHD",
                                           Value = "4",

                                       });
                                       equalication3.Add(new SelectListItem
                                       {
                                           Text = "Others",
                                           Value = "5",

                                       });
                                                                        }

                                                                        @Html.DropDownListFor(model => model.equalification3, equalication3, "-- Select Qualication --")
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity3, new { placeholder = "Enter University Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity3)

                                                                    </td>                                                                    
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.eprecentage3, new { placeholder = "Enter Precentage", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage3)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing3, new { placeholder = "Enter Year of Passing", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing3)
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>

                                                                        @{
                                       List<SelectListItem> equalication4 = new List<SelectListItem>();
                                       equalication4.Add(new SelectListItem
                                       {
                                           Text = "BA",
                                           Value = "1"
                                       });
                                       equalication4.Add(new SelectListItem
                                       {
                                           Text = "MA",
                                           Value = "2",

                                       });
                                       equalication4.Add(new SelectListItem
                                       {
                                           Text = "MPhil",
                                           Value = "3",

                                       });
                                       equalication4.Add(new SelectListItem
                                       {
                                           Text = "PHD",
                                           Value = "4",

                                       });
                                       equalication4.Add(new SelectListItem
                                       {
                                           Text = "Others",
                                           Value = "5",

                                       });
                                                                        }

                                                                        @Html.DropDownListFor(model => model.equalification4, equalication4, "-- Select Qualication --")
                                                                    </td>
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.euniversity4, new { placeholder = "Enter University Name", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.euniversity4)

                                                                    </td>                                                                    
                                                                    <td>

                                                                        @Html.TextBoxFor(model => model.eprecentage4, new { placeholder = "Enter Precentage", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eprecentage4)
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(model => model.eYearofpassing4, new { placeholder = "Enter Year of Passing", maxlength = "20", @class = "input" })
                                                                        @Html.ValidationMessageFor(model => model.eYearofpassing4)
                                                                    </td>
                                                                </tr>
                                                            </tbody>

                                                        </table>

                                                    </fieldset>
                                            <br />
                                            <fieldset class="test" style="width: 100%;">
                                             <legend>Medical Info</legend>
                                              <div class="control-group span5">
                                                            @Html.LabelFor(model => model.eweight, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.eweight, new { placeholder = "Enter Weight in Kg", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.eweight)
                                                            </div>
                                                        </div>
                                                         <div class="control-group span5">
                                                            @Html.LabelFor(model => model.eheight, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.eheight, new { placeholder = "Enter Height in Cms", maxlength = "3", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.eheight)
                                                            </div>
                                                        </div>
                                                         <div class="control-group span5">
                                                            @Html.LabelFor(model => model.emppic, new { @class = "control-label" })
                                                            <div class="controls" style="width:47%">
                                                                <input type="file" name="empfile" id="file" />
                                                                <div id="pic3">
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.emppic)
                                                            </div>
                                                        </div>
                                                         <div class="control-group span5">
                                                            @Html.LabelFor(model => model.eidtype, new { @class = "control-label" })
                                                            <div class="controls">
                                                            @{
                                       List<SelectListItem> DocumentType = new List<SelectListItem>();
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "Aadhar",
                                           Value = "1"
                                       });
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "Passport",
                                           Value = "2",

                                       });
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "DL",
                                           Value = "3",
                                           Selected = true
                                       });

                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "VoterID",
                                           Value = "4",
                                           Selected = true
                                       });
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "PAN",
                                           Value = "5",
                                           Selected = true
                                       });
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "Refugees",
                                           Value = "6",
                                           Selected = true
                                       });
                                       DocumentType.Add(new SelectListItem
                                       {
                                           Text = "Others",
                                           Value = "7",
                                           Selected = true
                                       });}
                                                            @Html.DropDownListFor(model => model.eidtype, DocumentType, "-- Select Document Type --")


                                                            </div>
                                                        </div> 
                                          </fieldset>
                                            <br />
                                            <fieldset class="test" style="width: 100%;">
                                                        <legend>Emergency Details</legend>
                                                         <div class="control-group span5">
                                                @Html.LabelFor(model => model.dname, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.dname, new { placeholder = "Enter Docter Name", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.dname)
                                            </div>
                                                 </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.dcontact, new { @class = "control-label" })
                                                            <div class="controls" style="width:25%">
                                                                @Html.TextBoxFor(model => model.DCode, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                                </div><div class="controls">
                                                                @Html.TextBoxFor(model => model.dcontact, new { placeholder = "Enter Docter Contact", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.dcontact)
                                                            </div>
                                                        </div>
                                                        <div class="control-group span5">
                                                            @Html.LabelFor(model => model.daddress, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.daddress, new { placeholder = "Enter Docter Address", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.daddress)
                                                            </div>
                                                        </div>
                                                    </fieldset> 
                                         
                                      </div>
                                      <div id="tabs-2">
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>Parent's Details or Spouse</legend>
                                            <div class="control-group span5">
                                                            @Html.LabelFor(model => model.relationship, new { @class = "control-label" })
                                                            <div style="margin-left: 45.5%">
                                                                <div class="pull-left">
                                                                    @{
                                       List<SelectListItem> rlistItems = new List<SelectListItem>();
                                       rlistItems.Add(new SelectListItem
                                       {
                                           Text = "Mother",
                                           Value = "1"
                                       });
                                       rlistItems.Add(new SelectListItem
                                       {
                                           Text = "Father",
                                           Value = "2",

                                       });
                                       rlistItems.Add(new SelectListItem
                                       {
                                           Text = "Spouse",
                                           Value = "3",
                                           Selected = true
                                       });
                                       rlistItems.Add(new SelectListItem
                                       {
                                           Text = "Guardian ",
                                           Value = "1"
                                       }); }
                                                                    @Html.DropDownListFor(model => model.relationship, rlistItems, "-- Select Relationship --")

                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.relationship)
                                                            </div>
                                                        </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.pname, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.pname, new { placeholder = "Enter Parent's Name", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.pname)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.poccupation, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.poccupation, new { placeholder = "Enter Parent's Occupation", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.poccupation)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.pqualification, new { @class = "control-label" })
                                          
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.pqualification, new { placeholder = "Enter Parent's Qualification" })
                                                @Html.ValidationMessageFor(model => model.pqualification)
                                            </div>
                                                      </div>  
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.pemail, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.pemail, new { placeholder = "Enter Parent's Email Address" })
                                                @Html.ValidationMessageFor(model => model.pemail)
                                            </div>
                                                </div> 
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.pofficeaddress, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextAreaFor(model => model.pofficeaddress, new { placeholder = "Enter Parent's Office Address" })
                                                @Html.ValidationMessageFor(model => model.pofficeaddress)
                                            </div>
                                                </div> 
                                            <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pcontact, new { @class = "control-label" })
                                                            <div class="controls" style="width:25%">
                                                                @Html.TextBoxFor(model => model.PCODE, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                                </div><div class="controls">
                                                                @Html.TextBoxFor(model => model.pcontact, new { placeholder = "Enter Parent's Contact", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.pcontact)
                                                            </div>
                                                        </div> 
                                            <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ppic, new { @class = "control-label" })
                                                            <div class="controls" style="width:47%">
                                                                <input type="file" name="files3" id="pfile" />
                                                                <div id="ppic3">
                                                                </div>
                                                                @Html.ValidationMessageFor(model => model.ppic)
                                                            </div>
                                                        </div>         
                                                        </fieldset>
                                          <br />
                                          <fieldset class="test" style="width: 100%;">
                                             <legend>Permanant Address</legend>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pastreet, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.pastreet, new { placeholder = "Enter Street", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.pastreet)
                                                            </div>
                                                        </div> 
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pacity, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.pacity, new SelectList("Select City"), "Select City")
                                                                @Html.ValidationMessageFor(model => model.pacity)
                                                            </div>
                                                        </div>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pastate, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.pastate, new SelectList("Select State"), "Select State")
                                                                @Html.ValidationMessageFor(model => model.pastate)
                                                            </div>
                                                        </div>
                                              <div class="control-group span5">
                                                            @Html.LabelFor(model => model.pacountry, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.pacountry, new SelectList("Select Country"), "Select Country")
                                                                @Html.ValidationMessageFor(model => model.pacountry)
                                                            </div>
                                                        </div>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.papin, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.papin, new { placeholder = "Enter Pincode", maxlength = "6", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.papin)
                                                            </div>
                                                        </div>
                                              </fieldset>
                                          <br />
                                          <fieldset class="test" style="width: 100%;">
                                             <legend>Current Address</legend>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cstreet, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextAreaFor(model => model.cstreet, new { placeholder = "Enter Street", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.cstreet)
                                                            </div>
                                                        </div> 
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ccity, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.ccity, new SelectList("Select City"), "Select City")
                                                                @Html.ValidationMessageFor(model => model.ccity)
                                                            </div>
                                                        </div>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cstate, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.cstate, new SelectList("Select State"), "Select State")
                                                                @Html.ValidationMessageFor(model => model.cstate)
                                                            </div>
                                                        </div>
                                              <div class="control-group span5">
                                                            @Html.LabelFor(model => model.ccountry, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.ccountry, new SelectList("Select Country"), "Select Country")
                                                                @Html.ValidationMessageFor(model => model.ccountry)
                                                            </div>
                                                        </div>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.cpin, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.TextBoxFor(model => model.cpin, new { placeholder = "Enter Pincode", maxlength = "6", @class = "input" })
                                                                @Html.ValidationMessageFor(model => model.cpin)
                                                            </div>
                                                        </div>
                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.phome, new { @class = "control-label" })
                                                            <div class="controls" style="width:25%">
                                                                @Html.TextBoxFor(model => model.PHCODE, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                                </div><div class="controls">
                                                                @Html.TextBoxFor(model => model.phome, new { placeholder = "Enter Home Phone Number", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.phome)
                                                            </div>
                                                        </div> 

                                               <div class="control-group span5">
                                                            @Html.LabelFor(model => model.hmobile, new { @class = "control-label" })
                                                            <div class="controls" style="width:25%">
                                                                @Html.TextBoxFor(model => model.MCODE, new { placeholder = "Code", maxlength = "4", @class = "input-small", @Style = "width:86.5%" })
                                                                </div><div class="controls">
                                                                @Html.TextBoxFor(model => model.hmobile, new { placeholder = "Enter Mobile Number", maxlength = "10" })
                                                                @Html.ValidationMessageFor(model => model.hmobile)
                                                            </div>
                                                        </div> 

                                              </fieldset>
                                          <br />
                                          <fieldset class="test" style="width: 100%;">
                                             <legend>Bank Details</legend>
                                              <div class="control-group span5">
                                                @Html.LabelFor(model => model.bankname, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.bankname, new { placeholder = "Enter Bank Name", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.bankname)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.branch, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.branch, new { placeholder = "Enter Branch Name", maxlength = "20", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.branch)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.ifsccode, new { @class = "control-label" })
                                          
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.ifsccode, new { placeholder = "Enter IFSC Code" })
                                                @Html.ValidationMessageFor(model => model.ifsccode)
                                            </div>
                                                      </div>  
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.accountno, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.accountno, new { placeholder = "Enter Account Number" })
                                                @Html.ValidationMessageFor(model => model.accountno)
                                            </div>
                                                </div> 
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.acname, new { @class = "control-label" })
                                              <div  class="controls">
                                                @Html.TextAreaFor(model => model.acname, new { placeholder = "Enter Name on the Account" })
                                                @Html.ValidationMessageFor(model => model.acname)
                                            </div>
                                                </div> 
                                              </fieldset>
                                          </div>
                                      <div id="tabs-3">
                                                    <fieldset class="test" style="width: 100%;">
                                                        <legend>College/Corporate</legend>
                                                         <div class="control-group span5">
                                                @Html.LabelFor(model => model.collagename, new { @class = "control-label", @for = "focusedInput" })
                                           
                                             <div class="controls">
                                                @Html.TextBoxFor(model => model.collagename, new { placeholder = "Enter College Name", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.collagename)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.university, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.university, new { placeholder = "Affliated to which University", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.university)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.joiningdate, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.joiningdate, new { @class = "datepicker", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                @Html.ValidationMessageFor(model => model.joiningdate)
                                            </div>
                                                 </div>
                                                         <div class="control-group span5">
                                                @Html.LabelFor(model => model.lastdate, new { @class = "control-label" })
                                           
                                             <div class="controls">
                                                @Html.TextBoxFor(model => model.lastdate, new { @class = "datepicker", @readonly = "readonly", placeholder = "Select Last Date" })
                                                @Html.ValidationMessageFor(model => model.lastdate)
                                            </div>
                                                 </div>
                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.ctotal, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.ctotal, new { @readonly = "readonly", placeholder = "Select Last Date" })
                                                @Html.ValidationMessageFor(model => model.ctotal)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.ldesignation, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.ldesignation, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.ldesignation)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.companyname, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.companyname, new { placeholder = "Enter Company Name", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.companyname)
                                            </div>
                                                 </div>
                                                         <div class="control-group span5">
                                                @Html.LabelFor(model => model.clastdesignation, new { @class = "control-label" })
                                           
                                             <div class="controls">
                                                @Html.TextBoxFor(model => model.clastdesignation, new { placeholder = "Enter Last Designation", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.clastdesignation)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.cjoiningdate, new { @class = "control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.cjoiningdate, new { @class = "datepicker", @readonly = "readonly", placeholder = "Select Date of Joining" })
                                                @Html.ValidationMessageFor(model => model.cjoiningdate)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.clastdate, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.clastdate, new { @class = "datepicker", @readonly = "readonly", placeholder = "Select Last Date" })
                                                @Html.ValidationMessageFor(model => model.clastdate)
                                            </div>
                                                 </div>
                                               <div class="control-group span5">
                                                @Html.LabelFor(model => model.total, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.total, new { @readonly = "readonly", placeholder = "Select Last Date" })
                                                @Html.ValidationMessageFor(model => model.total)
                                            </div>
                                                 </div>

                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.employeeemail, new { @class = "control-label" })
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.employeeemail, new { placeholder = "Enter Email Address", maxlength = "30", @class = "input" })
                                                @Html.ValidationMessageFor(model => model.employeeemail)
                                            </div>
                                                 </div>
                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.empreligion, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> religion = new List<SelectListItem>();
                                       religion.Add(new SelectListItem
                                       {
                                           Text = "Roman Carholic",
                                           Value = "1"
                                       });
                                       religion.Add(new SelectListItem
                                       {
                                           Text = "Christian",
                                           Value = "2",

                                       });
                                       religion.Add(new SelectListItem
                                       {
                                           Text = "Muslim",
                                           Value = "3",
                                       });
                                       religion.Add(new SelectListItem
                                       {
                                           Text = "Hindu",
                                           Value = "4",

                                       });
                                       religion.Add(new SelectListItem
                                       {
                                           Text = "Jain",
                                           Value = "5",
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.empreligion, religion, "-- Select Religion --")                                               
                                                @Html.ValidationMessageFor(model => model.empreligion)
                                                      </div>
                                            </div> 
                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.empcategory, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> category = new List<SelectListItem>();
                                       category.Add(new SelectListItem
                                       {
                                           Text = "SC",
                                           Value = "1"
                                       });
                                       category.Add(new SelectListItem
                                       {
                                           Text = "ST",
                                           Value = "2",

                                       });
                                       category.Add(new SelectListItem
                                       {
                                           Text = "Other",
                                           Value = "3",
                                       });}                                               
                                     @Html.DropDownListFor(model => model.empcategory, category, "-- Select Category --")                                               
                                                @Html.ValidationMessageFor(model => model.empcategory)
                                                      </div>
                                            </div> 
                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.empcast, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> cast = new List<SelectListItem>();
                                       cast.Add(new SelectListItem
                                       {
                                           Text = "Nadar",
                                           Value = "1"
                                       });
                                       cast.Add(new SelectListItem
                                       {
                                           Text = "Bramin",
                                           Value = "2",

                                       });
                                       cast.Add(new SelectListItem
                                       {
                                           Text = "Other",
                                           Value = "3",
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.empcast, cast, "-- Select Caste --")                                               
                                                @Html.ValidationMessageFor(model => model.empcast)
                                                      </div>
                                            </div> 
                                                        <div class="control-group span5">
                                                @Html.LabelFor(model => model.mtongue, new { @class = "control-label" })
                                              <div  class="controls">
                                                  @{
                                       List<SelectListItem> tongue = new List<SelectListItem>();
                                       tongue.Add(new SelectListItem
                                       {
                                           Text = "Tamil",
                                           Value = "1"
                                       });
                                       tongue.Add(new SelectListItem
                                       {
                                           Text = "English",
                                           Value = "2",

                                       });
                                       tongue.Add(new SelectListItem
                                       {
                                           Text = "Malayalam",
                                           Value = "3",
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.mtongue, tongue, "-- Select Tongue --")                                               
                                                @Html.ValidationMessageFor(model => model.mtongue)
                                                      </div>
                                            </div> 
                                       
                                                         </fieldset> 

                                          <div class="form-actions">
                                        <input type="submit" class="btn btn-primary" id="insert" value="Submit" />
                                        <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                    </div>
                                          <br />           
                                          </div>
                                    
                                        
                                        
                                   }
                                          </div>
                                          </div>
                                  </fieldset>
                                </div>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                        @Html.Partial("_EmpList")
                           </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>
