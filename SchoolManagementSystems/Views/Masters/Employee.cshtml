@model Entity.employeeviewmodel
@{
    ViewBag.Title = "Employee Master";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();
        FillType();
        function FillType() {
            var item = '<option value="">select Type</option>';
            item += '<option value="4">Teacher</option>';
            item += '<option value="5">Employee</option>';
            $("#Typeid").append(item);
        }
        $("#lblmsg").text('');
        $('#empid input').attr("readonly", true);
        if ($("#empid input").val() == "0") {
            $("#empid").hide();
        }

        $("#result").on("click", ".edit", function (evt) {
            var Empid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillEmpDetails")',
                dataType: 'JSON',
                data: { Empid: Empid },
                success: function (data) {
                    clearmsg();
                    $("#empid").show();
                    $("#empid input").val(data.Empid);
                    $("#FirstName").val(data.FirstName);
                    $("#MiddleName").val(data.MiddleName);
                    $("#LastName").val(data.LastName);
                    var value = new Date(parseInt(data.DOB.substr(6)));
                    $('#datepicker').datepicker('setDate', value);
                    $('#datepicker').focus();
                    if (data.DateOfJoin != null) {
                        var value1 = new Date(parseInt(data.DateOfJoin.substr(6)));
                        $('#datepicker1').datepicker('setDate', value1);
                    }
                    else {
                        $('#datepicker1').datepicker('setDate', new Date());
                    }

                    $("#Emailid").val(data.Emailid);
                    $("#Gender").val(data.Gender);
                    $("#Quallification").val(data.Quallification);
                    $("#OQualification").val(data.OtherQualification);
                    $("#Address").val(data.Address);
                    $("#PhoneNo").val(data.PhoneNo);
                    $("#MobileNo").val(data.MobileNo);
                    $("#Code").val(data.Code);
                    $("#Typeid").val(data.Typeid)
                    $("#Zipcode").val(data.Zipcode)
                    $("#Stateid").val(data.Stateid);
                    $("#Cityid").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: data.Stateid },
                        success: function (cities) {
                            if (cities != "") {
                                var item = '<option value="0">Select city</option>';
                                $.each(cities, function (i, city) {
                                    item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                                });
                                $("#Cityid").append(item);
                                $("#Cityid").val(data.Cityid);
                            }
                            else {
                                var item = '<option value="">Select city</option>';
                                $("#Cityid").append(item);
                            }
                        },
                        error: function (ex) {
                            alert('Failed to retrieve cities.' + ex);
                        }
                    });
                }
            });
        });
        $('#datepicker').attr("readonly", true);

        $('#datepicker').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker1').attr("readonly", true);

        $('#datepicker1').datepicker({
            inline: true,
            showOtherMonths: true,
            showOtherYears: true,
            dayNamesMin: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
            dateFormat: 'dd/mm/yy',
            changeMonth: true,
            yearRange: "-100:+0",
            changeYear: true
        });

        $('#datepicker').datepicker('setDate', new Date());
        $('#datepicker1').datepicker('setDate', new Date());
        $('#datepicker').focus();

        $("#insert").click(function (e) {
            Validations(e);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DMLEmp")',
                data: $('#frm').serialize() + "&evt=submit&id=0",
                success: function (result) {
                    $("#msgs").show();
                    $("#lblmsgs").text("Employee Info updated successfully!..");
                    $("#lblmsgs").css({ "color": "green" });
                    $("#lblmsgs").css({ "font-size": "15px" });
                    $("#result").html(result);
                    clear();
                    ReloadPaging();
                }
            });
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

        $("#result").on("click", ".delete", function (evt) {
            var Cityid = this.id;
            var flag = confirm('Are you sure you want to delete this Employee?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLEmp")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Cityid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Employee deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function clear() {
            $("#empid").hide();
            $('#empid input').val('0');
            $("#FirstName").val('');
            $("#MiddleName").val('');
            $("#LastName").val('');
            $("#Stateid").val('');
            $("#Cityid").val('0');
            $("#Zipcode").val('');
            $("#Emailid").val('');
            $("#PhoneNo").val('');
            $("#MobileNo").val('');
            $("#Code").val('');
            $("#Address").val('');
            $("#Quallification").val('');
            $("#OQualification").val('');
            $("#Typeid").val('');
            $('#datepicker').datepicker('setDate', new Date());
            $('#datepicker1').datepicker('setDate', new Date());
        }

        function Validations(e) {
            var cnt = 0;
            if ($("#FirstName").val() == '') {
                cnt++;
                $("#FirstName").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#FirstName").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#MiddleName").val() == '') {
                cnt++;
                $("#MiddleName").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#MiddleName").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#LastName").val() == '') {
                cnt++;
                $("#LastName").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#LastName").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#datepicker").val() == '') {
                cnt++;
                $("#datepicker").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#datepicker").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#datepicker1").val() == '') {
                cnt++;
                $("#datepicker1").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#datepicker1").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Emailid").val() == '') {
                cnt++;
                $("#Emailid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Emailid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Quallification").val() == '') {
                cnt++;
                $("#Quallification").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Quallification").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Address").val() == '') {
                cnt++;
                $("#Address").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Address").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Zipcode").val() == '') {
                cnt++;
                $("#Zipcode").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Zipcode").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#PhoneNo").val() == '') {
                cnt++;
                $("#PhoneNo").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#PhoneNo").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#MobileNo").val() == '') {
                cnt++;
                $("#MobileNo").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#MobileNo").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Code").val() == '') {
                cnt++;
                $("#Code").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Code").css({
                    "border": "",
                    "background": ""
                });
            }


            if ($("#Stateid").val() == '' || $("#Stateid").val() == '0') {
                cnt++;
                $("#Stateid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Stateid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Cityid").val() == '' || $("#Cityid").val() == '0') {
                cnt++;
                $("#Cityid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Cityid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Typeid").val() == '' || $("#Typeid").val() == '0') {
                cnt++;
                $("#Typeid").css({
                    "border": "1px solid red"
                });
            }
            else {
                $("#Typeid").css({
                    "border": "",
                    "background": ""
                });
            }


            if (cnt != 0) {
                e.preventDefault();
            }
        }

        $("#Stateid").change(function () {
            $("#Cityid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCities")',
                dataType: 'json',
                data: { id: $("#Stateid").val() },
                success: function (cities) {
                    if (cities != "") {
                        var item = '<option value="0">select City</option>';
                        $.each(cities, function (i, city) {
                            item += '<option value="' + city.Value + '">' + city.Text + '</option>';
                        });
                        $("#Cityid").append(item);
                    }
                    else {
                        var item = '<option value="0">select City</option>';
                        $("#Cityid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve cities.' + ex);
                }
            });
            return false;
        })

        $('#Emailid').change(function () {
            $("#lblmsg").text("");
            var Emailid = $('#Emailid').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_Emp")',
                dataType: 'JSON',
                data: { Emailid: Emailid },
                success: function (data) {
                    if (data.Emailid != null) {
                        alert("Emailid Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#Emailid').val('');
                        return false;
                    }
                }
            });
        });

        $("#PhoneNo").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Zipcode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#MobileNo").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        $("#Code").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                $("#errmsg").html("Digits Only").show().fadeOut("slow");
                return false;
            }
        });

        function ValidateEmail(email) {
            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            return expr.test(email);
        };

        $('#Emailid').blur(function () {
            if (!ValidateEmail($("#Emailid").val())) {
                $("#Emailid").css({
                    "border": "1px solid red"
                });
                $('#Emailid').val('');
                alert("Email address is invalid!..");
                return false;
            }
            else {
                $("#Emailid").css({
                    "border": "",
                    "background": ""
                });
            }
        });

        ReloadPaging();
    });
</script>
<style type="text/css">
    .ui-datepicker-calendar {
        background-color: antiquewhite;
    }

    .ui-datepicker-title {
        background-color: antiquewhite;
    }

    .ui-icon ui-icon-circle-triangle-w {
        background-color: antiquewhite;
    }
</style>@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">
             
		<div class="row-fluid">
             @Html.Partial("_MasterSubMenu")
	<div id="content" class="span10">
        	<div class="row-fluid">
     
            <ul class="breadcrumb">
               <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                @Html.ActionLink("Masters", "Employee", "Masters", "")<i class="icon-angle-right"></i></li>
                <li class="active">Employee Master</li>
              @*  <div style="float:right; ">
                    @using (Html.BeginForm())
                    {

                        @Html.TextBox("Search_Data", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Find" />
                    }
                </div>*@
            </ul>
                 <div class="panel-body"> 
<div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
	<strong><label id="lblmsg"></label></strong> 
	</div>
  <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
	<strong><label id="lblmsgs"></label></strong> 
</div>
</div>

           <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<div id="AddForm" class="form-horizontal">
                              
						
                                  <fieldset>
                                   @using (Html.BeginForm("DMLEmp", "Masters", FormMethod.Post, new { enctype = "multipart/form-data", id = "frm", @class = "form-horizontal" }))
                                   { 
                                        @Html.ValidationSummary(true)
                                        var fromdt = Convert.ToString(System.DateTime.Now.Year);
                                        var todt = Convert.ToString(System.DateTime.Now.AddYears(1).Year);
                                        var session = Convert.ToString(fromdt + "-" + todt);
                                     
                                  
                                          
                                                <div id="empid" class="control-group span5 ">
                                                    @Html.LabelFor(model => model.Empid, new { @class="control-label", @for="focusedInput" })
                                              
                                                <div class="controls">
                                                    @Html.TextBoxFor(model => model.Empid, new { placeholder = "Enter Employee ID",  @class="input" })
                                                    @Html.ValidationMessageFor(model => model.Empid)
                                                </div>
                                                      </div>
                                           
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.FirstName, new { @class="control-label", @for="focusedInput"})
                                           
                                             <div class="controls">
                                                @Html.TextBoxFor(model => model.FirstName, new { placeholder = "Enter First Name", maxlength = "20",  @class="input"  })
                                                @Html.ValidationMessageFor(model => model.FirstName)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.MiddleName, new { @class="control-label" })
                                           
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.MiddleName, new { placeholder = "Enter Middle Name", maxlength = "20", @class="input" })
                                                @Html.ValidationMessageFor(model => model.MiddleName)
                                            </div>
                                                 </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.LastName, new { @class="control-label"})
                                           
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.LastName, new { placeholder = "Enter Last Name", maxlength = "20", @class="input" })
                                                @Html.ValidationMessageFor(model => model.LastName)
                                            </div>
                                                 </div>
                                                <div class="control-group span5">
                                                @Html.LabelFor(model => model.DOB, new {  @class="control-label" })
                                          
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.DOB, new { id = "datepicker", placeholder = "Select Date of birth" })
                                                @Html.ValidationMessageFor(model => model.DOB)
                                            </div>
                                                      </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Stateid, new {  @class="control-label" })
                                        
                                            <div  class="controls">
                                                @Html.DropDownListFor(m => m.Stateid, new SelectList(Model.statelist, "Stateid", "StateName", "Select State"), "Select state")
                                                @Html.ValidationMessageFor(model => model.Stateid)
                                            </div>
                                                    </div>
                                           <div class="control-group span5">
                                                @Html.LabelFor(model => model.Cityid, new {@class="control-label" })
                                             <div  class="controls">
                                                @Html.DropDownListFor(m => m.Cityid, new SelectList(Model.citylist, "Cityid", "CityName", "Select City"), "Select city")
                                                @Html.ValidationMessageFor(model => model.Cityid)
                                            </div>
                                               </div>
                                               <div class="control-group span5">
                                                @Html.LabelFor(model => model.Zipcode, new {@class="control-label" })
                                           
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.Zipcode, new { placeholder = "Enter Zipcode", maxlength = "6",@class="input" })
                                                @Html.ValidationMessageFor(model => model.Zipcode)
                                            </div>
                                                    </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Emailid, new { @class="control-label" })
                                            <div  class="controls">
                                                @Html.TextBoxFor(model => model.Emailid, new { placeholder = "Enter Email", maxlength = "30", @class="input" })
                                                @Html.ValidationMessageFor(model => model.Emailid)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.PhoneNo, new { @class="control-label" })
                                             <div  class="controls">
                                                @Html.TextBoxFor(model => model.PhoneNo, new { placeholder = "Enter Phone Number", maxlength = "12", @class="input" })
                                                @Html.ValidationMessageFor(model => model.PhoneNo)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.MobileNo, new { @class="control-label" })
                                           <div  class="controls">
                                                @Html.TextBoxFor(model => model.Code, new { placeholder = "Code", maxlength = "4",@class="input-small" })
                                                @Html.TextBoxFor(model => model.MobileNo, new { placeholder = "Mobile Number", maxlength = "10", @class="input" })
                                                @Html.ValidationMessageFor(model => model.MobileNo)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Address, new { @class="control-label" })
                                              <div  class="controls">
                                                @Html.TextAreaFor(model => model.Address, new { placeholder = "Enter Address",@class="input" })
                                                @Html.ValidationMessageFor(model => model.Address)
                                            </div>
                                                </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.Gender, new { @class="control-label" })
                                              <div  class="controls">
                                                  @{
                                   List<SelectListItem> listItems= new List<SelectListItem>();
                                      listItems.Add(new SelectListItem
                                                     {
                                              Text = "Male",
                                              Value = "1"
                                            });
                                       listItems.Add(new SelectListItem
                                            {
                                                Text = "Female",
                                                Value = "2",
                                               
                                            });
                                       listItems.Add(new SelectListItem
                                       {
                                           Text = "Unknown",
                                           Value = "3",
                                           Selected = true
                                       }); }                                               
                                     @Html.DropDownListFor(model => model.Gender, listItems, "-- Select Gender --")
                                                
                                               
                                                @*    @Html.RadioButtonFor(model => model.SelectGender,Model.Gender,Model.Gender.  new { id = "male" })
                                                    Male*@
                                             
                                                 @*   @Html.RadioButtonFor(model => model.SelectGender, Model.Gender, new { id = "female" }) FeMale*@
                                                
                                                @Html.ValidationMessageFor(model => model.Gender)
                                                      </div>
                                            </div>
                                                
                                              <div class="control-group span5">
                                                @Html.LabelFor(model => model.Quallification, new { @class="control-label" })
                                             <div  class="controls">
                                                @Html.DropDownListFor(m => m.Quallification, new SelectList(Model.qualificationlist, "qualificationid", "qualificationnm", "Select Qualification"), "Select Qualification")
                                                @Html.ValidationMessageFor(model => model.Quallification)
                                            </div>
                                                  </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.DateOfJoin, new { @class="control-label"})
                                              <div  class="controls">
                                                @Html.TextBoxFor(model => model.DateOfJoin, new { id = "datepicker1", placeholder = "Select Joining Date"})
                                                @Html.ValidationMessageFor(model => model.DateOfJoin)
                                            </div>
                                                </div>
                                               <div class="control-group span5">
                                                @Html.LabelFor(model => model.Typeid, new { @class="control-label" })
                                               <div  class="controls">
                                                <select id="Typeid"  name="Typeid" class="input"></select>
                                                @Html.ValidationMessageFor(model => model.Typeid)
                                            </div>
                                                   </div>
                                            <div class="control-group span5">
                                                @Html.LabelFor(model => model.OQualification, new { @class="control-label" })
                                             <div  class="controls">
                                                @Html.TextAreaFor(model => model.OQualification, new {@class="input" })
                                                @Html.ValidationMessageFor(model => model.OQualification)
                                            </div>
                                                </div>
                                         
                                           <div class="form-actions span10">
                                                <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                                <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                            </div>
                                      
                                    }
                          </fieldset>
                                </div>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header" data-original-title>
						<h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                        @Html.Partial("_EmpList")
                           </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>
