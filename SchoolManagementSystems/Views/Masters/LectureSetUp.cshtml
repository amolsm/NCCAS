@model Entity.LectureTimeSetviewmodel
@{
    ViewBag.Title = "LectureSetUp";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/css/bootstrap-timepicker.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-timepicker/0.5.2/js/bootstrap-timepicker.min.js"></script>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css" rel="stylesheet">
<script src="../../Scripts/jquery-ui.js" type="text/javascript"></script>
<style>
    .box-header {
        height: 16px;
        font-size: 16px;
        line-height: 16px;
        padding: 20px;
        background: #797a7d;
        -webkit-box-shadow: none;
        -moz-box-shadow: none;
        box-shadow: none;
        overflow: hidden;
    }

        .box-header h2 {
            float: left;
            margin-top: -7px;
            font-weight: 300;
        }

    .add-on, select, textarea, input[type="text"], input[type="password"], input[type="datetime"], input[type="datetime-local"], input[type="date"], input[type="month"], input[type="time"], input[type="week"], input[type="number"], input[type="email"], input[type="url"], input[type="search"], input[type="tel"], input[type="color"], input[type="file"], .uneditable-input {
        border-color: #b7abab !important;
        display: inline-block;
        height: 30px;
        padding: 4px 6px;
        margin-bottom: 10px;
        font-size: 14px;
        line-height: 20px;
        color: #555555;
        vertical-align: middle;
        -webkit-border-radius: 0px;
        -moz-border-radius: 0px;
        border-radius: 0px;
    }

    .bootstrap-timepicker-widget table td input {
        width: 35px;
        margin: 0;
        text-align: center;
    }
</style>
<script type="text/javascript">
   
    $(document).ready(function () {
        FillPermission();
        $("#timepicker1").val('');
        $("#timepicker2").val('');
        $("#status").prop('checked', true);
        $("#lblmsg").text('');
        $('#LecTimeIddiv input').attr("readonly", true);
        if ($("#LecTimeIddiv input").val() == "0") {
            $("#LecTimeIddiv").hide();
        }

        $("#result").on("click", ".edit", function (evt) {

            var LecTimeid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillLectureSetUp")',
                dataType: 'JSON',
                data: { LecTimeid: LecTimeid },
                success: function (data) {
                    clearmsg();
                    $("#LecTimeIddiv").show();
                    $("#LecTimeIddiv input").val(data.LecTimeid);
                    $("#LecNo").val(data.LecNo);
                    $("#timepicker1").val(data.LecTime);
                    $("#timepicker2").val(data.LectETime);
                    $("#status").prop('checked', data.Status);

                }
            });
        });

        function clear() {
            $("#LecTimeIddiv").hide();
            $('#LecTimeIddiv input').val('0');
            $("#LecNo").val('0');
            $("#timepicker1").val('');
            $("#timepicker2").val('');
          
        }
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }

        $('#LecNo').blur(function () {
            var LecNo = $('#LecNo').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_LectureSetUp")',
                dataType: 'JSON',
                data: { LecNo: LecNo },
                success: function (data) {
                    if (data.LecNo != null) {
                        $("#msg").show();
                        $("#lblmsg").text("Lecture Number Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#LecNo').val('');
                        return false;
                    }
                }
            });
        });

        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLLectureSetUp")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("Lecture SetUp updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });

    
           
       

    function validations() {
        var cnt = 0;

        if ($("#LecNo").val() == ''||$("#LecNo").val() == '0') {
            cnt++;
            $("#LecNo").css({
                "border": "2px solid red"
            });
        }
        else {
            $("#LecNo").css({
                "border": "",
                "background": ""
            });
        }

        if (cnt != 0)
            e.preventDefault();
    }

    

    });
</script>
@Html.HiddenFor(m => m.LecTimeId)@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_MasterSubMenu")
        <div id="content" class="span10">
            <div class="row-fluid">

                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Masters", "LectureSetUp", "Masters", "")<i class="icon-angle-right"></i>
                    <li class="active">Lecture Time SetUp Master</li>
                   
                </ul>
                <div class="panel-body">
                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        <strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <form id="frm" class="form-horizontal">


                                <fieldset>

                                    @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                    {
                                        @Html.ValidationSummary(true)

                                        <div id="LecTimeIddiv" class="control-group">
                                            @Html.LabelFor(model => model.LecTimeId, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.LecTimeId, new {  @id = "focusedInput", @type = "number" })
                                                @Html.ValidationMessageFor(model => model.LecTimeId)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.LecNo, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.LecNo, new {  @id = "focusedInput", @type = "number" })
                                                @Html.ValidationMessageFor(model => model.LecNo)
                                            </div>
                                        </div>
                                        <div>
                                            @Html.LabelFor(model => model.LecTime, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.LecTime, new { id = "timepicker1", @readonly = "readonly", placeholder = "Select Start Time" })
                                                @Html.HiddenFor(model => model.LecTime)
                                            </div>
                                        </div>
                                        <div>
                                            @Html.LabelFor(model => model.LecETime, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.TextBoxFor(model => model.LecETime, new { id = "timepicker2", @readonly = "readonly",  placeholder = "Select End Time" })
                                                @Html.HiddenFor(model => model.LecETime)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.status, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.CheckBoxFor(model => model.status, new { @type = "checkbox", @id = "status" })
                                                @Html.ValidationMessageFor(model => model.status)
                                            </div>
                                        </div>

                                        <div class="form-actions">
                                            <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                            <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                        </div>
                                    }
                                </fieldset>
                            </form>

                        </div>
                    </div><!--/span-->

                </div><!--/row-->
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <form class="form-horizontal">
                                <fieldset>
                                    <div class="control-group">
                                        @Html.Partial("_LectureSetUplist")
                                    </div>
                                </fieldset>
                            </form>
                        </div>


                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
     $('#timepicker1').timepicker();
     $('#timepicker2').timepicker();
</script>