@model Entity.contentviewmodel
@{
    ViewBag.Title = "Content Master";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();

        $('#status').attr('checked', true);
        $("#lblmsg").text('');
        $('#Contentid input').attr("readonly", true);
        if ($("#contentid").val() == "0") {
            $("#Contentid").hide();
        }

        $("#Classid").change(function () {
            $("#department").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartment")',
                dataType: 'json',
                data: { id: $("#Classid").val() },
                success: function (DClass) {
                    if (DClass != "") {
                        var item = '<option value="0">Select Class</option>';
                        $.each(DClass, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#department").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Class</option>';
                        $("#department").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Class.' + ex);
                }
            });
                  return false;
              })
        $("#department").change(function () {
            $("#year").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetYearClass")',
                dataType: 'json',
                data: { depid: $("#department").val(), cid: $("#Classid").val() },
                success: function (yeardata) {
                    if (yeardata != "") {
                        var item = '<option value="0">Select Year</option>';
                        $.each(yeardata, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#year").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Year</option>';
                        $("#year").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Year.' + ex);
                }
            });
            return false;
        });
        $("#year").change(function () {
            $("#subjectid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetSubject")',
                dataType: 'json',
                data: { id: $("#Classid").val(), year: $("#year").val() },
                success: function (subject) {
                    if (subject != "") {
                        var item = '<option value="0">Select Subject</option>';
                        $.each(subject, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#subjectid").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Subject</option>';
                        $("#subjectid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Subject.' + ex);
                }
            });
            return false;
        })

        $("#subjectid").change(function () {
            $("#chapterid").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetChapter")',
                dataType: 'json',
                data: { year: $("#year").val(), dept: $("#department").val(), subject: $("#subjectid").val(), courseid: $("#Classid").val() },
                success: function (chapter) {
                    if (chapter != "") {
                        var item = '<option value="0">Select Chapter</option>';
                        $.each(chapter, function (i, dclass) {
                            item += '<option value="' + dclass.Value + '">' + dclass.Text + '</option>';
                        });
                        $("#chapterid").append(item);
                    }
                    else {
                        var item = '<option value="0">Select Chapter</option>';
                        $("#chapterid").append(item);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve Chapter.' + ex);
                }
            });
            return false;
        })

        $("#result").on("click", ".btn_edit", function (evt) {
         
            var contentid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillContentDetails")',
                dataType: 'JSON',
                data: { contentid: contentid },
                success: function (data) {
                    clearmsg();
                   
                    $("#Contentid").show();
                    $('#Contentid input').val(data.Content_id);
                    $("#contentname").val(data.Content_Name);
                    $("#status").prop('checked', data.Status);
                    $('#cdescription').val(data.Content_Description);
                    $("#chapterid").val(data.Chapter_id);
                    
                }
            });
        });

        function clear() {
            $("#Contentid").hide();
            $('#Contentid input').val('0');
            $("#contentname").val('');
            $('#cdescription').val('');
            $("#chapterid").val('');
        }

        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }


        $('#contentname').blur(function () {
            var routename = $('#contentname').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_content")',
                dataType: 'JSON',
                data: { routename: routename },
                success: function (data) {
                    if (data.routename != null) {
                        $("#msg").show();
                        $("#lblmsg").text("Content Name Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#contentrname').val('');
                        return false;
                    }
                }
            });
        });

        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLContent")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("Content updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });

        $("#result").on("click", ".btn_delete", function (evt) {
            var routeid = this.id;
            var flag = confirm('Are you sure you want to delete this Content?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLContent")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + chapterid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("Content deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#contentname").val() == '') {
                cnt++;
                $("#contentrname").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#contentname").css({
                    "border": "",
                    "background": ""
                });
            }
            if (cnt != 0)
                e.preventDefault();
        }

        ReloadPaging();
    });
</script>
@Html.HiddenFor(m => m.contentid)
@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">
             
		<div class="row-fluid">
             @Html.Partial("_MasterSubMenu")
	<div id="content" class="span10">
        	<div class="row-fluid">
      
            <ul class="breadcrumb">
                <li><i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                @Html.ActionLink("Masters", "Content", "Masters", "")<i class="icon-angle-right"></i></li>
                <li class="active">Content Master</li>
            </ul>
                 <div class="panel-body"> 
<div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
	<strong><label id="lblmsg"></label></strong> 
	</div>
  <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
	<strong><label id="lblmsgs"></label></strong> 
</div>
</div>
           <div class="row-fluid sortable">
              <div class="box span12">
					<div class="box-header">
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div>
                               		<div class="box-content">
						<form id="frm" class="form-horizontal">
                              
						
                                  <fieldset>
                                @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                {
                                    @Html.ValidationSummary(true)
                                  
                                    <div id="Contentid" class="control-group span5" style="margin-left: 2.5%;">
                                        @Html.LabelFor(model => model.contentid, new {  @class="control-label", @for="focusedInput"  })
                                         <div class="controls">
                                        @Html.EditorFor(model => model.contentid, new {  @class="input-xlarge focused"  })
                                        @Html.ValidationMessageFor(model => model.contentid)
                                             </div>
                                    </div>
                                     <div class="control-group span5">
                                                    @Html.LabelFor(model => model.Classid, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.Classid, new SelectList(Model.Classlist, "Courseid", "CourseName", "Select Course"), "Select Course")
                                                    @Html.ValidationMessageFor(model => model.Classid)
                                                           </div>
                                                </div>
                                               <div class="control-group span5">
                                                    @Html.LabelFor(model => model.department, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.department, new SelectList(Model.DepartmentList, "Dept_id", "Dept_name", "Select Department"), "Select Department")
                                                    @Html.ValidationMessageFor(model => model.department)
                                                           </div>
                                                </div>
                                                
                                                 <div class="control-group span5">
                                                    @Html.LabelFor(model => model.year, new { @class = "control-label" })
                                                       <div class="controls">
                                                    @Html.DropDownListFor(model => model.year, new SelectList(Model.YearList, "yearid", "YearName", "Select Year"), "Select Year")
                                                    @Html.ValidationMessageFor(model => model.year)
                                                           </div>
                                                </div>  
                                     <div class="control-group span5">
                                                            @Html.LabelFor(model => model.subjectid, new { @class = "control-label" })
                                                            <div class="controls">
                                                                @Html.DropDownListFor(m => m.subjectid, new SelectList(Model._subjectlist, "Subjectid", "SubjectNm", "Select Subject"), "Select Subject")
                                                                @Html.ValidationMessageFor(model => model.subjectid)
                                                            </div>
                                                        </div>

                                     <div class="control-group span5">
                                                            @Html.LabelFor(model => model.chapterid, new { @class = "control-label", @for = "select" })
                                                            <div class="controls">
                                                   
                                                               @Html.DropDownListFor(m => m.chapterid, new SelectList(Model._chaptername, "Chapter_id", "ChapterName", "Select Subject"), "Select Subject", new { @for = "select" })
                                                                @Html.ValidationMessageFor(model => model.chapterid)
                                                            </div>
                                                        </div>
                                    <div class="control-group span5">
                                        @Html.LabelFor(model => model.contentname, new {  @class="control-label"})
                                         <div class="controls">
                                        @Html.EditorFor(model => model.contentname)
                                        @Html.ValidationMessageFor(model => model.contentname)
                                             </div>
                                    </div>
                                    <div class="control-group span5">
                                        @Html.LabelFor(model => model.cdescription, new {  @class="control-label" })
                                         <div class="controls">
                                        @Html.EditorFor(model => model.cdescription)
                                        @Html.ValidationMessageFor(model => model.cdescription)
                                             </div>
                                    </div>
                                    
                                    <div class="control-group span5">
                                        @Html.LabelFor(model => model.status, new { @class="control-label"  })
                                         <div class="controls">
                                        @Html.CheckBoxFor(model => model.status, new { @type="checkbox"})
                                        @Html.ValidationMessageFor(model => model.status)
                                             </div>
                                    </div> 
                                     <div class="form-actions span12" style="margin-left:0px">
                                        <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                        <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                    </div>
                                }
                        </fieldset>
                                </form>
					
					</div>
				</div><!--/span-->
			
			</div><!--/row-->
                              <div class="row-fluid sortable">
              <div class="box span12">
                  	<div class="box-header">
						<div class="box-icon">
						
							<a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>
						
						</div>
					</div> 
                  <div class="box-content">
                                        @Html.Partial("_ContentList")
                                      </div>
                        
                
        </div>
        </div>
    </div>
</div>
   
            </div>
    </div>
