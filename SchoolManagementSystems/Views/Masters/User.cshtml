@model Entity.Userviewmodel
@{
    ViewBag.Title = "User";
    Layout = "~/Views/shared/_SharedLayout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        FillPermission();

        $("#remark").hide();
        $("#M_Usr td").css({ "background-color": "orange" });
        $("#lblmsg").text('');
        $('#userid input').attr("readonly", true);
        if ($("#userid input").val() == "0") {
            $("#userid").hide();
            $("#User").val('');
            $("#Pass").val('');
        }
        $("#genid").hide();
        FillType();
        FillStatus();

        function FillType() {
            var item = '<option value="">select Type</option>';
            item += '<option value="1">Student</option>';
            item += '<option value="2">Parent</option>';
            item += '<option value="3">Admin</option>';
            item += '<option value="4">Teacher</option>';
            item += '<option value="5">Employee</option>';
            item += '<option value="6">Librarian</option>';
            item += '<option value="7">StudentAdmin</option>';
            item += '<option value="8">OfficeAdmin</option>';
            $("#Type").append(item);
        }

        function FillStatus() {
            var item = '<option value="">select Status</option>';
            item += '<option value="0">Pending</option>';
            item += '<option value="1">Active</option>';
            item += '<option value="2">InActive</option>';
            $("#Status").append(item);
        }

        $('#Type').change(function () {
            var Type = $("#Type").val();
            var TypeName = null;
            if (Type == 1) { TypeName = "Student"; }
            else if (Type == 2) { TypeName = "Parent"; }
            else if (Type == 3) { TypeName = "Admin"; }
            else if (Type == 4) { TypeName = "Teacher"; }
            else if (Type == 5) { TypeName = "Employee"; }
            else if (Type == 6) { TypeName = "Librarian"; }
            else if (Type == 7) { TypeName = "StudentAdmin"; }
            else if (Type == 8) { TypeName = "OfficeAdmin"; }
            $("#Genid").empty();
            if (Type != "") {
                if (Type == 1) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetStudent")',
                        dataType: 'json',
                        data: { Type: Type },
                        success: function (Peoples) {
                            if (Peoples != "") {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $.each(Peoples, function (i, People) {
                                    item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                });
                                $("#Genid").append(item);
                            }
                            else {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $("#Genid").append(item);
                            }
                            $("#genid").show();
                        },
                        error: function (ex) {
                            alert('Failed to retrieve Peoples.' + ex);
                        }
                    });
                }
                else if (Type == 2) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetParent")',
                        dataType: 'json',
                        data: { Type: Type },
                        success: function (Peoples) {
                            if (Peoples != "") {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $.each(Peoples, function (i, People) {
                                    item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                });
                                $("#Genid").append(item);
                            }
                            else {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $("#Genid").append(item);
                            }
                            $("#genid").show();
                        },
                        error: function (ex) {
                            alert('Failed to retrieve Peoples.' + ex);
                        }
                    });
                }
                else if (Type == 3) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetAdmin")',
                        dataType: 'json',
                        data: { Type: Type },
                        success: function (Peoples) {
                            if (Peoples != "") {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $.each(Peoples, function (i, People) {
                                    item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                });
                                $("#Genid").append(item);
                            }
                            else {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $("#Genid").append(item);
                            }
                            $("#genid").show();
                        },
                        error: function (ex) {
                            alert('Failed to retrieve Peoples.' + ex);
                        }
                    });
                }
                else if (Type == 4 || Type == 5) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetTeacherorEmployee")',
                        dataType: 'json',
                        data: { Type: Type },
                        success: function (Peoples) {
                            if (Peoples != "") {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $.each(Peoples, function (i, People) {
                                    item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                });
                                $("#Genid").append(item);
                            }
                            else {
                                var item = '<option value="">select ' + TypeName + '</option>';
                                $("#Genid").append(item);
                            }
                            $("#genid").show();
                        },
                        error: function (ex) {
                            alert('Failed to retrieve Peoples.' + ex);
                        }
                    });
                }
            }
            else {
                $("#genid").hide();
            }
        });


        $("#result").on("click", ".edit", function (evt) {
            $("#lblmsg").text("");
            var Userid = this.id;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("FillUserDetails")',
                dataType: 'JSON',
                data: { Userid: Userid },
                success: function (data) {
                    clearmsg();
                    $("#Type").val(data.Type)
                    var Type = $("#Type").val();
                    var TypeName = null;
                    if (Type == 1) { TypeName = "Student"; }
                    else if (Type == 2) { TypeName = "Parent"; }
                    else if (Type == 3) { TypeName = "Admin"; }
                    else if (Type == 4) { TypeName = "Teacher"; }
                    else if (Type == 5) { TypeName = "Employee"; }
                    else if (Type == 6) { TypeName = "Librarian"; }
                    else if (Type == 7) { TypeName = "StudentAdmin"; }
                    else if (Type == 8) { TypeName = "OfficeAdmin"; }

                    $("#Genid").empty();
                    if (Type != "") {
                        if (Type == 1) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetStudent")',
                                dataType: 'json',
                                data: { Type: Type },
                                success: function (Peoples) {
                                    if (Peoples != "") {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $.each(Peoples, function (i, People) {
                                            item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                        });
                                        $("#Genid").append(item);
                                    }
                                    else {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $("#Genid").append(item);
                                    }
                                    $("#Genid").val(data.Genid);
                                    $("#genid").show();
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve Peoples.' + ex);
                                }
                            });
                        }
                        else if (Type == 2) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetParent")',
                                dataType: 'json',
                                data: { Type: Type },
                                success: function (Peoples) {
                                    if (Peoples != "") {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $.each(Peoples, function (i, People) {
                                            item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                        });
                                        $("#Genid").append(item);
                                    }
                                    else {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $("#Genid").append(item);
                                    }
                                    $("#Genid").val(data.Genid);
                                    $("#genid").show();
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve Peoples.' + ex);
                                }
                            });
                        }
                        else if (Type == 3) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetAdmin")',
                                dataType: 'json',
                                data: { Type: Type },
                                success: function (Peoples) {
                                    if (Peoples != "") {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $.each(Peoples, function (i, People) {
                                            item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                        });
                                        $("#Genid").append(item);
                                    }
                                    else {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $("#Genid").append(item);
                                    }
                                    $("#Genid").val(data.Genid);
                                    $("#genid").show();
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve Peoples.' + ex);
                                }
                            });
                        }
                        else if (Type == 4 || Type == 5) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetTeacherorEmployee")',
                                dataType: 'json',
                                data: { Type: Type },
                                success: function (Peoples) {
                                    if (Peoples != "") {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $.each(Peoples, function (i, People) {
                                            item += '<option value="' + People.Value + '">' + People.Text + '</option>';
                                        });
                                        $("#Genid").append(item);
                                    }
                                    else {
                                        var item = '<option value="">select ' + TypeName + '</option>';
                                        $("#Genid").append(item);
                                    }
                                    $("#Genid").val(data.Genid);
                                    $("#genid").show();
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve Peoples.' + ex);
                                }
                            });
                        }
                    }
                    else {
                        $("#genid").hide();
                    }
                    $("#genid").show();
                    $("#userid").show();
                    $("#userid input").val(data.Userid);
                    $("#User").val(data.UserName);
                    $("#Pass").val(data.Password);
                    $("#Status").val(data.Status);
                    $("#academicyear").val(data.academicyear);
                    if (data.Status == 2) {
                        $("#remark").show();
                    } else {
                        $("#remark").hide();
                    }
                }
            });
        });

        function clear() {
            $("#Type").val('');
            $("#userid").hide();
            $('#userid input').val('0');
            $("#User").val('');
            $("#Pass").val('');
            $("#Genid").val('');
            $("#genid").hide();
            $("#Status").val('');
            $("#academicyear").val('');
            $("#remark").hide();
        }
        function clearmsg() {
            $("#msg").hide();
            $("#msgs").hide();
        }


        $('#User').blur(function () {
            $("#lblmsg").text("");
            var UserName = $('#User').val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("check_duplicate_User")',
                dataType: 'JSON',
                data: { UserName: UserName },
                success: function (data) {
                    if (data.UserName != null) {
                        $("#msg").show();
                        $("#lblmsg").text("UserName Already Exists!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $('#User').val('');
                        return false;
                    }
                }
            });
        });

        $("#insert").click(function () {
            setTimeout(function () {
                validations();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLUser")',
                    data: $('#frm').serialize() + "&evt=submit&id=0",
                    success: function (result) {
                        $("#msgs").show();
                        $("#lblmsgs").text("User Profile updated successfully!..");
                        $("#lblmsgs").css({ "color": "green" });
                        $("#lblmsgs").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }, 1000);
        });

        $("#reset").click(function () {
            clear();
            clearmsg();
        });

        $('#Status').change(function () {
            if ($('#Status').val() == 2) {
                $("#remark").show();
            }
            else {
                $("#remark").hide();
                $("#academicyear").val('NA');
            }
        });

        $("#result").on("click", ".delete", function (evt) {
            var Userid = this.id;
            var flag = confirm('Are you sure you want to delete this User?');
            if (flag) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DMLUser")',
                    data: $('#frm').serialize() + "&evt=Delete&id=" + Userid + "",
                    success: function (result) {
                        $("#msg").show();
                        $("#lblmsg").text("User Profile deleted successfully!..");
                        $("#lblmsg").css({ "color": "orange" });
                        $("#lblmsg").css({ "font-size": "15px" });
                        $("#result").html(result);
                        clear();
                        ReloadPaging();
                    }
                });
            }
        });

        function validations() {
            var cnt = 0;

            if ($("#Type").val() == '') {
                cnt++;
                $("#Type").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Type").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#User").val() == '') {
                cnt++;
                $("#User").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#User").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($("#Pass").val() == '') {
                cnt++;
                $("#Pass").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Pass").css({
                    "border": "",
                    "background": ""
                });
            }
            if ($("#Type").val() != 3) {
                if ($("#Genid").val() == '') {
                    cnt++;
                    $("#Genid").css({
                        "border": "2px solid red"
                    });
                }
            }
            else {
                $("#Genid").css({
                    "border": "",
                    "background": ""
                });
            }

            if ($('#Status').val() == 2) {
                if ($("#academicyear").val() == '') {
                    cnt++;
                    $("#academicyear").css({
                        "border": "2px solid red"
                    });
                }
                else {
                    $("#academicyear").css({
                        "border": "",
                        "background": ""
                    });
                }
            }

            if ($("#Status").val() == '') {
                cnt++;
                $("#Status").css({
                    "border": "2px solid red"
                });
            }
            else {
                $("#Status").css({
                    "border": "",
                    "background": ""
                });
            }


            if (cnt != 0)
                e.preventDefault();
        }

        ReloadPaging();
    });
</script>
@Html.HiddenFor(m => m.Userid)
@Html.Partial("_PermissionHiddenFlds")
<div class="container-fluid-full">

    <div class="row-fluid">
        @Html.Partial("_MasterSubMenu")
        <div id="content" class="span10">
            <div class="row-fluid">

                <ul class="breadcrumb">
                    <li>
                        <i class="icon-home"></i>@Html.ActionLink("Home", "Login", "Login")<i class="icon-angle-right"></i>
                        @Html.ActionLink("Masters", "User", "Masters", "")<i class="icon-angle-right"></i>
                    </li>
                    <li class="active">User Master</li>
                    @* <div style="float: right;">
                            @using (Html.BeginForm())
                            {

                                @Html.TextBox("Search_Data", ViewBag.CurrentFilter as string)
                                <input type="submit" value="Find" />
                            }
                        </div>*@
                </ul>

                <div class="panel-body">
                    <div id="msg" hidden="hidden" class="alert alert-warning" visible="false">
                        <strong><label id="lblmsg"></label></strong>
                    </div>
                    <div id="msgs" hidden="hidden" class="alert alert-success" visible="false">
                        <strong><label id="lblmsgs"></label></strong>
                    </div>
                </div>
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            <form id="frm" class="form-horizontal">


                                <fieldset>
                                    @using (Html.BeginForm("", "", FormMethod.Post, new { id = "frm", @class = "form-horizontal" }))
                                    {
                                        @Html.ValidationSummary(true)

                                        <div id="userid" class="control-group">
                                            @Html.LabelFor(model => model.Userid, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.Userid, new { @class = "input-midium", @id = "focusedInput", @type = "text" })
                                                @Html.ValidationMessageFor(model => model.Userid)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.User, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.User, new { @class = "input-midium", @id = "focusedInput", @type = "text" })
                                                @Html.ValidationMessageFor(model => model.User)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.Pass, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.PasswordFor(model => model.Pass, new { @class = "input-midium", @id = "focusedInput", @type = "password" })
                                                @Html.ValidationMessageFor(model => model.Pass)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.Type, new { @class = "control-label", @for = "Type" })
                                            <div class="controls">
                                                <select id="Type" name="Type"></select>
                                                @Html.ValidationMessageFor(model => model.Type)
                                            </div>
                                        </div>
                                        <div id="genid" class="control-group">
                                            @Html.LabelFor(model => model.Genid, new { @class = "control-label", @for = "Genid" })
                                            <div class="controls">
                                                <select id="Genid" name="Genid"></select>
                                                @Html.ValidationMessageFor(model => model.Genid)
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.Status, new { @class = "control-label", @for = "Status" })
                                            <div class="controls">
                                                <select id="Status" name="Status"></select>
                                                @Html.ValidationMessageFor(model => model.Status)
                                            </div>
                                        </div>
                                        <div id="remark" class="control-group">
                                            @Html.LabelFor(model => model.academicyear, new { @class = "control-label", @for = "focusedInput" })
                                            <div class="controls">
                                                @Html.TextAreaFor(model => model.academicyear, new { @class = "input-midium", @id = "focusedInput", @type = "text" })
                                                @Html.ValidationMessageFor(model => model.academicyear)
                                            </div>
                                        </div>

                                        <div class="form-actions">
                                            <input type="button" class="btn btn-primary" id="insert" value="Submit" />
                                            <input type="button" class="btn btn-primary" id="reset" value="Reset" />
                                        </div>
                                    }
                                </fieldset>
                            </form>

                        </div>
                    </div><!--/span-->

                </div><!--/row-->
                <div class="row-fluid sortable">
                    <div class="box span12">
                        <div class="box-header" data-original-title>
                            <h2><i class="fa fa-edit"></i><span class="break"></span>Form Elements</h2>
                            <div class="box-icon">

                                <a href="#" class="btn-minimize"><i class="fa fa-chevron-up" aria-hidden="true"></i></a>

                            </div>
                        </div>
                        <div class="box-content">
                            @Html.Partial("_UserList")
                        </div>


                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
